<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>Course Of Growth</title>
        <subtitle></subtitle>
        <icon>https://nc3021.github.io/images/favicon.ico</icon>
        <link>https://nc3021.github.io</link>
        <author>
          <name>页川木子</name>
        </author>
        <description>只要立刻开始一切都还没晚</description>
        <language>zh-CN</language>
        <pubDate>Thu, 23 Dec 2021 01:07:34 +0800</pubDate>
        <lastBuildDate>Thu, 23 Dec 2021 01:07:34 +0800</lastBuildDate>
        <category term="学习，成长，编程" />
        <item>
            <guid isPermalink="true">https://nc3021.github.io/2021/12/23/front-end/Vue/</guid>
            <title>Vue学习</title>
            <link>https://nc3021.github.io/2021/12/23/front-end/Vue/</link>
            <category term="前端" scheme="https://nc3021.github.io/categories/front-end/" />
            <category term="前端" scheme="https://nc3021.github.io/tags/%E5%89%8D%E7%AB%AF/" />
            <pubDate>Thu, 23 Dec 2021 01:07:34 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;vue&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vue&#34;&gt;#&lt;/a&gt; Vue&lt;/h1&gt;
&lt;h2 id=&#34;认识vue&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#认识vue&#34;&gt;#&lt;/a&gt; 认识 Vue&lt;/h2&gt;
&lt;h3 id=&#34;基本认识&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基本认识&#34;&gt;#&lt;/a&gt; 基本认识&lt;/h3&gt;
&lt;p&gt;​	Vue 是一种渐进式 JavaScript 框架，用来动态构建用户界面。&lt;/p&gt;
&lt;p&gt;​	&lt;strong&gt;开发者&lt;/strong&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211217175501.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;基本特点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基本特点&#34;&gt;#&lt;/a&gt; 基本特点&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;遵循 MVVM 模式&lt;/li&gt;
&lt;li&gt;编码简洁，体积小，运行效率高，适合 移动 / PC 端开发&lt;/li&gt;
&lt;li&gt;它本身只关注 UI，可以轻松引入 vue 插件或其它第三方库开发项目&lt;/li&gt;
&lt;li&gt;采用组件化模式，提高代码复用率、且让代码更好维护&lt;/li&gt;
&lt;li&gt;声明式编码，让编码人员无需直接操作 DOM，提高开发效率&lt;/li&gt;
&lt;li&gt;使用虚拟 DOM 和 Diff 算法，尽量复用 DOM 节点&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;与其它前端 JS 框架的关联：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;借鉴 angular 的 &lt;strong&gt;模板&lt;/strong&gt; 和 &lt;strong&gt;数据绑定&lt;/strong&gt; 技术&lt;/li&gt;
&lt;li&gt;借鉴 react 的 &lt;strong&gt;组件化&lt;/strong&gt; 和 &lt;strong&gt;虚拟 DOM&lt;/strong&gt; 技术&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;vue的使用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vue的使用&#34;&gt;#&lt;/a&gt; Vue 的使用&lt;/h3&gt;
&lt;h4 id=&#34;引入vuejs&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#引入vuejs&#34;&gt;#&lt;/a&gt; 引入 Vue.js&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;本地引入&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;../js/vue.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CDN 引入&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;创建vue对象&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#创建vue对象&#34;&gt;#&lt;/a&gt; 创建 Vue 对象&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;想让 Vue 工作，就必须创建一个 Vue 实例，且要传入一个配置对象；&lt;/li&gt;
&lt;li&gt;root 容器里的代码依然符合 html 规范，只不过混入了一些特殊的 Vue 语法；&lt;/li&gt;
&lt;li&gt;root 容器里的代码被称为【Vue 模板】；&lt;/li&gt;
&lt;li&gt;Vue 实例和容器是一一对应的；&lt;/li&gt;
&lt;li&gt;真实开发中只有一个 Vue 实例，并且会配合着组件一起使用；&lt;/li&gt;
&lt;li&gt;
中的xxx要写js表达式，且xxx可以自动读取到data中的所有属性；
&lt;/li&gt;
&lt;li&gt;一旦 data 中的数据发生改变，那么页面中用到该数据的地方也会自动更新；&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Vue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    el&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;#root&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;//&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    data&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        name&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Sakura&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        address&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;chengdu&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;​	由 Vue 管理的函数，一定不要写箭头函数，一旦写了箭头函数，this 就不再是 Vue 实例了。&lt;/p&gt;
&lt;h4 id=&#34;el与data&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#el与data&#34;&gt;#&lt;/a&gt; el 与 data&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;el&lt;/code&gt; ：用于指定当前 Vue 实例为哪个容器服务，值通常为 CSS 选择器字符串；&lt;/p&gt;
&lt;p&gt;&lt;code&gt;data&lt;/code&gt; ：用于存储数据，数据供 el 所指定的容器去使用；&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;el 的两种写法&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;new Vue 的时候配置 el 属性&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; v &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Vue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	el&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;#root&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	data&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		name&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Sakura&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;先创建 Vue 实例，再通过 v.$mount (xxx) 指定 el 的值&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; v &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Vue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	data&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		name&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Sakura&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;v&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;$mount&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;root&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;data 的两种写法&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;对象式&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;data&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	name&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;sakura&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;函数式&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;@@@&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		name&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;sakura&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;mvvm模型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#mvvm模型&#34;&gt;#&lt;/a&gt; MVVM 模型&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211217220326.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;M&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;模型 (Model) ：data 中的数据&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;V&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;视图 (View) ：模板代码（不是静态页面） （两个语法：指令，大括号表达式）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;VM&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;viewModel: 视图模型（Vue 的实例）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Dom Listeners （Dom 监听）&lt;/li&gt;
&lt;li&gt;Data Bindings （数据绑定）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;MVVM&lt;/strong&gt;&lt;br /&gt;
MVVM 本质上是 MVC （Model-View- Controller）的改进版。即模型 - 视图 - 视图模型。&lt;/p&gt;
&lt;p&gt;​	模型 model 指的是后端传递的数据，视图 view 指的是所看到的页面。&lt;/p&gt;
&lt;p&gt;​	视图模型 viewModel 是 mvvm 模式的核心，它是连接 view 和 model 的桥梁。它有两个方向：&lt;/p&gt;
&lt;p&gt;​	将模型转化成视图，即将后端传递的数据转化成所看到的页面。实现的方式是：数据绑定&lt;br /&gt;
​	将视图转化成模型，即将所看到的页面转化成后端的数据。实现的方式是：DOM 事件监听&lt;/p&gt;
&lt;p&gt;​	这两个方向都实现的，我们称之为数据的双向绑定&lt;/p&gt;
&lt;h2 id=&#34;模板语法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#模板语法&#34;&gt;#&lt;/a&gt; 模板语法&lt;/h2&gt;
&lt;h3 id=&#34;插值语法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#插值语法&#34;&gt;#&lt;/a&gt; 插值语法&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;语法： &lt;code&gt;&amp;#123;&amp;#123;XXX&amp;#125;&amp;#125;&lt;/code&gt;   xxx 是 js 表达式，可以直接读取到 data 中的所有属性；&lt;/li&gt;
&lt;li&gt;功能：用于解析标签体内容，向页面输出数据&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;指令语法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#指令语法&#34;&gt;#&lt;/a&gt; 指令语法&lt;/h3&gt;
&lt;h4 id=&#34;v-bind&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#v-bind&#34;&gt;#&lt;/a&gt; v-bind&lt;/h4&gt;
&lt;p&gt;功能：强制数据绑定（单向绑定）&lt;/p&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;v-bind:xxx=&#39;yyy&#39;   //yyy会作为表达式解析执行
:xxx=&#39;yyy&#39;        //简写
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;特点：数据只能从 data 流向页面&lt;/p&gt;
&lt;h4 id=&#34;v-model&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#v-model&#34;&gt;#&lt;/a&gt; v-model&lt;/h4&gt;
&lt;p&gt;功能：强制数据绑定（双向绑定）&lt;/p&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;v-model:value=&#39;xxx&#39;    
v-model=&#39;xxx&#39;        //简写
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;特点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;数据不仅能从 data 流向页面，还能从页面流向 data&lt;/li&gt;
&lt;li&gt;只能用于表单类元素（输入类元素）&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;v-on&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#v-on&#34;&gt;#&lt;/a&gt; v-on&lt;/h4&gt;
&lt;p&gt;功能：绑定指定事件名的回调函数&lt;/p&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;v-on:click=&#39;xxx&#39;
v-on:click=&#39;xxx($event，参数)&#39;  //获得参数与点击事件
@keyup=&#39;xxx&#39;          //按钮抬起时触发
@keydown=&#39;xxx&#39;        //按钮敲下时触发
@click=&#39;xxx&#39;          //简写
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;v-show&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#v-show&#34;&gt;#&lt;/a&gt; v-show&lt;/h4&gt;
&lt;p&gt;功能：条件渲染；&lt;/p&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;div v-show=&#39;xxx&#39;&amp;gt;&amp;lt;/div&amp;gt;   
//xxx表达式的值为ture或false
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;适用于：切换频率较高的场景；&lt;/p&gt;
&lt;p&gt;特点：不展示的 DOM 元素未被移除，只是被隐藏掉&lt;/p&gt;
&lt;h4 id=&#34;v-if&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#v-if&#34;&gt;#&lt;/a&gt; v-if&lt;/h4&gt;
&lt;p&gt;功能：条件渲染；&lt;/p&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;div v-if=&#39;xxx&#39;&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;div v-else-if=&#39;xxx&#39;&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;div v-else&amp;gt;&amp;lt;/div&amp;gt;
//xxx表达式的值为true或false
&amp;lt;template v-if=&#39;xxx&#39;&amp;gt;
	&amp;lt;h2&amp;gt;&amp;lt;/h2&amp;gt;
	&amp;lt;h2&amp;gt;&amp;lt;/h2&amp;gt;
	&amp;lt;h2&amp;gt;&amp;lt;/h2&amp;gt;
&amp;lt;/template&amp;gt;//不影响结构的使用方法
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;适用于：切换频率较低的场景&lt;/p&gt;
&lt;p&gt;特点：不展示的 DOM 元素直接被移除&lt;/p&gt;
&lt;p&gt;注意：v-if 可以和 v-else-if、v-else 一起使用，但要求结构不能被 “打断”；&lt;/p&gt;
&lt;h4 id=&#34;v-for&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#v-for&#34;&gt;#&lt;/a&gt; v-for&lt;/h4&gt;
&lt;p&gt;功能：用于展示列表数据，可遍历数组、对象、字符串、指定次数&lt;/p&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;v-for=&#39;(item.index) in xxx&#39; :key=&#39;yyy&#39;
//xxx为数组或对象
v-for=&#39;(item.index) of xxx&#39; :key=&#39;yyy&#39;
//xxx为字符串或数字（用的比较少）
//in与of的使用没有区别
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;数组: (item, index)&lt;/li&gt;
&lt;li&gt;对象: (value, key)&lt;/li&gt;
&lt;li&gt;字符串：(char, index)&lt;/li&gt;
&lt;li&gt;数字：(number, index)&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;key的原理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#key的原理&#34;&gt;#&lt;/a&gt; key 的原理&lt;/h5&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211222204421.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;虚拟 DOM 中 key 的作用：&lt;/p&gt;
&lt;p&gt;key 是虚拟 DOM 对象的标识，当数据发生变化时，Vue 会根据【新数据】生成【新的虚拟 DOM】, 随后 Vue 进行【新虚拟 DOM】与【旧虚拟 DOM】的差异比较，比较规则如下：&lt;/p&gt;
&lt;p&gt;对比规则：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;旧虚拟 DOM 中找到了与新虚拟 DOM 相同的 key：&lt;br /&gt;
①若虚拟 DOM 中内容没变，直接使用之前的真实 DOM；&lt;br /&gt;
②若虚拟 DOM 中内容变了，则生成新的真实 DOM，随后替换掉页面中之前的真实 DOM；&lt;/li&gt;
&lt;li&gt;旧虚拟 DOM 中未找到与新虚拟 DOM 相同的 key 创建新的真实 DOM，随后渲染到到页面。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;用 index 作为 key 可能会引发的问题：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;若对数据进行：逆序添加、逆序删除等破坏顺序操作：会产生没有必要的真实 DOM 更新 ==&amp;gt; 界面效果没问题，但效率低；&lt;/li&gt;
&lt;li&gt;如果结构中还包含输入类的 DOM： 会产生错误 DOM 更新 ==&amp;gt; 界面有问题&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;开发中如何选择 key:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;最好使用每条数据的唯一标识作为 key, 比如 id、手机号、身份证号、学号等唯一值。&lt;/li&gt;
&lt;li&gt;如果不存在对数据的逆序添加、逆序删除等破坏顺序操作，仅用于渲染列表用于展示，使用 index 作为 key 是没有问题的。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;v-text&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#v-text&#34;&gt;#&lt;/a&gt; v-text&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;作用：向其所在的节点中渲染文本内容。&lt;/li&gt;
&lt;li&gt;与插值语法的区别： &lt;code&gt;v-text&lt;/code&gt;  会替换掉节点中的内容， &lt;code&gt;&amp;#123;&amp;#123;xx&amp;#125;&amp;#125;&lt;/code&gt;  则不会。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;v-html&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#v-html&#34;&gt;#&lt;/a&gt; v-html&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;作用：向指定节点中渲染包含 html 结构的内容。&lt;/li&gt;
&lt;li&gt;与插值语法的区别：
&lt;ul&gt;
&lt;li&gt;v-html 会替换掉节点中所有的内容，则不会&lt;/li&gt;
&lt;li&gt;v-html 可以识别 html 结构。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;严重注意：v-html 有安全性问题！！！！
&lt;ul&gt;
&lt;li&gt;在网站上动态渲染任意 HTML 是非常危险的，容易导致 XSS 攻击。&lt;/li&gt;
&lt;li&gt;一定要在可信的内容上使用 v-html，永不要用在用户提交的内容上！&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;v-clock&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#v-clock&#34;&gt;#&lt;/a&gt; v-clock&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;本质是一个特殊属性（没有值），Vue 实例创建完毕并接管容器后会删掉 c-clock 属性；&lt;/li&gt;
&lt;li&gt;使用 CSS（即通过属性选择器 &lt;code&gt;[v-cloak] &amp;#123; display: none &amp;#125;&lt;/code&gt; ）配合 v-clock 可以解决网速慢时页面展示出的问题。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;v-once&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#v-once&#34;&gt;#&lt;/a&gt; v-once&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;v-once 所在节点在初次动态渲染后，就视为静态内容了。&lt;/li&gt;
&lt;li&gt;以后数据的改变不会引起 v-once 所在结构的更新，可以用于优化性能。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;v-pre&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#v-pre&#34;&gt;#&lt;/a&gt; v-pre&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;跳过其所在节点的编译过程。&lt;/li&gt;
&lt;li&gt;可利用它跳过：没有使用指令语法、没有使用插值语法的节点，会加快编译。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;自定义指令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#自定义指令&#34;&gt;#&lt;/a&gt; 自定义指令&lt;/h3&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;局部指令&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;//对象式
new Vue(&amp;#123;
	dirextives:&amp;#123;
		指令名:&amp;#123;
			配置对象1()&amp;#123;xxx&amp;#125;,
			配置对象2()&amp;#123;xxx&amp;#125;,
				&amp;#125;&amp;#125;
		&amp;#125;)
//函数式
new Vue(&amp;#123;
	directives()&amp;#123;&amp;#125;
&amp;#125;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;全局指令&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;//对象式
Vue.dirctive(指令名，&amp;#123;
	配置对象1()&amp;#123;&amp;#125;,
	配置对象2()&amp;#123;&amp;#125;,
&amp;#125;)
//函数式
Vue.directive(指令名,回调函数)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;配置对象中的三个常用回调：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.bind&lt;/code&gt; ：指令与元素成功绑定时调用；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.inserted&lt;/code&gt; ：指令所在元素被插入页面时调用；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;update&lt;/code&gt; ：指令所在模板结构被重新解析时调用。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;注意事项：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;指令定义时不加 &lt;code&gt;v-&lt;/code&gt; ，但使用时要加 &lt;code&gt;v-&lt;/code&gt; ;&lt;/li&gt;
&lt;li&gt;指令名如果是多个单词时，要使用 xxx-yyy 的命名方式。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;代码实例：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
	&amp;lt;head&amp;gt;
		&amp;lt;meta charset=&amp;quot;UTF-8&amp;quot; /&amp;gt;
		&amp;lt;title&amp;gt;自定义指令&amp;lt;/title&amp;gt;
		&amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;../js/vue.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
	&amp;lt;/head&amp;gt;
	&amp;lt;body&amp;gt;
		&amp;lt;!-- 准备好一个容器--&amp;gt;
		&amp;lt;div id=&amp;quot;root&amp;quot;&amp;gt;
			&amp;lt;h2&amp;gt;&amp;#123;&amp;#123;name&amp;#125;&amp;#125;&amp;lt;/h2&amp;gt;
			&amp;lt;h2&amp;gt;当前的n值是：&amp;lt;span v-text=&amp;quot;n&amp;quot;&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;/h2&amp;gt;
			&amp;lt;!-- &amp;lt;h2&amp;gt;放大10倍后的n值是：&amp;lt;span v-big-number=&amp;quot;n&amp;quot;&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;/h2&amp;gt; --&amp;gt;
			&amp;lt;h2&amp;gt;放大10倍后的n值是：&amp;lt;span v-big=&amp;quot;n&amp;quot;&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;/h2&amp;gt;
			&amp;lt;button @click=&amp;quot;n++&amp;quot;&amp;gt;点我n+1&amp;lt;/button&amp;gt;
			&amp;lt;hr/&amp;gt;
			&amp;lt;input type=&amp;quot;text&amp;quot; v-fbind:value=&amp;quot;n&amp;quot;&amp;gt;
		&amp;lt;/div&amp;gt;
	&amp;lt;/body&amp;gt;
	
	&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;
		Vue.config.productionTip = false

		//定义全局指令
		/* Vue.directive(&#39;fbind&#39;,&amp;#123;
			//指令与元素成功绑定时（一上来）
			bind(element,binding)&amp;#123;
				element.value = binding.value
			&amp;#125;,
			//指令所在元素被插入页面时
			inserted(element,binding)&amp;#123;
				element.focus()
			&amp;#125;,
			//指令所在的模板被重新解析时
			update(element,binding)&amp;#123;
				element.value = binding.value
			&amp;#125;
		&amp;#125;) */

		new Vue(&amp;#123;
			el:&#39;#root&#39;,
			data:&amp;#123;
				name:&#39;Sakura&#39;,
				n:1
			&amp;#125;,
			directives:&amp;#123;
				//big函数何时会被调用？1.指令与元素成功绑定时（一上来）。2.指令所在的模板被重新解析时。
				/* &#39;big-number&#39;(element,binding)&amp;#123;
					// console.log(&#39;big&#39;)
					element.innerText = binding.value * 10
				&amp;#125;, */
				big(element,binding)&amp;#123;
					console.log(&#39;big&#39;,this) //注意此处的this是window
					// console.log(&#39;big&#39;)
					element.innerText = binding.value * 10
				&amp;#125;,
				fbind:&amp;#123;
					//指令与元素成功绑定时（一上来）
					bind(element,binding)&amp;#123;
						element.value = binding.value
					&amp;#125;,
					//指令所在元素被插入页面时
					inserted(element,binding)&amp;#123;
						element.focus()
					&amp;#125;,
					//指令所在的模板被重新解析时
					update(element,binding)&amp;#123;
						element.value = binding.value
					&amp;#125;
				&amp;#125;
			&amp;#125;
		&amp;#125;)
		
	&amp;lt;/script&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;事件处理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#事件处理&#34;&gt;#&lt;/a&gt; 事件处理&lt;/h2&gt;
&lt;h3 id=&#34;绑定监听&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#绑定监听&#34;&gt;#&lt;/a&gt; 绑定监听&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;使用 v-on:xxx 或 @xxx 绑定事件 xxx；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;事件的回调方法配置在 Vue 的 methods 对象中，最终会在 vm 上（methods 中配置的方法不能用箭头函数，否则 this 指向 windows）；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;事件对象&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;默认事件形参： &lt;code&gt;event&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;隐含属性对象： &lt;code&gt;$event&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$event&lt;/code&gt;  就是当前触发事件的元素，即使不传  &lt;code&gt;$event&lt;/code&gt; ，在回调函数中也可以使用  &lt;code&gt;event&lt;/code&gt;  这个参数。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;event 方法：&lt;/p&gt;
&lt;p&gt;event.target.value：获得当前元素的值&lt;/p&gt;
&lt;p&gt;event.key：获得按键的名&lt;/p&gt;
&lt;p&gt;event.keyCode：获得按键的编码&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;事件修饰符&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#事件修饰符&#34;&gt;#&lt;/a&gt; 事件修饰符&lt;/h3&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在 methods 上：&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211222133416.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;@click.xxx=&#39;yyy&#39;
@click.xx1.xx2=&#39;yyy&#39;     //可以同时使用多个修饰符，按左右顺序执行
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;prevent&lt;/strong&gt;: 阻止默认事件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;stop&lt;/strong&gt;: 阻止事件冒泡&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;once&lt;/strong&gt;：事件只触发一次&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;capture&lt;/strong&gt;：使用事件的捕获模式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;self&lt;/strong&gt;：只有 event.target 是当前操作的元素才触发事件；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;passive&lt;/strong&gt;：事件的默认行为立即执行，无需等待事件回调执行完毕；&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;键盘修饰符&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#键盘修饰符&#34;&gt;#&lt;/a&gt; 键盘修饰符&lt;/h3&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@keyup.xxx=&#39;yyy&#39;        //xxx为键盘修饰符
@keydown.xx1.xx2=&#39;yyy&#39;     //可以同时使用多个修饰符，常用于系统修饰键
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Vue 提供的按键别名&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;回车&lt;/strong&gt;：enter&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;删除&lt;/strong&gt;：delete&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;退出&lt;/strong&gt;：esc&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;空格&lt;/strong&gt;：space&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;换行&lt;/strong&gt;：tab（特殊，必须配合 keydown 去使用）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;上&lt;/strong&gt;：up&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;下&lt;/strong&gt;：down&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;左&lt;/strong&gt;：left&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;右&lt;/strong&gt;：right&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Vue 未提供的按键别名&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;可以通过 event.key 获得按键的名（若名称为两个单词则转换为小写短横线命名）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;系统修饰键（ctrl、alt、shift、meta）&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用 keyup：按下修饰键的同时，再按下其他键，随后释放其他键，事件才被触发；&lt;/li&gt;
&lt;li&gt;使用 keydown：正常触发事件&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;计算属性与监听属性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#计算属性与监听属性&#34;&gt;#&lt;/a&gt; 计算属性与监听属性&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;computed 和 watch 之间的区别：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;computed 能完成的功能，watch 都可以完成；&lt;/li&gt;
&lt;li&gt;watch 能完成的功能，computed 不一定能完成，例如：watch 可以进行异步操作。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;两个重要的小原则：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;所被 Vue 管理的函数，最好写成普通函数，这样 this 的指向才是 vm 或组件实例对象；&lt;/li&gt;
&lt;li&gt;所有不被 Vue 所管理的函数（定时器的回调函数、ajax 的回调函数等、Promise 的回调函数），最好写成箭头函数，这样 this 的指向才是 vm 或组件实例对象。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;计算属性computed&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#计算属性computed&#34;&gt;#&lt;/a&gt; 计算属性 computed&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;方法：在 computed 属性对象中定义计算属性的方法；&lt;/li&gt;
&lt;li&gt;使用：在页面中使用来显示计算结果；&lt;/li&gt;
&lt;li&gt;定义：通过已有属性计算得到所需要的属性；&lt;/li&gt;
&lt;li&gt;原理：底层借助了 &lt;code&gt;Objcet.defineproperty&lt;/code&gt;  方法提供的 &lt;code&gt;getter&lt;/code&gt;  和 &lt;code&gt;setter&lt;/code&gt; ；&lt;/li&gt;
&lt;li&gt;优势：与 methods 实现相比，内部有缓存机制（复用），效率更高，调试方便；&lt;/li&gt;
&lt;li&gt;计算属性最终会出现在 vm 上，直接读取即可&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;**get ()** 的执行：&lt;/p&gt;
&lt;p&gt;初次读取时会执行一次，当依赖的数据（已定义的属性）发生改变时会再次被调用；&lt;/p&gt;
&lt;p&gt;**set ()** 的执行：&lt;/p&gt;
&lt;p&gt;计算属性被修改时被调用，用于引起计算时所依赖的数据发生改变；&lt;/p&gt;
&lt;p&gt;代码实例：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;body&amp;gt;
    &amp;lt;div id=&amp;quot;root&amp;quot;&amp;gt;
        姓:&amp;lt;input type=&amp;quot;text&amp;quot; v-model=&amp;quot;firstname&amp;quot;&amp;gt;&amp;lt;br&amp;gt;
        名:&amp;lt;input type=&amp;quot;text&amp;quot; v-model=&#39;lastname&#39;&amp;gt;&amp;lt;br&amp;gt;
        姓名：&amp;lt;span&amp;gt;&amp;#123;&amp;#123;fullname&amp;#125;&amp;#125;&amp;lt;/span&amp;gt;
    &amp;lt;/div&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;script&amp;gt;
    const vm = new Vue(&amp;#123;
        el: &#39;#root&#39;,
        data: &amp;#123;
            firstname: &#39;张&#39;,
            lastname: &#39;三&#39;,
        &amp;#125;,
        //完整写法
        computed: &amp;#123;
            fullname: &amp;#123;
                get() &amp;#123;
                    return this.firstname.slice(0, 2) + &#39;-&#39; + this.lastname
                &amp;#125;,
                set(value) &amp;#123;
                    console.log(&#39;set&#39;, value)
                    const arr = value.split(&#39;-&#39;)
                    this.firstname = arr[0]
                    this.lastname = arr[1]
                &amp;#125;
            &amp;#125;
        &amp;#125;,
    &amp;#125;)
&amp;lt;/script&amp;gt;
//简写(省略set)
fullName()&amp;#123;
	console.log(&#39;get被调用了&#39;)
	return this.firstName + &#39;-&#39; + this.lastName
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;监视属性watch&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#监视属性watch&#34;&gt;#&lt;/a&gt; 监视属性 watch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;使用方法：通过 vm 对象的 &lt;code&gt;$watch()&lt;/code&gt;  或 &lt;code&gt;watch&lt;/code&gt;  属性配置来监视指定的属性；&lt;/li&gt;
&lt;li&gt;功能：当被监视的属性变化时，回调函数自动调用，进行相关操作；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;深度监视&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Vue 中的 watch 默认不监测对象内部值的改变（一层）。&lt;/li&gt;
&lt;li&gt;配置 deep:true 可以监测对象内部值改变（多层）。&lt;/li&gt;
&lt;li&gt;备注：&lt;/li&gt;
&lt;li&gt;(1). Vue 自身可以监测对象内部值的改变，但 Vue 提供的 watch 默认不可以！&lt;/li&gt;
&lt;li&gt;(2). 使用 watch 时根据数据的具体结构，决定是否采用深度监视。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;代码实例：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;//watch属性配置
watch:&amp;#123;
	isHot:&amp;#123;
		immediate:true, //初始化时让handler调用一下
		handler(newValue,oldValue)&amp;#123;
			console.log(&#39;isHot被修改了&#39;,newValue,oldValue)
		&amp;#125;，
  	
	&amp;#125;
&amp;#125;
//$watch()方法配置
vm.$watch(&#39;isHot&#39;,&amp;#123;
	immediate:true, //初始化时让handler调用一下
	handler(newValue,oldValue)&amp;#123;
		console.log(&#39;isHot被修了&#39;,newValue,oldValue)
	&amp;#125;
&amp;#125;)
//深度监视
numbers:&amp;#123;
	deep:true,
	handler()&amp;#123;
		console.log(&#39;numbers改变了&#39;)
	&amp;#125;
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;watch 属性的简写&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;当 watch 属性的配置项只有 handler 的时候&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;//正常写法
//第一种
isHot:&amp;#123;
	// immediate:true, //初始化时让handler调用一下
	// deep:true,//深度监视
	handler(newValue,oldValue)&amp;#123;
		console.log(&#39;isHot被修改了&#39;,newValue,oldValue)
	&amp;#125;
&amp;#125;
//第二种
vm.$watch(&#39;isHot&#39;,&amp;#123;
	immediate:true, //初始化时让handler调用一下
	handler(newValue,oldValue)&amp;#123;
		console.log(&#39;isHot被修了&#39;,newValue,oldValue)
	&amp;#125;
&amp;#125;)

//简写
//第一种
isHot(newValue,oldValue)&amp;#123;
	console.log(&#39;isHot被修改了&#39;,newValue,oldValue,this)
&amp;#125; 
//第二种
vm.$watch(&#39;isHot&#39;，function(newValue,oldValue)&amp;#123;
	console.log(&#39;isHot被修了&#39;,newValue,oldValue)
&amp;#125;)
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;列表过滤与排序&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#列表过滤与排序&#34;&gt;#&lt;/a&gt; 列表过滤与排序&lt;/h3&gt;
&lt;p&gt;一般采用计算属性更为简单方便&lt;/p&gt;
&lt;p&gt;代码实例：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;//关键字搜索列表
&amp;lt;body&amp;gt;
    &amp;lt;div id=&amp;quot;root&amp;quot;&amp;gt;
        &amp;lt;h2&amp;gt;人员列表&amp;lt;/h2&amp;gt;
        &amp;lt;input type=&amp;quot;text&amp;quot; v-model=&#39;keyWord&#39; placeholder=&amp;quot;请输入名字&amp;quot;&amp;gt;
        &amp;lt;ul&amp;gt;
            &amp;lt;li v-for=&amp;quot;(p,index) of filperson1&amp;quot; :key=&#39;id&#39;&amp;gt;
                &amp;#123;&amp;#123;p.name&amp;#125;&amp;#125;--&amp;#123;&amp;#123;p.age&amp;#125;&amp;#125;--&amp;#123;&amp;#123;p.sex&amp;#125;&amp;#125;
            &amp;lt;/li&amp;gt;
        &amp;lt;/ul&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;script&amp;gt;
    const vm = new Vue(&amp;#123;
        el: &#39;#root&#39;,
        data: &amp;#123;
            keyWord: &#39;&#39;,
            persons: [
                &amp;#123; id: &#39;001&#39;, name: &#39;马冬梅&#39;, age: 18, sex: &#39;女&#39; &amp;#125;,
                &amp;#123; id: &#39;002&#39;, name: &#39;周冬雨&#39;, age: 19, sex: &#39;女&#39; &amp;#125;,
                &amp;#123; id: &#39;003&#39;, name: &#39;周杰伦&#39;, age: 20, sex: &#39;男&#39; &amp;#125;,
                &amp;#123; id: &#39;004&#39;, name: &#39;温兆伦&#39;, age: 20, sex: &#39;男&#39; &amp;#125;,
            ],
        &amp;#125;,
        computed: &amp;#123;
            filperson1() &amp;#123;
                return this.persons.filter((p) =&amp;gt; &amp;#123;
                    return p.name.indexOf(this.keyWord) !== -1
                &amp;#125;)
            &amp;#125;
        &amp;#125;
    &amp;#125;)
&amp;lt;/script&amp;gt;

//列表过滤与排序
&amp;lt;body&amp;gt;
    &amp;lt;div id=&amp;quot;root&amp;quot;&amp;gt;
        &amp;lt;h2&amp;gt;人员列表&amp;lt;/h2&amp;gt;
        &amp;lt;input type=&amp;quot;text&amp;quot; v-model=&#39;keyWord&#39; placeholder=&amp;quot;请输入名字&amp;quot;&amp;gt;
        &amp;lt;button @click=&#39;softType=2&#39;&amp;gt;年龄升序&amp;lt;/button&amp;gt;
        &amp;lt;button @click=&#39;softType=1&#39;&amp;gt;年龄降序&amp;lt;/button&amp;gt;
        &amp;lt;button @click=&#39;softType=0&#39;&amp;gt;原顺序&amp;lt;/button&amp;gt;
        &amp;lt;ul&amp;gt;
            &amp;lt;li v-for=&amp;quot;(p,index) of filperson1&amp;quot; :key=&#39;id&#39;&amp;gt;
                &amp;#123;&amp;#123;p.name&amp;#125;&amp;#125;--&amp;#123;&amp;#123;p.age&amp;#125;&amp;#125;--&amp;#123;&amp;#123;p.sex&amp;#125;&amp;#125;
            &amp;lt;/li&amp;gt;
        &amp;lt;/ul&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;script&amp;gt;
    const vm = new Vue(&amp;#123;
        el: &#39;#root&#39;,
        data: &amp;#123;
            keyWord: &#39;&#39;,
            softType: 0,
            persons: [
                &amp;#123; id: &#39;001&#39;, name: &#39;马冬梅&#39;, age: 30, sex: &#39;女&#39; &amp;#125;,
                &amp;#123; id: &#39;002&#39;, name: &#39;周冬雨&#39;, age: 19, sex: &#39;女&#39; &amp;#125;,
                &amp;#123; id: &#39;003&#39;, name: &#39;周杰伦&#39;, age: 20, sex: &#39;男&#39; &amp;#125;,
                &amp;#123; id: &#39;004&#39;, name: &#39;温兆伦&#39;, age: 15, sex: &#39;男&#39; &amp;#125;,
            ],
        &amp;#125;,
        computed: &amp;#123;
            filperson1() &amp;#123;
                const arr = this.persons.filter((p) =&amp;gt; &amp;#123;
                    return p.name.indexOf(this.keyWord) !== -1
                &amp;#125;)
                if (this.softType) &amp;#123;
                    arr.sort((p1, p2) =&amp;gt; &amp;#123;
                        return this.softType === 1 ? p2.age - p1.age : p1.age - p2.age
                    &amp;#125;)
                &amp;#125;
                return arr
            &amp;#125;,

        &amp;#125;
    &amp;#125;)
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;vue监视数据的原理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vue监视数据的原理&#34;&gt;#&lt;/a&gt; Vue 监视数据的原理&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Vue 会监视 data 中所有层次的数据；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如何检测对象中的数据？&lt;/p&gt;
&lt;p&gt;通过 setter 实现监视，且要做 new Vue 时就传入要检测的数据。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;对象中后追加的属性，Vue 默认不做响应式处理；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如需给后添加的属性做响应式，请使用如下 API：&lt;/p&gt;
&lt;p&gt;Vue.set (target,propertyName/index,value) 或&lt;/p&gt;
&lt;p&gt;vm.$set(target,propertyName/index,value)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如何检测数组中的数据？&lt;/p&gt;
&lt;p&gt;通过包裹数组更新元素的方法实现，本质就是做了两件事：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;调用原生对应的方法对数组进行了更新；&lt;/li&gt;
&lt;li&gt;重新解析模板，进而更新页面&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 Vue 修改数组中的某个元素时一定要用如下方法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;改变原数组：&lt;/p&gt;
&lt;p&gt;push()  pop()  shift()  unshift()  splice()  sort()  reverse()  Vue.set()  vm.$set()&lt;/p&gt;
&lt;p&gt;(使用 Vue.set () 与 vm.$set () 时不能给 vm 或 vm 的跟数据对象添加属性)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;替换数组：&lt;/p&gt;
&lt;p&gt;filter()  concat()  slice()&lt;/p&gt;
&lt;p&gt;(它们不会变更原数组，而总是返回一个新数组，当使用非变更方法时，可以使用新数组替换旧数组)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;代码实例：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
	&amp;lt;head&amp;gt;
		&amp;lt;meta charset=&amp;quot;UTF-8&amp;quot; /&amp;gt;
		&amp;lt;title&amp;gt;总结数据监视&amp;lt;/title&amp;gt;
		&amp;lt;style&amp;gt;
			button&amp;#123;
				margin-top: 10px;
			&amp;#125;
		&amp;lt;/style&amp;gt;
		&amp;lt;!-- 引入Vue --&amp;gt;
		&amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;../js/vue.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
	&amp;lt;/head&amp;gt;
	&amp;lt;body&amp;gt;
		&amp;lt;!--
 
		--&amp;gt;
		&amp;lt;!-- 准备好一个容器--&amp;gt;
		&amp;lt;div id=&amp;quot;root&amp;quot;&amp;gt;
			&amp;lt;h1&amp;gt;学生信息&amp;lt;/h1&amp;gt;
			&amp;lt;button @click=&amp;quot;student.age++&amp;quot;&amp;gt;年龄+1岁&amp;lt;/button&amp;gt; &amp;lt;br/&amp;gt;
			&amp;lt;button @click=&amp;quot;addSex&amp;quot;&amp;gt;添加性别属性，默认值：男&amp;lt;/button&amp;gt; &amp;lt;br/&amp;gt;
			&amp;lt;button @click=&amp;quot;student.sex = &#39;未知&#39; &amp;quot;&amp;gt;修改性别&amp;lt;/button&amp;gt; &amp;lt;br/&amp;gt;
			&amp;lt;button @click=&amp;quot;addFriend&amp;quot;&amp;gt;在列表首位添加一个朋友&amp;lt;/button&amp;gt; &amp;lt;br/&amp;gt;
			&amp;lt;button @click=&amp;quot;updateFirstFriendName&amp;quot;&amp;gt;修改第一个朋友的名字为：张三&amp;lt;/button&amp;gt; &amp;lt;br/&amp;gt;
			&amp;lt;button @click=&amp;quot;addHobby&amp;quot;&amp;gt;添加一个爱好&amp;lt;/button&amp;gt; &amp;lt;br/&amp;gt;
			&amp;lt;button @click=&amp;quot;updateHobby&amp;quot;&amp;gt;修改第一个爱好为：开车&amp;lt;/button&amp;gt; &amp;lt;br/&amp;gt;
			&amp;lt;button @click=&amp;quot;removeSmoke&amp;quot;&amp;gt;过滤掉爱好中的抽烟&amp;lt;/button&amp;gt; &amp;lt;br/&amp;gt;
			&amp;lt;h3&amp;gt;姓名：&amp;#123;&amp;#123;student.name&amp;#125;&amp;#125;&amp;lt;/h3&amp;gt;
			&amp;lt;h3&amp;gt;年龄：&amp;#123;&amp;#123;student.age&amp;#125;&amp;#125;&amp;lt;/h3&amp;gt;
			&amp;lt;h3 v-if=&amp;quot;student.sex&amp;quot;&amp;gt;性别：&amp;#123;&amp;#123;student.sex&amp;#125;&amp;#125;&amp;lt;/h3&amp;gt;
			&amp;lt;h3&amp;gt;爱好：&amp;lt;/h3&amp;gt;
			&amp;lt;ul&amp;gt;
				&amp;lt;li v-for=&amp;quot;(h,index) in student.hobby&amp;quot; :key=&amp;quot;index&amp;quot;&amp;gt;
					&amp;#123;&amp;#123;h&amp;#125;&amp;#125;
				&amp;lt;/li&amp;gt;
			&amp;lt;/ul&amp;gt;
			&amp;lt;h3&amp;gt;朋友们：&amp;lt;/h3&amp;gt;
			&amp;lt;ul&amp;gt;
				&amp;lt;li v-for=&amp;quot;(f,index) in student.friends&amp;quot; :key=&amp;quot;index&amp;quot;&amp;gt;
					&amp;#123;&amp;#123;f.name&amp;#125;&amp;#125;--&amp;#123;&amp;#123;f.age&amp;#125;&amp;#125;
				&amp;lt;/li&amp;gt;
			&amp;lt;/ul&amp;gt;
		&amp;lt;/div&amp;gt;
	&amp;lt;/body&amp;gt;

	&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;
		Vue.config.productionTip = false //阻止 vue 在启动时生成生产提示。

		const vm = new Vue(&amp;#123; 
			el:&#39;#root&#39;,
			data:&amp;#123;
				student:&amp;#123;
					name:&#39;tom&#39;,
					age:18,
					hobby:[&#39;抽烟&#39;,&#39;喝酒&#39;,&#39;烫头&#39;],
					friends:[
						&amp;#123;name:&#39;jerry&#39;,age:35&amp;#125;,
						&amp;#123;name:&#39;tony&#39;,age:36&amp;#125;
					]
				&amp;#125;
			&amp;#125;,
			methods: &amp;#123;
				addSex()&amp;#123;
					// Vue.set(this.student,&#39;sex&#39;,&#39;男&#39;)
					this.$set(this.student,&#39;sex&#39;,&#39;男&#39;)
				&amp;#125;,
				addFriend()&amp;#123;
					this.student.friends.unshift(&amp;#123;name:&#39;jack&#39;,age:70&amp;#125;)
				&amp;#125;,
				updateFirstFriendName()&amp;#123;
					this.student.friends[0].name = &#39;张三&#39;
				&amp;#125;,
				addHobby()&amp;#123;
					this.student.hobby.push(&#39;学习&#39;)
				&amp;#125;,
				updateHobby()&amp;#123;
					// this.student.hobby.splice(0,1,&#39;开车&#39;)
					// Vue.set(this.student.hobby,0,&#39;开车&#39;)
					this.$set(this.student.hobby,0,&#39;开车&#39;)
				&amp;#125;,
				removeSmoke()&amp;#123;
					this.student.hobby = this.student.hobby.filter((h)=&amp;gt;&amp;#123;
						return h !== &#39;抽烟&#39;
					&amp;#125;)
				&amp;#125;
			&amp;#125;
		&amp;#125;)
	&amp;lt;/script&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;样式绑定&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#样式绑定&#34;&gt;#&lt;/a&gt; 样式绑定&lt;/h2&gt;
&lt;h3 id=&#34;class绑定&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#class绑定&#34;&gt;#&lt;/a&gt; class 绑定&lt;/h3&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;:class=&#39;xxx&#39;  //xxx可以是字符串、数组或对象
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;字符串写法&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;div class=&amp;quot;basic&amp;quot; :class=&#39;mood&#39; @click=&#39;changemood&#39;&amp;gt;&amp;#123;&amp;#123;name&amp;#125;&amp;#125;&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;适用于：样式的类名不确定，要动态获取；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;数组写法&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;div class=&amp;quot;basic&amp;quot; :class=&#39;classArr&#39; @click=&#39;changemood&#39;&amp;gt;&amp;#123;&amp;#123;name&amp;#125;&amp;#125;&amp;lt;/div&amp;gt;
//classArr是个数组，可以包含多个样式类名
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;适用于：要绑定多个样式，个数不确定，名字也不确定；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;对象写法&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;div class=&amp;quot;basic&amp;quot; :class=&amp;quot;classObj&amp;quot;&amp;gt;&amp;#123;&amp;#123;name&amp;#125;&amp;#125;&amp;lt;/div&amp;gt; 
//classObj是个对象，对象的key为样式类名，其对应的值为ture或false
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;适用于：要绑定多个样式，个数确定，名字也确定，但不确定用不用；&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;style绑定&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#style绑定&#34;&gt;#&lt;/a&gt; style 绑定&lt;/h3&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;:style=&#39;xxx&#39;  //xxx可以是对象或数组
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;对象写法&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;div class=&amp;quot;basic&amp;quot; :style=&amp;quot;styleObj&amp;quot;&amp;gt;&amp;#123;&amp;#123;name&amp;#125;&amp;#125;&amp;lt;/div&amp;gt; 
//styleObj是个对象，对象的key为style属性值，其值为具体数额
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;数组写法&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;div class=&amp;quot;basic&amp;quot; :style=&amp;quot;styleArr&amp;quot;&amp;gt;&amp;#123;&amp;#123;name&amp;#125;&amp;#125;&amp;lt;/div&amp;gt; 
//styleArr是个数组，数组包含多个样式对象(即对象写法)
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;vue的数组方法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vue的数组方法&#34;&gt;#&lt;/a&gt; Vue 的数组方法&lt;/h2&gt;
&lt;h3 id=&#34;filter&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#filter&#34;&gt;#&lt;/a&gt; filter()&lt;/h3&gt;
&lt;p&gt;​	filter () 方法创建一个新的数组，新数组中的元素是通过检查指定数组中符合条件的所有元素。&lt;/p&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; arr&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;33&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;40&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; arr1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; arr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;filter&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;item&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; item &lt;span class=&#34;token operator&#34;&gt;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;18&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;arr1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// [32, 33, 40]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;map&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#map&#34;&gt;#&lt;/a&gt; map()&lt;/h3&gt;
&lt;p&gt;​	map () 方法返回一个新数组，数组中的元素为原始数组元素调用函数处理后的值。&lt;/p&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; arr&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;25&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; arr1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; arr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;item&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; item&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;arr1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// [6, 11, 18, 27]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;foreach&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#foreach&#34;&gt;#&lt;/a&gt; forEach()&lt;/h3&gt;
&lt;p&gt;​	forEach () 方法用于调用数组的每个元素，并将元素传递给回调函数。（对空数组是不会执行回调函数的）&lt;/p&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; arr&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;25&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; arr1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;arr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;forEach&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;item&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; arr1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;item&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;arr1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// [4, 9, 16, 25]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;find&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#find&#34;&gt;#&lt;/a&gt; find()&lt;/h3&gt;
&lt;p&gt;​	find () 方法返回通过测试（函数内判断）的数组的第一个元素的值，之后的值不会再调用执行函数，如果没有符合条件的元素返回 undefined。（对于空数组，函数是不会执行的）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;findIndex()&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	findIndex () 方法返回传入一个测试条件（函数）符合条件的数组第一个元素位置，之后的值不会再调用执行函数，如果没有符合条件的元素返回 - 1.（对于空数组，函数是不会执行的）&lt;/p&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//find()&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; arr&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;25&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; b1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; arr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;find&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;item&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; item&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; c1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; arr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;find&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;item&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; item&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;b1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 16&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;c1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// undefined&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//findIndex()&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; b2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; arr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;findIndex&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;item&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; item&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; c2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; arr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;findIndex&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;item&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; item&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;b2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 2&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;c2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// -1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;someevery&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#someevery&#34;&gt;#&lt;/a&gt; some()&amp;amp;every()&lt;/h3&gt;
&lt;p&gt;​	some () 方法用于&lt;strong&gt;依次&lt;/strong&gt;检测数组中的元素是否满足指定条件（函数提供）。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果有一个元素满足条件，则表达式返回 true , 剩余的元素不会再执行检测。&lt;/li&gt;
&lt;li&gt;如果没有满足条件的元素，则返回 false。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;every () 方法用于检测数组&lt;strong&gt;所有&lt;/strong&gt;元素是否都符合指定条件（通过函数提供）。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果数组中检测到有一个元素不满足，则整个表达式返回 false ，且剩余的元素不会再进行检测。&lt;/li&gt;
&lt;li&gt;如果所有元素都满足条件，则返回 true。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;​	两者均不会对空数组进行检测，且不会改变原始数组。&lt;/p&gt;
&lt;h3 id=&#34;fill&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#fill&#34;&gt;#&lt;/a&gt; fill()&lt;/h3&gt;
&lt;p&gt;​	fill () 方法用于将一个固定值替换数组的元素.&lt;/p&gt;
&lt;p&gt;该方法会改变原始数组，但不会对空数组进行填充。&lt;/p&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; arr1&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;25&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; b &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; arr1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;fill&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; arr2&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;25&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; c &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; arr2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;fill&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 2 为开始填充的起始位置，4 为结束位置（不包含）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; arr3&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; d &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; arr3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;fill&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;arr1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;   &lt;span class=&#34;token comment&#34;&gt;// [100, 100, 100, 100]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// [100, 100, 100, 100]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;arr2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// [4, 9, 100, 100]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;c&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// [4, 9, 100, 100]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;arr3&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// []&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;d&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// []&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;表单数据收集&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#表单数据收集&#34;&gt;#&lt;/a&gt; 表单数据收集&lt;/h2&gt;
&lt;p&gt;​	Vue 的表单数据收集一般使用 v-model (双向数据绑定) 自动收集数据。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;v-model 的三个修饰符：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;lazy&lt;/code&gt; ：失去焦点后再收集数据；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;number&lt;/code&gt; ：输入字符串转为有效的数字；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;trim&lt;/code&gt; ：输入的首尾空格将被过滤；&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;输入栏&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#输入栏&#34;&gt;#&lt;/a&gt; 输入栏&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;text&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;text&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;v-model&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;xxx&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211223144637.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;password&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;input type=&#39;password&#39; v-model=&#39;xxx&#39;/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211223144732.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;number&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;input type=&#39;number&#39; v-model.number=&#39;xxx&#39;/&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;​	需配合 v-model 的 &lt;code&gt;.number&lt;/code&gt;  修饰符使用，将输入的字符串转为有效的数字；&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211223144841.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;radio&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;男&amp;lt;input type=&amp;quot;radio&amp;quot; name=&#39;sex&#39; v-model=&#39;userinfo.sex&#39; value=&amp;quot;man&amp;quot;&amp;gt;
女&amp;lt;input type=&amp;quot;radio&amp;quot; name=&#39;sex&#39; v-model=&#39;userinfo.sex&#39; value=&amp;quot;woman&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;ol&gt;
&lt;li&gt;如果需要多选一，则需要配置 name 属性；&lt;/li&gt;
&lt;li&gt;v-model 收集的 value 值，故一定需要给标签配置 value 值；&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211223145454.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;checkbox&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;input type=&amp;quot;checkbox&amp;quot; v-model=&#39;userinfo.hobby&#39; value=&amp;quot;stydy&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;ol&gt;
&lt;li&gt;如果没有配置其 value 属性，则收集的为 checked（勾选 or 未勾选，布尔值）；&lt;/li&gt;
&lt;li&gt;如果配置了其 value 属性，还需要将 v-model 的初始值设为数组，这样才能收集 value 组成的数组，否则收集的还是 checked；&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211223150622.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;select&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;所属校区
&amp;lt;select v-model=&#39;userinfo.school&#39;&amp;gt;                 		&amp;lt;option value=&amp;quot;&amp;quot;&amp;gt;请选择校区&amp;lt;/option&amp;gt;
    &amp;lt;option value=&amp;quot;shahe&amp;quot;&amp;gt;沙河&amp;lt;/option&amp;gt;            	&amp;lt;option value=&amp;quot;qingshuihe&amp;quot;&amp;gt;清水河&amp;lt;/option&amp;gt;
&amp;lt;/select&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211223150858.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;textarea&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;textarea v-model.lazy=&#39;userinfo.other&#39;&amp;gt;&amp;lt;/textarea&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;​	一般配合 v-model 的 &lt;code&gt;.lazy&lt;/code&gt;  修饰符使用，来减少无效开销；&lt;/p&gt;
&lt;h3 id=&#34;表单代码实例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#表单代码实例&#34;&gt;#&lt;/a&gt; 表单代码实例&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;quot;zh-cn&amp;quot;&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta charset=&amp;quot;UTF-8&amp;quot;&amp;gt;
    &amp;lt;meta http-equiv=&amp;quot;X-UA-Compatible&amp;quot; content=&amp;quot;IE=edge&amp;quot;&amp;gt;
    &amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=device-width, initial-scale=1.0&amp;quot;&amp;gt;
    &amp;lt;title&amp;gt;收集表单数据&amp;lt;/title&amp;gt;
    &amp;lt;script src=&amp;quot;../js/vue.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;/head&amp;gt;

&amp;lt;body&amp;gt;
    &amp;lt;div id=&amp;quot;root&amp;quot;&amp;gt;
        &amp;lt;form @submit.prevent=&#39;demo&#39;&amp;gt;
            账号:&amp;lt;input type=&amp;quot;text&amp;quot; v-model.trim=&#39;userinfo.account&#39;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;
            密码:&amp;lt;input type=&amp;quot;password&amp;quot; v-model=&#39;userinfo.password&#39;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;
            年龄:&amp;lt;input type=&amp;quot;number&amp;quot; v-model.number=&#39;userinfo.age&#39;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;
            性别:
            男&amp;lt;input type=&amp;quot;radio&amp;quot; name=&#39;sex&#39; v-model=&#39;userinfo.sex&#39; value=&amp;quot;man&amp;quot;&amp;gt;
            女&amp;lt;input type=&amp;quot;radio&amp;quot; name=&#39;sex&#39; v-model=&#39;userinfo.sex&#39; value=&amp;quot;woman&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;
            爱好:
            学习&amp;lt;input type=&amp;quot;checkbox&amp;quot; v-model=&#39;userinfo.hobby&#39; value=&amp;quot;stydy&amp;quot;&amp;gt;
            打游戏&amp;lt;input type=&amp;quot;checkbox&amp;quot; v-model=&#39;userinfo.hobby&#39; value=&amp;quot;game&amp;quot;&amp;gt;
            吃饭&amp;lt;input type=&amp;quot;checkbox&amp;quot; v-model=&#39;userinfo.hobby&#39; value=&amp;quot;eat&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;
            所属校区
            &amp;lt;select v-model=&#39;userinfo.school&#39;&amp;gt;
                &amp;lt;option value=&amp;quot;&amp;quot;&amp;gt;请选择校区&amp;lt;/option&amp;gt;
                &amp;lt;option value=&amp;quot;shahe&amp;quot;&amp;gt;沙河&amp;lt;/option&amp;gt;
                &amp;lt;option value=&amp;quot;qingshuihe&amp;quot;&amp;gt;清水河&amp;lt;/option&amp;gt;
            &amp;lt;/select&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;
            其它信息:
            &amp;lt;textarea v-model.lazy=&#39;userinfo.other&#39;&amp;gt;&amp;lt;/textarea&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;
            &amp;lt;input type=&amp;quot;checkbox&amp;quot; v-model=&#39;userinfo.agree&#39;&amp;gt; 阅读并接收&amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;《用户协议》&amp;lt;/a&amp;gt;
            &amp;lt;button&amp;gt;提交&amp;lt;/button&amp;gt;
        &amp;lt;/form&amp;gt;
    &amp;lt;/div&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;script&amp;gt;
    new Vue(&amp;#123;
        el: &#39;#root&#39;,
        data: &amp;#123;
            userinfo: &amp;#123;
                account: &#39;&#39;,
                password: &#39;&#39;,
                age: 18,
                sex: &#39;man&#39;,
                hobby: [],
                school: &#39;&#39;,
                other: &#39;&#39;,
                agree: &#39;&#39;,
            &amp;#125;
        &amp;#125;,
        methods: &amp;#123;
            demo() &amp;#123;
                console.log(JSON.stringify(this.userinfo))
            &amp;#125;
        &amp;#125;,
    &amp;#125;)
&amp;lt;/script&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;生命周期&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#生命周期&#34;&gt;#&lt;/a&gt; 生命周期&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;官方生命周期图：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211223202830.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;细节解释&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211223203006.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;常用的生命周期方法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#常用的生命周期方法&#34;&gt;#&lt;/a&gt; 常用的生命周期方法&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;mounted()&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	【初始化操作】&lt;/p&gt;
&lt;p&gt;​	发送 ajax 请求，启动定时器、绑定自定义事件、订阅消息等异步任务；&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;beforeDestory()&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	【收尾工作】&lt;/p&gt;
&lt;p&gt;​	清除定时器、解绑自定义事件、取消订阅消息等收尾工作；&lt;/p&gt;
&lt;h2 id=&#34;vue组件的使用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vue组件的使用&#34;&gt;#&lt;/a&gt; Vue 组件的使用&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;组件的定义：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	实现应用中局部功能代码和资源的集合。&lt;/p&gt;
&lt;h3 id=&#34;非单文件组件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#非单文件组件&#34;&gt;#&lt;/a&gt; 非单文件组件&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;使用组件的三大步骤：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;#extend&#34;&gt;定义组件（创建组件）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#component&#34;&gt;注册组件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#template&#34;&gt;使用组件（编写组件结构）&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;span id=&#39;extend&#39;&gt;&lt;strong&gt;定义组件&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;​	使用 &lt;code&gt;Vue.extend(options)&lt;/code&gt;  创建，其中 &lt;code&gt;options&lt;/code&gt;  和 &lt;code&gt;new Vue（options)&lt;/code&gt;  时传入的那个 &lt;code&gt;options&lt;/code&gt;  几乎一样，但有以下区别:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;不要写 &lt;code&gt;el&lt;/code&gt; —— 最终所有的组件都要经过一个 vm 的管理，由 vm 中的 &lt;code&gt;el&lt;/code&gt;  决定服务哪个容器；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;data&lt;/code&gt;  必须写成函数 —— 避免组件被复用时，数据存在引用关系；&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;span id=&#39;component&#39;&gt;&lt;strong&gt;注册组件&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;局部注册： &lt;code&gt;new Vue&lt;/code&gt;  的时候传入 &lt;code&gt;components&lt;/code&gt;  选项&lt;/li&gt;
&lt;li&gt;全局注册： &lt;code&gt;Vue.component&lt;/code&gt;  (‘组件名’, 组件)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;span id=&#39;template&#39;&gt;&lt;strong&gt;使用组件&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;使用 Vue 的 template 属性创建组件结构，用两个顿号（`）包裹结构。&lt;/p&gt;
&lt;p&gt;非单文件代码实例：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;

&amp;lt;head&amp;gt;
  &amp;lt;meta charset=&amp;quot;UTF-8&amp;quot; /&amp;gt;
  &amp;lt;title&amp;gt;几个注意点&amp;lt;/title&amp;gt;
  &amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;../js/vue.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;/head&amp;gt;

&amp;lt;body&amp;gt;
  &amp;lt;!-- 准备好一个容器--&amp;gt;
  &amp;lt;div id=&amp;quot;root&amp;quot;&amp;gt;
    &amp;lt;h1&amp;gt;&amp;#123;&amp;#123;msg&amp;#125;&amp;#125;&amp;lt;/h1&amp;gt;
    &amp;lt;school&amp;gt;&amp;lt;/school&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;

&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;
  Vue.config.productionTip = false

  //定义组件
  const s = Vue.extend(&amp;#123;
    name: &#39;atguigu&#39;,
    template: `
				&amp;lt;div&amp;gt;
					&amp;lt;h2&amp;gt;学校名称：&amp;#123;&amp;#123;name&amp;#125;&amp;#125;&amp;lt;/h2&amp;gt;	
					&amp;lt;h2&amp;gt;学校地址：&amp;#123;&amp;#123;address&amp;#125;&amp;#125;&amp;lt;/h2&amp;gt;	
				&amp;lt;/div&amp;gt;
			`,
    data() &amp;#123;
      return &amp;#123;
        name: &#39;尚硅谷&#39;,
        address: &#39;北京&#39;
      &amp;#125;
    &amp;#125;
  &amp;#125;)

  new Vue(&amp;#123;
    el: &#39;#root&#39;,
    data: &amp;#123;
      msg: &#39;欢迎学习Vue!&#39;
    &amp;#125;,
    components: &amp;#123;
      school: s
    &amp;#125;
  &amp;#125;)
&amp;lt;/script&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;注意项&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#注意项&#34;&gt;#&lt;/a&gt; 注意项&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;关于组件名&lt;/strong&gt;&lt;br /&gt;
一个单词组成：&lt;br /&gt;
第一种写法（首字母小写）：school&lt;br /&gt;
 第二种写法（首字母大写）：School&lt;/p&gt;
&lt;p&gt;多个单词组成：&lt;br /&gt;
第一种写法（kebab-case 命名）：my-school&lt;br /&gt;
 第二种写法（CamelCase 命名）：MySchool（需要 Vue 脚手架支持）&lt;/p&gt;
&lt;p&gt;备注&lt;br /&gt;
① 组件名尽可能回避 HTML 中已有的元素名称，例如 h2、H2；&lt;br /&gt;
② 可以使用 name 配置项指定组件在开发者工具中呈现的名字；&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;关于组件标签&lt;/strong&gt;&lt;br /&gt;
第一种写法：&lt;school&gt;&lt;/school&gt;&lt;br /&gt;
第二种写法：&lt;school/&gt; (不使用脚手架会导致后续组件不能渲染)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;简写方式&lt;/strong&gt;&lt;br /&gt;
 &lt;code&gt;const school = Vue.extend(options) &lt;/code&gt; 可以简写成 &lt;code&gt;const school = options&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;vuecomponent&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vuecomponent&#34;&gt;#&lt;/a&gt; VueComponent&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;app 组件本质是一个名为 VueComponent 的构造函数，且不是程序员定义的，是 Vue.extend 生成的；&lt;/li&gt;
&lt;li&gt;我们只需要写&lt;app/&gt;或&lt;app&gt;&lt;/app&gt;，Vue 解析时会帮我们创建 app 组件的实例对象，即 Vue 帮我们执行 new VueComponent (options);&lt;/li&gt;
&lt;li&gt;特别注意：每次调用 Vue.extend，返回的都是一个全新的 VueComponent;&lt;/li&gt;
&lt;li&gt;关于 this 指向&lt;br /&gt;
① 组件配置中：data 函数、methods 中的函数、watch 中的函数、computed 中的函数 它们的 this 均是【VueComponent 实例对象】&lt;br /&gt;
② new Vue (options) 配置中：data 函数、methods 中的函数、watch 中的函数、computed 中的函数 它们的 this 均是【Vue 实例对象】;&lt;/li&gt;
&lt;li&gt;VueComponent 的实例对象，以后简称 vc（也可称之为：组件实例对象）;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;一个重要的内置关系&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;VueComponent.prototype.__proto__ === Vue.prototype
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这样组件实例对象 vc 就可以访问到 Vue 原型上的属性和方法。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211224144834.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;单文件组件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#单文件组件&#34;&gt;#&lt;/a&gt; 单文件组件&lt;/h3&gt;
&lt;p&gt;主要由三部分组成：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;#vue&#34;&gt;Vue 组件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#main&#34;&gt;main.js 文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#index&#34;&gt;index.html 文件&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;span id=&#39;vue&#39;&gt;&lt;strong&gt;Vue 组件&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;普通组件的组成&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;模板页面&lt;/li&gt;
&lt;li&gt;JS 模块对象&lt;/li&gt;
&lt;li&gt;样式&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;代码实例：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;//模板页面
&amp;lt;template&amp;gt;
  &amp;lt;div class=&amp;quot;demo&amp;quot;&amp;gt;
    &amp;lt;h2&amp;gt;学生名称:&amp;#123;&amp;#123; name &amp;#125;&amp;#125;&amp;lt;/h2&amp;gt;
    &amp;lt;h2&amp;gt;学生地址:&amp;#123;&amp;#123; address &amp;#125;&amp;#125;&amp;lt;/h2&amp;gt;
    &amp;lt;button @click=&amp;quot;showName&amp;quot;&amp;gt;&amp;lt;/button&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/template&amp;gt;

//JS模块对象
&amp;lt;script&amp;gt;
export default &amp;#123;
  name: &amp;quot;school&amp;quot;,
  data() &amp;#123;
    return &amp;#123;
      name: &amp;quot;Sakura&amp;quot;,
      address: &amp;quot;成都&amp;quot;,
    &amp;#125;;
  &amp;#125;,
  methods: &amp;#123;
    showName() &amp;#123;
      alert(this.name);
    &amp;#125;,
  &amp;#125;,
&amp;#125;;
&amp;lt;/script&amp;gt;

//样式
&amp;lt;style&amp;gt;
.demo &amp;#123;
  background: orange;
&amp;#125;
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;App.vue&lt;/p&gt;
&lt;p&gt;所有组件的父组件，用于调控和使用其它组件。&lt;/p&gt;
&lt;p&gt;代码实例：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;template&amp;gt;
  &amp;lt;div&amp;gt;
    &amp;lt;School&amp;gt;&amp;lt;/School&amp;gt;
    &amp;lt;Student&amp;gt;&amp;lt;/Student&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/template&amp;gt;

&amp;lt;script&amp;gt;
import School from &amp;quot;./School&amp;quot;;
import Student from &amp;quot;./Student.vue&amp;quot;;
export default &amp;#123;
  name: &amp;quot;App&amp;quot;,
  component: &amp;#123;
    School,
    Student,
  &amp;#125;,
&amp;#125;;
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;span id=&#39;main&#39;&gt;&lt;strong&gt;main.js 文件&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;代码实例：&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; App &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;./App.vue&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Vue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    el&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;#root&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    template&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token template-string&#34;&gt;&lt;span class=&#34;token template-punctuation string&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&amp;lt;App&gt;&amp;lt;/App&gt;&lt;/span&gt;&lt;span class=&#34;token template-punctuation string&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    component&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; App &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;span id=&#39;index&#39;&gt;&lt;strong&gt;index.html 文件&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;代码实例：&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token doctype&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;!&lt;/span&gt;&lt;span class=&#34;token doctype-tag&#34;&gt;DOCTYPE&lt;/span&gt; &lt;span class=&#34;token name&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;html&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;lang&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;zh-cn&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;head&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;meta&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;charset&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;UTF-8&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;meta&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;http-equiv&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;X-UA-Compatible&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;IE=edge&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;meta&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;viewport&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;width=device-width, initial-scale=1.0&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;单文件组件&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;head&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;root&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- &amp;lt;App&gt;&amp;lt;/App&gt; --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;../js/vue.js&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token script&#34;&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;./main.js&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token script&#34;&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;vue-cli&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vue-cli&#34;&gt;#&lt;/a&gt; Vue CLI&lt;/h2&gt;
&lt;h3 id=&#34;脚手架的安装&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#脚手架的安装&#34;&gt;#&lt;/a&gt; 脚手架的安装&lt;/h3&gt;
&lt;p&gt;暂略&lt;/p&gt;
&lt;h3 id=&#34;脚手架文件结构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#脚手架文件结构&#34;&gt;#&lt;/a&gt; 脚手架文件结构&lt;/h3&gt;
&lt;p&gt;├── node_modules&lt;br /&gt;
├── public&lt;br /&gt;
│   ├── favicon.ico: 页签图标&lt;br /&gt;
│   └── index.html: 主页面&lt;br /&gt;
├── src&lt;br /&gt;
│   ├── assets: 存放静态资源&lt;br /&gt;
│   │   └── logo.png&lt;br /&gt;
│   │── component: 存放组件&lt;br /&gt;
│   │   └── HelloWorld.vue&lt;br /&gt;
│   │── App.vue: 汇总所有组件&lt;br /&gt;
│   │── main.js: 入口文件&lt;br /&gt;
├── .gitignore: git 版本管制忽略的配置&lt;br /&gt;
├── babel.config.js: babel 的配置文件&lt;br /&gt;
├── package.json: 应用包配置文件&lt;br /&gt;
├── &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL1JFQURNRS5tZA==&#34;&gt;README.md&lt;/span&gt;: 应用描述文件&lt;br /&gt;
├── package-lock.json：包版本控制文件&lt;/p&gt;
&lt;h3 id=&#34;render&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#render&#34;&gt;#&lt;/a&gt; render()&lt;/h3&gt;
&lt;p&gt;vue.js 与 vue.runtime.xxx.js 的区别：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;vue.js 是完整版的 Vue，包含：核心功能 + 模板解析器。&lt;/li&gt;
&lt;li&gt;vue.runtime.xxx.js 是运行版的 Vue，只包含：核心功能；没有模板解析器。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;因为 vue.runtime.xxx.js 没有模板解析器，所以不能使用 template 这个配置项，需要使用 render 函数接收到的 createElement 函数去指定具体内容。&lt;/p&gt;
&lt;p&gt;代码实例：&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Vue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function-variable function&#34;&gt;render&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token parameter&#34;&gt;h&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;App&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;$mount&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;#app&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;个性化配置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#个性化配置&#34;&gt;#&lt;/a&gt; 个性化配置&lt;/h3&gt;
&lt;p&gt;​	先创建 vue.config.js 文件，再参考&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jbGkudnVlanMub3JnL3poL2NvbmZpZy8=&#34;&gt;配置参考 | Vue CLI (vuejs.org)&lt;/span&gt; 后将需要修改的部分写入文件。&lt;/p&gt;
&lt;h2 id=&#34;vue高级知识&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vue高级知识&#34;&gt;#&lt;/a&gt; Vue 高级知识&lt;/h2&gt;
&lt;h3 id=&#34;ref属性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ref属性&#34;&gt;#&lt;/a&gt; ref 属性&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;功能：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	被用来给元素或子组件注册引用信息（id 的替代者）。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;应用在 html 标签上获取的是真实 DOM 元素；&lt;/li&gt;
&lt;li&gt;应用在组件标签上是组件实例对象（vc）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;使用方式：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;打标识：&amp;lt;h1 ref=&amp;quot;xxx&amp;quot;&amp;gt;.....&amp;lt;/h1 &amp;gt; 或 &amp;lt;School ref=&amp;quot;xxx&amp;quot;&amp;gt;&amp;lt;/School&amp;gt;&lt;/li&gt;
&lt;li&gt;获取：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3RoaXMuJHJlZnMueHh4&#34;&gt;this.$refs.xxx&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;代码实例：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;template&amp;gt;
  &amp;lt;div&amp;gt;
    &amp;lt;h1 v-text=&amp;quot;msg&amp;quot; ref=&amp;quot;title&amp;quot;&amp;gt;&amp;lt;/h1&amp;gt;
    &amp;lt;button @click=&amp;quot;showDOM&amp;quot; ref=&amp;quot;btn&amp;quot;&amp;gt;输出上方的DOM元素&amp;lt;/button&amp;gt;
    &amp;lt;School ref=&amp;quot;sch&amp;quot; /&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/template&amp;gt;

&amp;lt;script&amp;gt;
import School from &amp;quot;./components/School.vue&amp;quot;;
export default &amp;#123;
  name: &amp;quot;App&amp;quot;,
  components: &amp;#123;
    School,
  &amp;#125;,
  data() &amp;#123;
    return &amp;#123;
      msg: &amp;quot;Vue&amp;quot;,
    &amp;#125;;
  &amp;#125;,
  methods: &amp;#123;
    showDOM() &amp;#123;
      console.log(this.$refs.title);
      console.log(this.$refs.btn);
      console.log(this.$refs.sch);
    &amp;#125;,
  &amp;#125;,
&amp;#125;;
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;props属性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#props属性&#34;&gt;#&lt;/a&gt; props 属性&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;功能：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	让组件接收外部传过来的数据；&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用方式：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;传送数据： &lt;code&gt;&amp;lt;Demo name=&amp;quot;xxx&amp;quot;/&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;接收数据：&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;第一种方式（只接收）： &lt;code&gt;props:[&#39;name&#39;]&lt;/code&gt; ；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;第二种方式（限制类型）： &lt;code&gt;props:&amp;#123;name:String&amp;#125;&lt;/code&gt; ；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;第三种方式（限制类型、限制必要性、指定默认值）：&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;props&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	name&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	type&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;String&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 类型&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	required&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 必要性&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;老王&#39;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 默认值&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;** 备注：**props 是只读的，Vue 底层会监测你对 props 的修改，如果进行了修改，就会发出警告，若业务需求确实需要修改，那么请复制 props 的内容到 data 中一份，然后去修改 data 中的数据。&lt;/p&gt;
&lt;p&gt;代码实例：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;template&amp;gt;
  &amp;lt;div class=&amp;quot;student&amp;quot;&amp;gt;
    &amp;lt;h2&amp;gt;学生名称:&amp;#123;&amp;#123; name &amp;#125;&amp;#125;&amp;lt;/h2&amp;gt;
    &amp;lt;h2&amp;gt;学生地址:&amp;#123;&amp;#123; address &amp;#125;&amp;#125;&amp;lt;/h2&amp;gt;
    &amp;lt;h2&amp;gt;学生年龄:&amp;#123;&amp;#123; age + 1 &amp;#125;&amp;#125;&amp;lt;/h2&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/template&amp;gt;

&amp;lt;script&amp;gt;
export default &amp;#123;
  name: &amp;quot;Student&amp;quot;,
  data() &amp;#123;
    return &amp;#123;
      maName: this.name,
      myAge: this.age,
    &amp;#125;;
  &amp;#125;,
  //简单接收
  // props: [&amp;quot;name&amp;quot;, &amp;quot;address&amp;quot;, &amp;quot;age&amp;quot;],
  //
  //类型限制的接收
  // props: &amp;#123;
  //   name: String,
  //   age: Number,
  //   sex: String,
  // &amp;#125;,
  //类型的限制、默认值的限定、必要性的限定
  props: &amp;#123;
    name: &amp;#123;
      type: String,
      required: true,
    &amp;#125;,
    age: &amp;#123;
      type: Number,
      default: 10,
    &amp;#125;,
    sex: &amp;#123;
      type: String,
      required: true,
    &amp;#125;,
  &amp;#125;,
&amp;#125;;
&amp;lt;/script&amp;gt;

&amp;lt;style&amp;gt;
.student &amp;#123;
  background-color: grey;
&amp;#125;
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;mixin属性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#mixin属性&#34;&gt;#&lt;/a&gt; mixin 属性&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;功能：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	可以把多个组件共用的配置提取成一个混入对象；&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用方式：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;第一步：定义混入（js 文件）：&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    methods&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;第二步：使用混入&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;全局混入：在 mian.js 中  &lt;code&gt;Vue.mixin(xxx)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;局部混入：在 Vue 组件中  &lt;code&gt;mixins:[&#39;xxx&#39;]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;代码实例：&lt;/p&gt;
&lt;p&gt;mixin.js:&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; hunhe &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  methods&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;showName&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token function&#34;&gt;alert&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function&#34;&gt;mounted&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;你好啊！&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; hunhe2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      x&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      y&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;vue插件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vue插件&#34;&gt;#&lt;/a&gt; Vue 插件&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;功能：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	用于增强 Vue；&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用方式：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;定义插件&lt;/p&gt;
&lt;p&gt;本质：包含 install 方法的一个对象，install 的第一个参数是 Vue，第二个以后的参数是插件使用者传递的数据。&lt;/p&gt;
&lt;p&gt;代码实例：&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;default&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;Vue&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; x&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; y&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; z&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; y&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; z&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 定义混入&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    Vue&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;mixin&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token function&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          x&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          y&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 给 Vue 原型上添加一个方法（vm 和 vc 就都能用了）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;Vue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;prototype&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function-variable function&#34;&gt;hello&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token function&#34;&gt;alert&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;你好啊&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用插件： &lt;code&gt;Vue.use()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;代码实例：&lt;/p&gt;
&lt;p&gt;main.js:&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 引入 Vue&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Vue &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;vue&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 引入 App&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; App &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;./App.vue&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 引入插件&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; plugins &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;./plugins&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 应用（使用）插件&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Vue&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;use&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;plugins&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 创建 vm&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Vue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  el&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;#app&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function-variable function&#34;&gt;render&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;App&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;scoped样式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#scoped样式&#34;&gt;#&lt;/a&gt; scoped 样式&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;作用：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	让样式在局部生效，防止冲突；&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;写法：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;`&amp;lt;style scoped&amp;gt; &amp;lt;/style&amp;gt;`
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;slot插槽&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#slot插槽&#34;&gt;#&lt;/a&gt; slot 插槽&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;功能：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	让父组件可以向子组件指定位置插入 html 结构，也是一种组件间通信的方式，适用于 &lt;strong&gt;父组件 ===&amp;gt; 子组件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;默认插槽&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;父组件：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;Category&amp;gt;
   &amp;lt;div&amp;gt;html结构1&amp;lt;/div&amp;gt;
&amp;lt;/Category&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;子组件（ &lt;code&gt;Category.vue&lt;/code&gt; ）&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;template&amp;gt;
    &amp;lt;div&amp;gt;
       &amp;lt;!-- 定义插槽 --&amp;gt;
       &amp;lt;slot&amp;gt;插槽默认内容...&amp;lt;/slot&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/template&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;具名插槽&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;父组件：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;Category&amp;gt;
    &amp;lt;template slot=&amp;quot;center&amp;quot;&amp;gt;
      &amp;lt;div&amp;gt;html结构1&amp;lt;/div&amp;gt;
    &amp;lt;/template&amp;gt;

    &amp;lt;template v-slot:footer&amp;gt;
       &amp;lt;div&amp;gt;html结构2&amp;lt;/div&amp;gt;
    &amp;lt;/template&amp;gt;
&amp;lt;/Category&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;子组件（ &lt;code&gt;Category.vue&lt;/code&gt; ）&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;template&amp;gt;
    &amp;lt;div&amp;gt;
       &amp;lt;!-- 定义插槽 --&amp;gt;
       &amp;lt;slot name=&amp;quot;center&amp;quot;&amp;gt;插槽默认内容...&amp;lt;/slot&amp;gt;
       &amp;lt;slot name=&amp;quot;footer&amp;quot;&amp;gt;插槽默认内容...&amp;lt;/slot&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/template&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;作用域插槽&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;理解：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	数据在组件的自身，但根据数据生成的结构需要组件的使用者来决定。（games 数据在 Category 组件中，但使用数据所遍历出来的结构由 App 组件决定）&lt;/p&gt;
&lt;p&gt;父组件&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;Category&amp;gt;
	&amp;lt;template scope=&amp;quot;scopeData&amp;quot;&amp;gt;
		&amp;lt;!-- 生成的是ul列表 --&amp;gt;
		&amp;lt;ul&amp;gt;
			&amp;lt;li v-for=&amp;quot;g in scopeData.games&amp;quot; :key=&amp;quot;g&amp;quot;&amp;gt;&amp;#123;&amp;#123;g&amp;#125;&amp;#125;&amp;lt;/li&amp;gt;
		&amp;lt;/ul&amp;gt;
	&amp;lt;/template&amp;gt;
&amp;lt;/Category&amp;gt;

&amp;lt;Category&amp;gt;
	&amp;lt;template slot-scope=&amp;quot;scopeData&amp;quot;&amp;gt;
		&amp;lt;!-- 生成的是h4标题 --&amp;gt;
		&amp;lt;h4 v-for=&amp;quot;g in scopeData.games&amp;quot; :key=&amp;quot;g&amp;quot;&amp;gt;&amp;#123;&amp;#123;g&amp;#125;&amp;#125;&amp;lt;/h4&amp;gt;
	&amp;lt;/template&amp;gt;
&amp;lt;/Category&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;子组件（ &lt;code&gt;Category.vue&lt;/code&gt; ）&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;template&amp;gt;
    &amp;lt;div&amp;gt;
        &amp;lt;slot :games=&amp;quot;games&amp;quot;&amp;gt;&amp;lt;/slot&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/template&amp;gt;

&amp;lt;script&amp;gt;
    export default &amp;#123;
        name:&#39;Category&#39;,
        props:[&#39;title&#39;],
        //数据在子组件自身
        data() &amp;#123;
            return &amp;#123;
                games:[&#39;红色警戒&#39;,&#39;穿越火线&#39;,&#39;劲舞团&#39;,&#39;超级玛丽&#39;]
            &amp;#125;
        &amp;#125;,
    &amp;#125;
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;vuex&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vuex&#34;&gt;#&lt;/a&gt; Vuex&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/vuex.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;概念：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	在 Vue 中实现集中式状态（数据）管理的一个 Vue 插件，对 vue 应用中多个组件的共享状态进行集中式的管理（读 / 写数据或方法），也是一种组件间通信的方式，且适用于任意组件间通信。&lt;/p&gt;
&lt;h3 id=&#34;搭建vuex环境&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#搭建vuex环境&#34;&gt;#&lt;/a&gt; 搭建 Vuex 环境&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;创建文件： &lt;code&gt;src/store/index.js&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 引入 Vue 核心库&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Vue &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;vue&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 引入 Vuex&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Vuex &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;vuex&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 应用 Vuex 插件&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Vue&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;use&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;Vuex&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 准备 actions 对象 —— 响应组件中用户的动作&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; actions &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 准备 mutations 对象 —— 修改 state 中的数据&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; mutations &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 准备 state 对象 —— 保存具体的数据&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; state &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 创建并暴露 store&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;default&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Vuex&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Store&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	actions&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	mutations&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	state&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 &lt;code&gt;main.js&lt;/code&gt;  中创建 vm 时传入 &lt;code&gt;store&lt;/code&gt;  配置项&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 引入 store&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; store &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;./store&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 创建 vm&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Vue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	el&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;#app&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token function-variable function&#34;&gt;render&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token parameter&#34;&gt;h&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;App&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	store&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;基本使用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基本使用&#34;&gt;#&lt;/a&gt; 基本使用&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;初始化数据、配置 &lt;code&gt;actions&lt;/code&gt; 、配置 &lt;code&gt;mutation&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;组件中读取 vuex 中的数据： &lt;code&gt;$store.state.sum&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;组件中修改 vuex 中的数据： &lt;code&gt;$store.dispatch(&#39;action中的方法名&#39;,数据)&lt;/code&gt;  或  &lt;code&gt;$store.commit(&#39;mutations中的方法名&#39;,数据)&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;备注：若没有网络请求或其他业务逻辑，组件中也可以越过 actions，即不写 &lt;code&gt;dispatch&lt;/code&gt; ，直接编写 &lt;code&gt;commit&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;getters&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#getters&#34;&gt;#&lt;/a&gt; getters&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;概念：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	当 state 中的数据需要经过加工后再使用时，可以使用 getters 加工。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用方法：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在 &lt;code&gt;store.js&lt;/code&gt;  中追加 &lt;code&gt;getters&lt;/code&gt;  配置&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; getters &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token function&#34;&gt;bigSum&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; state&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sum &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 创建并暴露 store&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;default&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Vuex&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Store&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	getters&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;组件中读取数据： &lt;code&gt;$store.getters.bigSum&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;四个map方法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#四个map方法&#34;&gt;#&lt;/a&gt; 四个 Map 方法&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;mapState 方法：&lt;/strong&gt;用于帮助我们映射 &lt;code&gt;state&lt;/code&gt;  中的数据为计算属性；&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;computed&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 借助 mapState 生成计算属性：sum、school、subject（对象写法）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     &lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;mapState&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;sum&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;sum&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;school&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;school&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;subject&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;subject&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;         &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 借助 mapState 生成计算属性：sum、school、subject（数组写法）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;mapState&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;sum&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;school&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;subject&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;mapGetters 方法：&lt;/strong&gt;用于帮助我们映射 &lt;code&gt;getters&lt;/code&gt;  中的数据为计算属性；&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;computed&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 借助 mapGetters 生成计算属性：bigSum（对象写法）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;mapGetters&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;bigSum&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;bigSum&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 借助 mapGetters 生成计算属性：bigSum（数组写法）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;mapGetters&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;bigSum&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;mapActions 方法：&lt;/strong&gt;用于帮助我们生成与 &lt;code&gt;actions&lt;/code&gt;  对话的方法，即：包含 &lt;code&gt;$store.dispatch(xxx)&lt;/code&gt;  的函数；&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;methods&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 靠 mapActions 生成：incrementOdd、incrementWait（对象形式）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;mapActions&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;incrementOdd&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;jiaOdd&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;incrementWait&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;jiaWait&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 靠 mapActions 生成：incrementOdd、incrementWait（数组形式）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;mapActions&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;jiaOdd&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;jiaWait&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;mapMutations 方法：&lt;/strong&gt;用于帮助我们生成与 &lt;code&gt;mutations&lt;/code&gt;  对话的方法，即：包含 &lt;code&gt;$store.commit(xxx)&lt;/code&gt;  的函数；&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;methods&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 靠 mapActions 生成：increment、decrement（对象形式）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;mapMutations&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;increment&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;JIA&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;decrement&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;JIAN&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 靠 mapMutations 生成：JIA、JIAN（对象形式）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;mapMutations&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;JIA&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;JIAN&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;备注：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;4 个 Map () 方法使用前需要先引用 &lt;code&gt;import &amp;#123;xxx&amp;#125; from &#39;vuex&#39;&lt;/code&gt;  (xxx 为 Map 方法名)&lt;/li&gt;
&lt;li&gt;mapActions 与 mapMutations 使用时，若需要传递参数需要：在模板中绑定事件时传递好参数，否则参数是事件对象。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;模块化&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#模块化&#34;&gt;#&lt;/a&gt; 模块化&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;功能：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	让代码更好维护，让多种数据分类更加明确。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用方法：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;开启命名空间；&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; countAbout &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  namespaced&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 开启命名空间&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  state&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;x&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  mutations&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  actions&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  getters&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;bigSum&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;       &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; state&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sum &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; personAbout &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  namespaced&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 开启命名空间&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  state&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  mutations&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  actions&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; store &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Vuex&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Store&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  modules&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    countAbout&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    personAbout&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;开启命名空间后，组件中读取 state 数据；&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 方式一：自己直接读取&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;$store&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;state&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;personAbout&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;list&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 方式二：借助 mapState 读取：&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;mapState&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;countAbout&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;sum&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;school&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;subject&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;开启命名空间后，组件中读取 getters 数据；&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 方式一：自己直接读取&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;$store&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;getters&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;personAbout/firstPersonName&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 方式二：借助 mapGetters 读取：&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;mapGetters&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;countAbout&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;bigSum&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;开启命名空间后，组件中调用 dispatch；&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 方式一：自己直接 dispatch&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;$store&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;dispatch&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;personAbout/addPersonWang&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;person&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 方式二：借助 mapActions：&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;mapActions&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;countAbout&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;incrementOdd&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;jiaOdd&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;incrementWait&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;jiaWait&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;开启命名空间后，组件中调用 commit；&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 方式一：自己直接 commit&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;$store&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;commit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;personAbout/ADD_PERSON&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;person&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 方式二：借助 mapMutations：&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;mapMutations&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;countAbout&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;increment&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;JIA&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;decrement&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;JIAN&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;webstorage&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#webstorage&#34;&gt;#&lt;/a&gt; webStorage&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;存储内容大小一般支持 5MB 左右（不同浏览器可能还不一样）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;浏览器端通过 Window.sessionStorage 和 Window.localStorage 属性来实现本地存储机制。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;相关 API：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;xxxxxStorage.setItem(&#39;key&#39;, &#39;value&#39;);&lt;/code&gt; &lt;br /&gt;
 该方法接受一个键和值作为参数，会把键值对添加到存储中，如果键名存在，则更新其对应的值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;xxxxxStorage.getItem(&#39;person&#39;);&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;​		该方法接受一个键名作为参数，返回键名对应的值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;xxxxxStorage.removeItem(&#39;key&#39;);&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;​		该方法接受一个键名作为参数，并把该键名从存储中删除。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt; xxxxxStorage.clear()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;​		该方法会清空存储中的所有数据。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;备注：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;SessionStorage 存储的内容会随着浏览器窗口关闭而消失。&lt;/li&gt;
&lt;li&gt;LocalStorage 存储的内容，需要手动清除才会消失。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;xxxxxStorage.getItem(xxx)&lt;/code&gt;  如果 xxx 对应的 value 获取不到，那么 getItem 的返回值是 null。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;JSON.parse(null)&lt;/code&gt;  的结果依然是 null。&lt;/li&gt;
&lt;li&gt;一般配合深度监视使用。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;组件的自定义事件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#组件的自定义事件&#34;&gt;#&lt;/a&gt; 组件的自定义事件&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;一种组件间通信的方式，适用于：&lt;strong style=&#34;color:red&#34;&gt;子组件 ===&amp;gt; 父组件&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用场景：A 是父组件，B 是子组件，B 想给 A 传数据，那么就要在 A 中给 B 绑定自定义事件（&lt;span style=&#34;color:red&#34;&gt;事件的回调在 A 中&lt;/span&gt;）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;绑定自定义事件：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;第一种方式，在父组件中： &lt;code&gt;&amp;lt;Demo @atguigu=&amp;quot;test&amp;quot;/&amp;gt;&lt;/code&gt;   或  &lt;code&gt;&amp;lt;Demo v-on:atguigu=&amp;quot;test&amp;quot;/&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;第二种方式，在父组件中：&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;Demo ref&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;demo&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;mounted&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;$refs&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;xxx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;$on&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;atguigu&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;test&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;若想让自定义事件只能触发一次，可以使用 &lt;code&gt;once&lt;/code&gt;  修饰符，或 &lt;code&gt;$once&lt;/code&gt;  方法。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;触发自定义事件： &lt;code&gt;this.$emit(&#39;atguigu&#39;,数据)&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;解绑自定义事件 &lt;code&gt;this.$off(&#39;atguigu&#39;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如果自定义事件有多个则参数部分放入一个数组；如果要解除所有自定义事件，还可以不传参数。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;组件上也可以绑定原生 DOM 事件，需要使用 &lt;code&gt;.native&lt;/code&gt;  修饰符。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;注意：通过 &lt;code&gt;this.$refs.xxx.$on(&#39;atguigu&#39;,回调)&lt;/code&gt;  绑定自定义事件时，回调&lt;span style=&#34;color:red&#34;&gt;要么配置在 methods 中&lt;/span&gt;，&lt;span style=&#34;color:red&#34;&gt;要么用箭头函数&lt;/span&gt;，否则 this 指向会出问题！&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;全局事件总线&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#全局事件总线&#34;&gt;#&lt;/a&gt; 全局事件总线&lt;/h2&gt;
&lt;p&gt;全局事件总线（GlobalEventBus）是一种组件间通信的方式，适用于&lt;span style=&#34;color:red&#34;&gt;任意组件间通信&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;全局事件总线的安装&lt;/strong&gt;：&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//main.js&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Vue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token function&#34;&gt;beforeCreate&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token class-name&#34;&gt;Vue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;prototype&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;$bus &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 安装全局事件总线，$bus 就是当前应用的 vm&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;使用事件总线&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;接收数据：A 组件想接收数据，则在 A 组件中给 $bus 绑定自定义事件，事件的&lt;span style=&#34;color:red&#34;&gt;回调留在 A 组件自身。&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;methods&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function&#34;&gt;demo&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;mounted&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;$bus&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;$on&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;xxxx&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;demo&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;提供数据： &lt;code&gt;this.$bus.$emit(&#39;xxxx&#39;,数据)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意事项&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;​	最好在 beforeDestroy 钩子中，用 $off 去解绑&lt;span style=&#34;color:red&#34;&gt;当前组件所用到的&lt;/span&gt;事件。&lt;/p&gt;
&lt;h2 id=&#34;todolist案例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#todolist案例&#34;&gt;#&lt;/a&gt; TodoList 案例&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;组件化编码流程：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;拆分静态组件：组件要按照功能点拆分，命名不要与 html 元素冲突；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;实现动态组件：考虑好数据的存放位置，数据是一个组件在用，还是一些组件在用：&lt;/p&gt;
&lt;p&gt;一个组件在用：放在组件自身即可；&lt;/p&gt;
&lt;p&gt;一些组件在用：放在他们共同的父组件上（&lt;span style=&#34;color:red&#34;&gt;状态提升&lt;/span&gt;）；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;实现交互：从绑定事件开始。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;props 适用于：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;父组件 ==&amp;gt; 子组件 通信&lt;/li&gt;
&lt;li&gt;子组件 ==&amp;gt; 父组件 通信（要求父先给子一个函数）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用 v-model 时要切记：v-model 绑定的值不能是 props 传过来的值，因为 props 是不可以修改的！&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;props 传过来的若是对象类型的值，修改对象中的属性时 Vue 不会报错，但不推荐这样做。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;组件间的通信规则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;父传子：使用 &lt;code&gt;props&lt;/code&gt; ；&lt;/li&gt;
&lt;li&gt;子传父：组件的自定义事件；&lt;/li&gt;
&lt;li&gt;兄弟间 / 爷孙间：全局事件总线；&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;输入框的焦点问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;失去焦点 &lt;code&gt;&amp;lt;input @blur=&#39;xxx()&#39; ref=&#39;yyy&#39;&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;获得焦点&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;xxx&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;$nextTick&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;$refs&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;inputTitle&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;focus&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;nextTick&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;语法： &lt;code&gt;this.$nextTick(回调函数)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;作用：在下一次 DOM 更新结束后执行其指定的回调。&lt;/li&gt;
&lt;li&gt;什么时候用：当改变数据后，要基于更新后的新 DOM 进行某些操作时，要在 nextTick 所指定的回调函数中执行。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;代码实例：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;App.vue&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;template&amp;gt;
  &amp;lt;div id=&amp;quot;root&amp;quot;&amp;gt;
    &amp;lt;div class=&amp;quot;todo-container&amp;quot;&amp;gt;
      &amp;lt;div class=&amp;quot;todo-wrap&amp;quot;&amp;gt;
        &amp;lt;MyHeader :receive=&amp;quot;receive&amp;quot; /&amp;gt;
        &amp;lt;MyList
          :todos=&amp;quot;todos&amp;quot;
          :checkTodo=&amp;quot;checkTodo&amp;quot;
          :deleteTodo=&amp;quot;deleteTode&amp;quot;
        /&amp;gt;
        &amp;lt;MyFooter
          :todos=&amp;quot;todos&amp;quot;
          :checkAllTodo=&amp;quot;checkAllTodo&amp;quot;
          :clearAllTodo=&amp;quot;clearAllTodo&amp;quot;
        /&amp;gt;
      &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/template&amp;gt;

&amp;lt;script&amp;gt;
import MyHeader from &amp;quot;./components/MyHeader.vue&amp;quot;;
import MyFooter from &amp;quot;./components/MyFooter.vue&amp;quot;;
import MyList from &amp;quot;./components/MyList.vue&amp;quot;;

export default &amp;#123;
  name: &amp;quot;App&amp;quot;,
  components: &amp;#123;
    MyHeader,
    MyFooter,
    MyList,
  &amp;#125;,
  //浏览器存储读取
  data() &amp;#123;
    return &amp;#123;
      todos: JSON.parse(localStorage.getItem(&amp;quot;todos&amp;quot;)) || [],
    &amp;#125;;
  &amp;#125;,
  //深度监视与浏览器存储
  watch: &amp;#123;
    todos: &amp;#123;
      deep: true,
      handler(value) &amp;#123;
        localStorage.setItem(&amp;quot;todos&amp;quot;, JSON.stringify(value));
      &amp;#125;,
    &amp;#125;,
  &amp;#125;,
  methods: &amp;#123;
    receive(todoObj) &amp;#123;
      this.todos.unshift(todoObj);
    &amp;#125;,
    checkTodo(id) &amp;#123;
      this.todos.forEach((todo) =&amp;gt; &amp;#123;
        if (todo.id === id) todo.done = !todo.done;
      &amp;#125;);
    &amp;#125;,
    deleteTode(id) &amp;#123;
      this.todos = this.todos.filter((todo) =&amp;gt; &amp;#123;
        return todo.id !== id;
      &amp;#125;);
    &amp;#125;,
    checkAllTodo(done) &amp;#123;
      this.todos.forEach((todo) =&amp;gt; (todo.done = done));
    &amp;#125;,
    clearAllTodo() &amp;#123;
      this.todos = this.todos.filter((todo) =&amp;gt; &amp;#123;
        return !todo.done;
      &amp;#125;);
    &amp;#125;,
  &amp;#125;,
&amp;#125;;
&amp;lt;/script&amp;gt;

&amp;lt;style&amp;gt;
/*base*/
body &amp;#123;
  background: #fff;
&amp;#125;

.btn &amp;#123;
  display: inline-block;
  padding: 4px 12px;
  margin-bottom: 0;
  font-size: 14px;
  line-height: 20px;
  text-align: center;
  vertical-align: middle;
  cursor: pointer;
  box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.2),
    0 1px 2px rgba(0, 0, 0, 0.05);
  border-radius: 4px;
&amp;#125;

.btn-danger &amp;#123;
  color: #fff;
  background-color: #da4f49;
  border: 1px solid #bd362f;
&amp;#125;

.btn-danger:hover &amp;#123;
  color: #fff;
  background-color: #bd362f;
&amp;#125;

.btn:focus &amp;#123;
  outline: none;
&amp;#125;

.todo-container &amp;#123;
  width: 600px;
  margin: 0 auto;
&amp;#125;
.todo-container .todo-wrap &amp;#123;
  padding: 10px;
  border: 1px solid #ddd;
  border-radius: 5px;
&amp;#125;
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;MyHeader.vue&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;template&amp;gt;
  &amp;lt;div class=&amp;quot;todo-header&amp;quot;&amp;gt;
    &amp;lt;input
      type=&amp;quot;text&amp;quot;
      placeholder=&amp;quot;请输入你的任务名称，按回车键确认&amp;quot;
      @keyup.enter=&amp;quot;add&amp;quot;
      v-model=&amp;quot;title&amp;quot;
    /&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/template&amp;gt;

&amp;lt;script&amp;gt;
import &amp;#123; nanoid &amp;#125; from &amp;quot;nanoid&amp;quot;;
export default &amp;#123;
  name: &amp;quot;MyHooter&amp;quot;,
  props: [&amp;quot;receive&amp;quot;],
  data() &amp;#123;
    return &amp;#123;
      title: &amp;quot;&amp;quot;,
    &amp;#125;;
  &amp;#125;,
  methods: &amp;#123;
    add() &amp;#123;
      if (!this.title.trim()) &amp;#123;
        return alert(&amp;quot;输入不能为空&amp;quot;);
      &amp;#125;
      const todoObj = &amp;#123;
        id: nanoid(),
        title: this.title,
        done: false,
      &amp;#125;;
      this.receive(todoObj);
      this.title = &amp;quot;&amp;quot;;
    &amp;#125;,
  &amp;#125;,
&amp;#125;;
&amp;lt;/script&amp;gt;

&amp;lt;style scoped&amp;gt;
/*header*/
.todo-header input &amp;#123;
  width: 560px;
  height: 28px;
  font-size: 14px;
  border: 1px solid #ccc;
  border-radius: 4px;
  padding: 4px 7px;
&amp;#125;

.todo-header input:focus &amp;#123;
  outline: none;
  border-color: rgba(82, 168, 236, 0.8);
  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075),
    0 0 8px rgba(82, 168, 236, 0.6);
&amp;#125;
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;MyList.vue&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;template&amp;gt;
  &amp;lt;ul class=&amp;quot;todo-main&amp;quot;&amp;gt;
    &amp;lt;MyItem
      v-for=&amp;quot;todoObj in todos&amp;quot;
      :key=&amp;quot;todoObj.id&amp;quot;
      :todo=&amp;quot;todoObj&amp;quot;
      :checkTodo=&amp;quot;checkTodo&amp;quot;
      :deleteTodo=&amp;quot;deleteTodo&amp;quot;
    /&amp;gt;
  &amp;lt;/ul&amp;gt;
&amp;lt;/template&amp;gt;

&amp;lt;script&amp;gt;
import MyItem from &amp;quot;./MyItem.vue&amp;quot;;
export default &amp;#123;
  name: &amp;quot;MyList&amp;quot;,
  components: &amp;#123;
    MyItem,
  &amp;#125;,
  props: [&amp;quot;todos&amp;quot;, &amp;quot;checkTodo&amp;quot;, &amp;quot;deleteTodo&amp;quot;],
&amp;#125;;
&amp;lt;/script&amp;gt;


&amp;lt;style scoped&amp;gt;
/*main*/
.todo-main &amp;#123;
  margin-left: 0px;
  border: 1px solid #ddd;
  border-radius: 2px;
  padding: 0px;
&amp;#125;

.todo-empty &amp;#123;
  height: 40px;
  line-height: 40px;
  border: 1px solid #ddd;
  border-radius: 2px;
  padding-left: 5px;
  margin-top: 10px;
&amp;#125;
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;MyItem.vue&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;template&amp;gt;
  &amp;lt;li&amp;gt;
    &amp;lt;label&amp;gt;
      &amp;lt;input
        type=&amp;quot;checkbox&amp;quot;
        :checked=&amp;quot;todo.done&amp;quot;
        @change=&amp;quot;handlecheck(todo.id)&amp;quot;
      /&amp;gt;
      &amp;lt;!-- 修改了props，违背了原则，但可以完成功能 --&amp;gt;
      &amp;lt;!-- &amp;lt;input type=&amp;quot;checkbox&amp;quot; v-model=&amp;quot;todo.done&amp;quot; /&amp;gt; --&amp;gt;
      &amp;lt;span&amp;gt;&amp;#123;&amp;#123; todo.title &amp;#125;&amp;#125;&amp;lt;/span&amp;gt;
    &amp;lt;/label&amp;gt;
    &amp;lt;button class=&amp;quot;btn btn-danger&amp;quot; @click=&amp;quot;del(todo.id)&amp;quot;&amp;gt;删除&amp;lt;/button&amp;gt;
  &amp;lt;/li&amp;gt;
&amp;lt;/template&amp;gt;

&amp;lt;script scoped&amp;gt;
export default &amp;#123;
  name: &amp;quot;MyItem&amp;quot;,
  props: [&amp;quot;todo&amp;quot;, &amp;quot;checkTodo&amp;quot;, &amp;quot;deleteTodo&amp;quot;],
  methods: &amp;#123;
    handlecheck(id) &amp;#123;
      this.checkTodo(id);
    &amp;#125;,
    del(id) &amp;#123;
      if (confirm(&amp;quot;确定删除吗&amp;quot;)) &amp;#123;
        this.deleteTodo(id);
      &amp;#125;
    &amp;#125;,
  &amp;#125;,
&amp;#125;;
&amp;lt;/script&amp;gt;

&amp;lt;style scoped&amp;gt;
/*item*/
li &amp;#123;
  list-style: none;
  height: 36px;
  line-height: 36px;
  padding: 0 5px;
  border-bottom: 1px solid #ddd;
&amp;#125;

li label &amp;#123;
  float: left;
  cursor: pointer;
&amp;#125;

li label li input &amp;#123;
  vertical-align: middle;
  margin-right: 6px;
  position: relative;
  top: -1px;
&amp;#125;

li button &amp;#123;
  float: right;
  display: none;
  margin-top: 3px;
&amp;#125;

li:before &amp;#123;
  content: initial;
&amp;#125;

li:last-child &amp;#123;
  border-bottom: none;
&amp;#125;
li:hover &amp;#123;
  background-color: #ddd;
&amp;#125;
li:hover button &amp;#123;
  display: block;
&amp;#125;
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;MyFooter.vue&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;template&amp;gt;
  &amp;lt;div class=&amp;quot;todo-footer&amp;quot; v-show=&amp;quot;todos.length&amp;quot;&amp;gt;
    &amp;lt;label&amp;gt;
      &amp;lt;input type=&amp;quot;checkbox&amp;quot; :checked=&amp;quot;isAll&amp;quot; @click=&amp;quot;checkAll&amp;quot; /&amp;gt;
      &amp;lt;!-- &amp;lt;input type=&amp;quot;checkbox&amp;quot; v-model=&amp;quot;isAll&amp;quot; /&amp;gt; --&amp;gt;
    &amp;lt;/label&amp;gt;
    &amp;lt;span&amp;gt;
      &amp;lt;span&amp;gt;已完成&amp;#123;&amp;#123; doneTatal &amp;#125;&amp;#125;&amp;lt;/span&amp;gt; / 全部&amp;#123;&amp;#123; todos.length &amp;#125;&amp;#125;
    &amp;lt;/span&amp;gt;
    &amp;lt;button class=&amp;quot;btn btn-danger&amp;quot; @click=&amp;quot;clearAll&amp;quot;&amp;gt;清除已完成任务&amp;lt;/button&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/template&amp;gt;

&amp;lt;script&amp;gt;
export default &amp;#123;
  name: &amp;quot;MyFooter&amp;quot;,
  props: [&amp;quot;todos&amp;quot;, &amp;quot;checkAllTodo&amp;quot;, &amp;quot;clearAllTodo&amp;quot;],
  computed: &amp;#123;
    doneTatal() &amp;#123;
      // this.todos.reduce((pre, currrnt) =&amp;gt; &amp;#123;
      //   return pre + (currrnt.done ? 1 : 0);
      // &amp;#125;, 0);
      //简写形式
      return this.todos.reduce(
        (pre, current) =&amp;gt; pre + (current.done ? 1 : 0),
        0
      );
    &amp;#125;,
    //v-model的回调方法（计算属性的完整写法）
    // isAll: &amp;#123;
    //   get() &amp;#123;
    //     return this.doneTatal === this.todos.length &amp;amp;&amp;amp; this.todos.length !== 0;
    //   &amp;#125;,
    //   set(value) &amp;#123;
    //     this.checkAllTodo(value);
    //   &amp;#125;,
    // &amp;#125;,
    isAll() &amp;#123;
      return this.doneTatal === this.todos.length &amp;amp;&amp;amp; this.todos.length !== 0;
    &amp;#125;,
  &amp;#125;,
  methods: &amp;#123;
    checkAll(e) &amp;#123;
      this.checkAllTodo(e.target.checked); //e.target.value也行
    &amp;#125;,
    clearAll() &amp;#123;
      this.clearAllTodo();
    &amp;#125;,
  &amp;#125;,
&amp;#125;;
&amp;lt;/script&amp;gt;

&amp;lt;style scoped&amp;gt;
/*footer*/
.todo-footer &amp;#123;
  height: 40px;
  line-height: 40px;
  padding-left: 6px;
  margin-top: 5px;
&amp;#125;

.todo-footer label &amp;#123;
  display: inline-block;
  margin-right: 20px;
  cursor: pointer;
&amp;#125;

.todo-footer label input &amp;#123;
  position: relative;
  top: -1px;
  vertical-align: middle;
  margin-right: 5px;
&amp;#125;

.todo-footer button &amp;#123;
  float: right;
  margin-top: 5px;
&amp;#125;
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;消息订阅与发布&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#消息订阅与发布&#34;&gt;#&lt;/a&gt; 消息订阅与发布&lt;/h2&gt;
&lt;p&gt;​	消息的订阅与发布（pubsub）是一种组件间通信的方式，适用于&lt;span style=&#34;color:red&#34;&gt;任意组件间通信&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用步骤：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;安装 pubsub： &lt;code&gt;npm i pubsub-js&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;引入:  &lt;code&gt;import pubsub from &#39;pubsub-js&#39;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;接收数据：A 组件想接收数据，则在 A 组件中订阅消息，订阅的&lt;span style=&#34;color:red&#34;&gt;回调留在 A 组件自身；&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;methods&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function&#34;&gt;demo&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;mounted&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pid &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; pubsub&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;subscribe&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;xxx&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;demo&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 订阅消息&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;提供数据： &lt;code&gt;pubsub.publish(&#39;xxx&#39;,数据)&lt;/code&gt; ；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;最好在 beforeDestroy 钩子中，用 &lt;code&gt;PubSub.unsubscribe(pid)&lt;/code&gt;  去取消订阅。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;过度与动画&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#过度与动画&#34;&gt;#&lt;/a&gt; 过度与动画&lt;/h2&gt;
&lt;h3 id=&#34;vue封装的过度与动画&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vue封装的过度与动画&#34;&gt;#&lt;/a&gt; Vue 封装的过度与动画&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;功能：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	在插入、更新或移除 DOM 元素时，在合适的时候给元素添加样式类名。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;写法：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;​	元素进入的样式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;v-enter：进入的起点&lt;/li&gt;
&lt;li&gt;v-enter-active：进入过程中&lt;/li&gt;
&lt;li&gt;v-enter-to：进入的终点&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;元素离开的样式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;v-leave：离开的起点&lt;/li&gt;
&lt;li&gt;v-leave-active：离开过程中&lt;/li&gt;
&lt;li&gt;v-leave-to：离开的终点&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;过渡代码实例：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;style scoped&amp;gt;
	h1&amp;#123;
		background-color: orange;
	&amp;#125;
	/* 进入的起点、离开的终点 */
	.hello-enter,.hello-leave-to&amp;#123;
		transform: translateX(-100%);
	&amp;#125;
	.hello-enter-active,.hello-leave-active&amp;#123;
		transition: 0.5s linear;
	&amp;#125;
	/* 进入的终点、离开的起点 */
	.hello-enter-to,.hello-leave&amp;#123;
		transform: translateX(0);
	&amp;#125;
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;动画代码实例：&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;bounce&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;enter&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;active &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    animation&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; bounce&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;.5&lt;/span&gt;s&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;bounce&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;leave&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;active &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    animation&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; bounce&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;.5&lt;/span&gt;s reverse&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;@keyframes bounce&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        transform&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;scale&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token number&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        transform&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;scale&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1.5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        transform&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;scale&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用 &lt;code&gt;&amp;lt;transition&amp;gt;&lt;/code&gt;  包裹要过度或动画的元素，并配置 name 属性：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;transition name=&amp;quot;hello&amp;quot;&amp;gt;
	&amp;lt;h1 v-show=&amp;quot;isShow&amp;quot;&amp;gt;你好啊！&amp;lt;/h1&amp;gt;
&amp;lt;/transition&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;备注：若有多个元素需要过度，则需要使用： &lt;code&gt;&amp;lt;transition-group&amp;gt;&lt;/code&gt; ，且每个元素都要指定 &lt;code&gt;key&lt;/code&gt;  值。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;第三方库的使用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第三方库的使用&#34;&gt;#&lt;/a&gt; 第三方库的使用&lt;/h3&gt;
&lt;p&gt;常用的第三方库动画的地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvYW5pbWF0ZS5jc3M=&#34;&gt;animate.css - npm (npmjs.com)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;代码实例：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;template&amp;gt;
	&amp;lt;div&amp;gt;
		&amp;lt;button @click=&amp;quot;isShow = !isShow&amp;quot;&amp;gt;显示/隐藏&amp;lt;/button&amp;gt;
		&amp;lt;transition-group 
			appear
			name=&amp;quot;animate__animated animate__bounce&amp;quot; 
			enter-active-class=&amp;quot;animate__swing&amp;quot;
			leave-active-class=&amp;quot;animate__backOutUp&amp;quot;
		&amp;gt;
			&amp;lt;h1 v-show=&amp;quot;!isShow&amp;quot; key=&amp;quot;1&amp;quot;&amp;gt;你好啊！&amp;lt;/h1&amp;gt;
			&amp;lt;h1 v-show=&amp;quot;isShow&amp;quot; key=&amp;quot;2&amp;quot;&amp;gt;尚硅谷！&amp;lt;/h1&amp;gt;
		&amp;lt;/transition-group&amp;gt;
	&amp;lt;/div&amp;gt;
&amp;lt;/template&amp;gt;

&amp;lt;script&amp;gt;
	import &#39;animate.css&#39;
	export default &amp;#123;
		name:&#39;Test&#39;,
		data() &amp;#123;
			return &amp;#123;
				isShow:true
			&amp;#125;
		&amp;#125;,
	&amp;#125;
&amp;lt;/script&amp;gt;

&amp;lt;style scoped&amp;gt;
	h1&amp;#123;
		background-color: orange;
	&amp;#125;
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;vue脚手架配置代理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vue脚手架配置代理&#34;&gt;#&lt;/a&gt; vue 脚手架配置代理&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;方法一&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	在 vue.config.js 中添加如下配置：&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;devServer&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  proxy&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;http://localhost:5000&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;说明：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;优点：配置简单，请求资源时直接发给前端（8080）即可。&lt;/li&gt;
&lt;li&gt;缺点：不能配置多个代理，不能灵活的控制请求是否走代理。&lt;/li&gt;
&lt;li&gt;工作方式：若按照上述配置代理，当请求了前端不存在的资源时，那么该请求会转发给服务器 （优先匹配前端资源）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;方法二&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	编写 vue.config.js 配置具体代理规则：&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;module&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;exports &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	devServer&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      proxy&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token string&#34;&gt;&#39;/api1&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 匹配所有以 &#39;/api1&#39; 开头的请求路径&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        target&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;http://localhost:5000&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 代理目标的基础路径&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        changeOrigin&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        pathRewrite&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;^/api1&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token string&#34;&gt;&#39;/api2&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 匹配所有以 &#39;/api2&#39; 开头的请求路径&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        target&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;http://localhost:5001&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 代理目标的基础路径&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        changeOrigin&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        pathRewrite&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;^/api2&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/*&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   changeOrigin 设置为 true 时，服务器收到的请求头中的 host 为：localhost:5000&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   changeOrigin 设置为 false 时，服务器收到的请求头中的 host 为：localhost:8080&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   changeOrigin 默认值为 true&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;*/&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;说明：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;优点：可以配置多个代理，且可以灵活的控制请求是否走代理。&lt;/li&gt;
&lt;li&gt;缺点：配置略微繁琐，请求资源时必须加前缀。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;问题与解决方案&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#问题与解决方案&#34;&gt;#&lt;/a&gt; 问题与解决方案&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Vue 的面试题&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zZWdtZW50ZmF1bHQuY29tL2EvMTE5MDAwMDAxODYzNDc0NA==&#34;&gt;前端面试题 -- Vue - SegmentFault 思否&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;报错&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2t3YW1lMjExL2FydGljbGUvZGV0YWlscy8xMjAzMzIxMTQ=&#34;&gt;Vue 报错：component has been registered but not used，即定义好的组件未被使用&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://nc3021.github.io/2021/12/08/front-end/JavaScript/</guid>
            <title>JavaScript学习</title>
            <link>https://nc3021.github.io/2021/12/08/front-end/JavaScript/</link>
            <category term="前端" scheme="https://nc3021.github.io/categories/front-end/" />
            <category term="前端" scheme="https://nc3021.github.io/tags/%E5%89%8D%E7%AB%AF/" />
            <pubDate>Wed, 08 Dec 2021 19:17:11 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;javascript学习&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#javascript学习&#34;&gt;#&lt;/a&gt; JavaScript 学习&lt;/h1&gt;
&lt;h2 id=&#34;html中的javascript&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#html中的javascript&#34;&gt;#&lt;/a&gt; HTML 中的 JavaScript&lt;/h2&gt;
&lt;h3 id=&#34;script元素&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#script元素&#34;&gt;#&lt;/a&gt; &amp;lt;script&amp;gt; 元素&lt;/h3&gt;
&lt;p&gt;在 &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;  元素中的代码或外部 JavaScript 文件被解释完之前，页面的其余内容不会被加载，也不会被显示；&lt;/p&gt;
&lt;p&gt;如果同时存在 &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;  元素中的代码和外部 JavaScript 文件时，浏览器只会下载并执行脚本文件，忽略行内代码；&lt;/p&gt;
&lt;p&gt;现代 Web 应用程序一般将 JavaScript 的引用放在 &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;  元素中的页面内容后面；&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211123214438.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h4 id=&#34;延迟脚本&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#延迟脚本&#34;&gt;#&lt;/a&gt; 延迟脚本&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;defer&lt;/code&gt;  属性：表明脚本在执行时不会影响页面的构造，即脚本会被延迟到整个页面都解析完毕后再运行；&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211123214900.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;输入输出&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#输入输出&#34;&gt;#&lt;/a&gt; 输入输出&lt;/h3&gt;
&lt;h4 id=&#34;输出&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#输出&#34;&gt;#&lt;/a&gt; 输出&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211120154248.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token script&#34;&gt;&lt;span class=&#34;token language-javascript&#34;&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token function&#34;&gt;prompt&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;这是一个输入框&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token function&#34;&gt;alert&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;这是一个警示框&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;这是控制台打印输出的&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;输入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#输入&#34;&gt;#&lt;/a&gt; 输入&lt;/h4&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; age &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;promopt&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;请输入你的年龄&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;语言基础&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#语言基础&#34;&gt;#&lt;/a&gt; 语言基础&lt;/h2&gt;
&lt;h3 id=&#34;数据类型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据类型&#34;&gt;#&lt;/a&gt; 数据类型&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211123183451.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;typeof操作符&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#typeof操作符&#34;&gt;#&lt;/a&gt; typeof 操作符&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211124155612.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;number型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#number型&#34;&gt;#&lt;/a&gt; Number 型&lt;/h3&gt;
&lt;p&gt;数字型进制：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211123185430.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;数值型范围：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211123185459.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;数值型的三个特殊值：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211123185516.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;isNaN（）函数：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211123185619.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;NaN:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211124161440.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;浮点数：&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211124161136.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;永远不要测试某个特定的浮点数值；&lt;/p&gt;
&lt;h3 id=&#34;string型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#string型&#34;&gt;#&lt;/a&gt; String 型&lt;/h3&gt;
&lt;p&gt;单引号或者双引号，如果嵌套就外双内单或内双外单；&lt;/p&gt;
&lt;p&gt;字符串转义符：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211123190141.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;字符串长度：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; txt &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;abcdefg&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;txt&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;字符串拼接：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211123191254.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;toString():&lt;/p&gt;
&lt;p&gt;数值、布尔值、对象和字符串值（没错，每个字符串也都有一个 toString () 方法，该方法返回字符串的一个副本）都有 toString () 方法。但 null 和 undefined 值没有这个方法；&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211124174400.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;boolean型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#boolean型&#34;&gt;#&lt;/a&gt; Boolean 型&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211123192929.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;true 和 false 是区分大小写的，故必须小写；&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211124160713.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211124160738.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;undefined与null&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#undefined与null&#34;&gt;#&lt;/a&gt; undefined 与 null&lt;/h3&gt;
&lt;p&gt;如果一个变量声明未赋值，就是 undefined（未定义数据类型）；&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211123193344.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;一个声明变量给 null 值，里面存的值为空；逻辑上讲，null 值表示一个空对象指针；&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; car &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;typeof&lt;/span&gt; car&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;//&#34;object&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211123193352.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;symbol型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#symbol型&#34;&gt;#&lt;/a&gt; Symbol 型&lt;/h3&gt;
&lt;p&gt;symbol 的值是通过 Symbol () 函数生成，每一个 symbol 的值都是唯一的，并且 symbol 类型的值可以作为对象的属性标识符使用，这也是 symbol 类型设计的目的。&lt;br /&gt;
所以现在对象属性名可以为两种类型：一种就是原本的字符串类型，一种即为新增的 symbol 类型。凡是使用 symbol 命名的属性都是独一无二的，保证不与其他属性名产生冲突。&lt;/p&gt;
&lt;h3 id=&#34;object型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#object型&#34;&gt;#&lt;/a&gt; Object 型&lt;/h3&gt;
&lt;p&gt;对象（Object）其实就是一组数据和功能的集合。对象可以通过执行 new 操作符后跟要创建 的对象类型的名称来创建。而创建 Object 类型的实例并为其添加属性和（或）方法，就可以创建自定义对象；&lt;/p&gt;
&lt;h3 id=&#34;数值转换&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数值转换&#34;&gt;#&lt;/a&gt; 数值转换&lt;/h3&gt;
&lt;p&gt;Number():&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211124173747.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;parseInt ():(优先使用)&lt;/p&gt;
&lt;p&gt;不能转换出小数；&lt;/p&gt;
&lt;p&gt;第二个参数为进制数；&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211124173849.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;parseFloat():&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211124174032.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;字符串操作方法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#字符串操作方法&#34;&gt;#&lt;/a&gt; 字符串操作方法&lt;/h3&gt;
&lt;p&gt;提取字符串：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;slice()&lt;/code&gt;   &lt;code&gt;substr()&lt;/code&gt;   &lt;code&gt;substring&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211125144400.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;查看字符串位置：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;indexOf&lt;/code&gt;   &lt;code&gt;lastIndexOf()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211125144909.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;trim()：&lt;/p&gt;
&lt;p&gt;这个方法会创建字符串的一个副本，删除前、后所有空格符，再返回结果；另外，trimLeft () 和 trimRight () 方法分别用于从字符串开始和末尾清理空格符。&lt;/p&gt;
&lt;p&gt;repeat():&lt;/p&gt;
&lt;p&gt;这个方法接收一个整数参数，表示要将字符串复制多少次，然后返回拼接所有副本后的结果。&lt;/p&gt;
&lt;p&gt;padStart () 与 padEnd ()：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211125145704.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;大小写转换：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;toLowerCase&lt;/code&gt;   &lt;code&gt;toUpperCase&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;将字符串全部转换为小写（大写）；&lt;/p&gt;
&lt;p&gt;字符串替换：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;replace()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211125150414.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;localeCompare():&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211125150626.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;math&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#math&#34;&gt;#&lt;/a&gt; Math&lt;/h3&gt;
&lt;p&gt;Math 的基本属性：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211125151221.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;求最大最小值：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;min()&lt;/code&gt;   &lt;code&gt;max()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211125151343.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;舍入方法：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;round()&lt;/code&gt;   &lt;code&gt;fround()&lt;/code&gt;   &lt;code&gt;ceil()&lt;/code&gt;   &lt;code&gt;floor()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;round (): 执行四舍五入；&lt;/p&gt;
&lt;p&gt;fround (): 返回数值最接近的单精度（32 位）浮点值；&lt;/p&gt;
&lt;p&gt;ceil (): 向上舍入最接近的整数；&lt;/p&gt;
&lt;p&gt;floor (): 向下舍入最接近的整数；&lt;/p&gt;
&lt;p&gt;随机数：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;random()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;该方法生成一个在 [0,1) 范围内的随机数；&lt;/p&gt;
&lt;p&gt;通常使用方法：&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;selectFrom&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;lowerValue&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;upperValue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; choices &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; upperValue&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;lowerValue&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; Math&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;floor&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;Math&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;random&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;choices&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;lowerValue&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;其它数学方法：&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211125152535.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;array&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#array&#34;&gt;#&lt;/a&gt; Array&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;from()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Array.from () 的第一个参数是一个类数组对象，即任何可迭代的结构，或者有一个 length 属性和可索引元素的结构；&lt;/p&gt;
&lt;p&gt;Array.from () 还接收第二个可选的映射函数参数，这个函数可以直接增强新数组的值；&lt;/p&gt;
&lt;p&gt;&lt;code&gt;fill()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211125155931.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;copyWithin()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;toString()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;push()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;该方法接收任意数量的参数，并将它们添加到数组末尾，返回数组的最新长度。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pop()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;该方法则用于删除数组的最后一项，同时减少数组的 length 值，返回被删除的项。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shift()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;该方法它会删除数组的第一项并返回它，然后数组长度减 1。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;unshift()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;该方法会在数组开头添加任意多个值，然后返回新的数组长度。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;reverse()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;该方法将数组元素反向排序；&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sort()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;一般使用该方法时接收一个比较函数；&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211125161333.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;slice()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211125161705.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;如果参数有负数，则改为数组长度加上负值。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;splice()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211125161929.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;定型数组：&lt;/p&gt;
&lt;h3 id=&#34;map&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#map&#34;&gt;#&lt;/a&gt; Map&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211125162502.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;set()&lt;/code&gt;   &lt;code&gt;get()&lt;/code&gt;   &lt;code&gt;has()&lt;/code&gt;   &lt;code&gt;delete()&lt;/code&gt;   &lt;code&gt;clear()&lt;/code&gt;   &lt;code&gt;size&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211125162651.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;与 Object 只能使用数值、字符串或符号作为键不同，Map 可以使用任何 JavaScript 数据类型作为键。&lt;/p&gt;
&lt;p&gt;弱映射 (weakmap):&lt;/p&gt;
&lt;h2 id=&#34;操作符&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#操作符&#34;&gt;#&lt;/a&gt; 操作符&lt;/h2&gt;
&lt;h3 id=&#34;一元操作符&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一元操作符&#34;&gt;#&lt;/a&gt; 一元操作符&lt;/h3&gt;
&lt;p&gt;递增递减操作符（++/--）：&lt;/p&gt;
&lt;p&gt;前缀递增或递减时，变量的值都是在语句被求值以前改变的；后缀递增或递减时，变量的值都是在语句求值之后才改变的；&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211124180217.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;正负操作符（+/-）：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211124180309.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;位操作符&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#位操作符&#34;&gt;#&lt;/a&gt; 位操作符&lt;/h3&gt;
&lt;h3 id=&#34;布尔操作符&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#布尔操作符&#34;&gt;#&lt;/a&gt; 布尔操作符&lt;/h3&gt;
&lt;p&gt;逻辑非！：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211124180711.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;通过使用（！！n）将一个值转换位其对应的布尔值；&lt;/p&gt;
&lt;p&gt;逻辑与 &amp;amp;&amp;amp;：&lt;/p&gt;
&lt;p&gt;逻辑或 ||：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;一些特殊用法：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;防止初始值为 null&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/2GK7G3BRUUOEFHPCB.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;乘性操作符&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#乘性操作符&#34;&gt;#&lt;/a&gt; 乘性操作符&lt;/h3&gt;
&lt;p&gt;乘法：&lt;/p&gt;
&lt;p&gt;除法：&lt;/p&gt;
&lt;p&gt;取模：&lt;/p&gt;
&lt;h3 id=&#34;指数操作符&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#指数操作符&#34;&gt;#&lt;/a&gt; 指数操作符（**）&lt;/h3&gt;
&lt;h3 id=&#34;加性操作符&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#加性操作符&#34;&gt;#&lt;/a&gt; 加性操作符&lt;/h3&gt;
&lt;p&gt;加法：&lt;/p&gt;
&lt;p&gt;减法：&lt;/p&gt;
&lt;h3 id=&#34;关系运算符&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#关系运算符&#34;&gt;#&lt;/a&gt; 关系运算符（&amp;gt;&amp;lt;)&lt;/h3&gt;
&lt;h3 id=&#34;相等操作符&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#相等操作符&#34;&gt;#&lt;/a&gt; 相等操作符&lt;/h3&gt;
&lt;p&gt;由于相等和不相等操作符存在类型转换问题，而为了保持代码中数据类型的完整性，一般推荐使用全等和不全等操作符；&lt;/p&gt;
&lt;h2 id=&#34;迭代器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#迭代器&#34;&gt;#&lt;/a&gt; 迭代器&lt;/h2&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9qdWVqaW4uY24vcG9zdC82OTE5MDIzMDM4Njg4MTMzMTI3&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;对象与类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#对象与类&#34;&gt;#&lt;/a&gt; 对象与类&lt;/h2&gt;
&lt;h3 id=&#34;对象&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#对象&#34;&gt;#&lt;/a&gt; 对象&lt;/h3&gt;
&lt;h4 id=&#34;对象属性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#对象属性&#34;&gt;#&lt;/a&gt; 对象属性&lt;/h4&gt;
&lt;p&gt;数据属性：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211207130924.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;将属性显式添加到对象之后，[[Configurable]]、[[Enumerable]] 和 [[Writable]] 都会被设置为 true，而 [[Value]] 特性会被设置为指定的值；&lt;/p&gt;
&lt;p&gt;属性修改&lt;/p&gt;
&lt;p&gt;Object.defineProperty () 方法：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211207131232.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;在调用 Object.defineProperty () 时，configurable、enumerable 和 writable 的值如果不指定，则都默认为 false;&lt;/p&gt;
&lt;p&gt;访问器属性：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211207131606.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;属性定义&lt;/p&gt;
&lt;p&gt;Object.defineProperty () 方法：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211207131657.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;定义多个属性&lt;/p&gt;
&lt;p&gt;Objext.define-Properties () 方法：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211207132004.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;读取属性的特性：&lt;/p&gt;
&lt;p&gt;Object.getOwnPropertyDescriptor () 方法:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211207133757.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;合并对象：~P210&lt;/p&gt;
&lt;p&gt;对象标识及相等判定：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211207134812.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;对象结构：~P216&lt;/p&gt;
&lt;h4 id=&#34;创建对象&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#创建对象&#34;&gt;#&lt;/a&gt; 创建对象&lt;/h4&gt;
&lt;p&gt;工厂模式（非构造函数）：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211207141244.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;构造函数模式：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211207141325.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;两者区别：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;没有显式地创建对象&lt;/li&gt;
&lt;li&gt;属性和方法直接赋值给了 this&lt;/li&gt;
&lt;li&gt;没有 return&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;​	按照惯例，构造函数名称的首字母都是要大写的， 非构造函数则以小写字母开头；&lt;/p&gt;
&lt;p&gt;​	构造函数与普通函数唯一的区别就是调用方式不同。除此之外，构造函数也是函数。并没有把某个函数定义为构造函数的特殊语法。任何函数只要使用 new 操作符调用就是构造函数，而不使用 new 操作符调用的函数就是普通函数；&lt;/p&gt;
&lt;p&gt;​	但通过构造函数创建出的每个实例的函数虽然同名但不相等，故因此一般将函数定义转移到构造函数外部；&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211207141906.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;原型模式：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211207144623.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Object.getProtorypeOf () 方法：&lt;/p&gt;
&lt;p&gt;返回参数的内部特性 &lt;code&gt;Prototype&lt;/code&gt;  的值；&lt;/p&gt;
&lt;p&gt;Object.create () 方法：&lt;/p&gt;
&lt;p&gt;创建一个新对象，同时为其指定原型；&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211207145234.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Object.hasOwnProperty () 方法：&lt;/p&gt;
&lt;p&gt;确定某个属性是在实例上还是原型对象上；参数为属性名，返回 ture 则说明来自实例，返回 false 则说明来自原型；&lt;/p&gt;
&lt;p&gt;in 操作符：&lt;/p&gt;
&lt;p&gt;确定某个属性是否在该对象的实例或原型对象上；&lt;/p&gt;
&lt;p&gt;Object.keys () 方法：&lt;/p&gt;
&lt;p&gt;这个方法接收一个对象作为参数，返回包含该对象所有可枚举属性名称的字符串数组；&lt;/p&gt;
&lt;p&gt;对象迭代：&lt;/p&gt;
&lt;p&gt;Object.entries () 方法：&lt;/p&gt;
&lt;p&gt;接收一个对象，返回它们内容（键值对）的数组；&lt;/p&gt;
&lt;p&gt;Object.values () 方法：&lt;/p&gt;
&lt;p&gt;接收一个对象，返回它们对象值的数组；&lt;/p&gt;
&lt;p&gt;例：[[&#39; 键 &#39;，&#39; 值 &#39;]，[&#39; 键 &#39;，&#39; 值 &#39;]，[&#39; 键 &#39;，&#39; 值 &#39;]]&lt;/p&gt;
&lt;p&gt;注意：非字符串属性会被转换为字符串输出，符号属性会被忽略；&lt;/p&gt;
&lt;h4 id=&#34;继承&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#继承&#34;&gt;#&lt;/a&gt; 继承&lt;/h4&gt;
&lt;p&gt;原型链：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211207152745.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;instanceof 操作符：&lt;/p&gt;
&lt;p&gt;如果一个实例的原型链中出现过相应的构造函数，则返回 true；&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;instance &lt;span class=&#34;token keyword&#34;&gt;instanceof&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Object&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;//ture&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;isProtorypeOf () 方法：&lt;/p&gt;
&lt;p&gt;如果原型链中包含这个原型，则返回 true；&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Object&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;prototype&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;isPrototypeOf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;instance&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;//true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h5 id=&#34;组合继承&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#组合继承&#34;&gt;#&lt;/a&gt; 组合继承&lt;/h5&gt;
&lt;p&gt;​	综合了原型链和盗用构造函数，通过盗用构造函数继承构造函数的属性，通过原型链继承原型上的方法；&lt;/p&gt;
&lt;p&gt;​	从而避免了原型中所包含的引用值会在所有的实例间共享的问题（原型链的弊端）；以及盗用构造函数中重新定义方法的问题；&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211207154629.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h5 id=&#34;原型式继承&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#原型式继承&#34;&gt;#&lt;/a&gt; 原型式继承&lt;/h5&gt;
&lt;p&gt;Object.create () 方法：&lt;/p&gt;
&lt;p&gt;接收两个参数：第一个作为新对象原型的对象，第二个为给新对象定义额外属性的对象（可选）。在只有一个参数时， Object.create () 与这里的 object () 方法效果相同；&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211207155422.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211207155456.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h5 id=&#34;寄生式组合继承&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#寄生式组合继承&#34;&gt;#&lt;/a&gt; 寄生式组合继承&lt;/h5&gt;
&lt;p&gt;​	寄生式组合继承通过盗用构造函数继承属性，但使用混合式原型链继承方法。基本思路是不通过调用父类构造函数给子类原型赋值，而是取得父类原型的一个副本。说到底就是使用寄生式继承来继承父类原型，然后将返回的新对象赋值给子类原型；&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211207163841.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211207163907.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;相比于组合继承，少调用了一次父构造函数（只在最后构造实例时调用了父构造函数），从而效率更高，是引用类型继承的最佳模式；&lt;/p&gt;
&lt;h4 id=&#34;类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#类&#34;&gt;#&lt;/a&gt; 类&lt;/h4&gt;
&lt;p&gt;​	与函数类型相似，定义类也有两种主要方式：类声明和类表达式。这两种方式都使用 class 关键字加大括号：&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Person&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 类声明&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; Animal &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 类表达式&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;​	与函数表达式式类似，类表达式在它们被求值前也不能引用。不过，与函数定义不同的是，虽然函数声明可以提升，但类定义不能；&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211207165453.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;类构造函数&lt;/p&gt;
&lt;p&gt;​	constructor () 用于在类定义块内部创建类的构造函数。方法名 constructor 会告诉解释器在使用 new 操作符创建类的新实例时，应该调用这个函数。构造函数的定义不是必需的，不定义构造函数相当于将构造函数定义为空函数；&lt;/p&gt;
&lt;p&gt;实例、原型、类成员：~P254&lt;/p&gt;
&lt;p&gt;继承：~P258&lt;/p&gt;
&lt;h2 id=&#34;代理和反射&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#代理和反射&#34;&gt;#&lt;/a&gt; 代理和反射&lt;/h2&gt;
&lt;h2 id=&#34;函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#函数&#34;&gt;#&lt;/a&gt; 函数&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211208125425.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;​	函数声明可以提升，但函数表达式不可以；&lt;/p&gt;
&lt;h3 id=&#34;函数参数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#函数参数&#34;&gt;#&lt;/a&gt; 函数参数&lt;/h3&gt;
&lt;p&gt;​	函数的参数在函数内部表现为一个数组，存放在一个类数组对象 &lt;code&gt;arguments&lt;/code&gt;  中；&lt;/p&gt;
&lt;p&gt;​	可以通过 arguments [0] 获得第一个参数；也可以通过 arguments 的 length 属性检查传入的参数个数，即&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211208131516.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;但如果采用箭头函数则没有 arguments 对象。&lt;/p&gt;
&lt;p&gt;​	arguments 还有一个属性 &lt;code&gt;callee&lt;/code&gt; , 是一个指向 arguments 对象所在函数的指针，可以让函数逻辑与函数名解耦；&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;jiecheng&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;num&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;num&lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; num&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;jiecheng&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;num&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;期约与异步函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#期约与异步函数&#34;&gt;#&lt;/a&gt; 期约与异步函数&lt;/h2&gt;
&lt;h3 id=&#34;期约&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#期约&#34;&gt;#&lt;/a&gt; 期约&lt;/h3&gt;
&lt;p&gt;~P325&lt;/p&gt;
&lt;h3 id=&#34;异步函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#异步函数&#34;&gt;#&lt;/a&gt; 异步函数&lt;/h3&gt;
&lt;p&gt;~P348&lt;/p&gt;
&lt;h2 id=&#34;bom&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#bom&#34;&gt;#&lt;/a&gt; BOM&lt;/h2&gt;
&lt;p&gt;浏览器对象模型（Browser Object Model）&lt;/p&gt;
&lt;h3 id=&#34;window&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#window&#34;&gt;#&lt;/a&gt; window&lt;/h3&gt;
&lt;p&gt;Global 作用域：&lt;/p&gt;
&lt;p&gt;​	通过 var 声明的所有全局变量和函数都会变成 window 对象的属性和方法；但通过 let 或 const 声明的则不会把变量添加给全局对象。&lt;/p&gt;
&lt;p&gt;窗口位置：&lt;/p&gt;
&lt;p&gt;​	 &lt;code&gt;window.screenLeft&lt;/code&gt; : 窗口相对于屏幕左侧的距离（单位：CSS 像素）&lt;/p&gt;
&lt;p&gt;​	 &lt;code&gt;window.screenTop&lt;/code&gt; : 窗口相对于屏幕顶部的距离（单位：CSS 像素）&lt;/p&gt;
&lt;p&gt;像素比：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211208153905.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;窗口大小：&lt;/p&gt;
&lt;p&gt;​	所有现代浏览器都支持 4 个属性： innerWidth、innerHeight、outerWidth 和 outerHeight。outerWidth 和 outerHeight 返回浏览器窗口自身的大小（不管是在最外层 window 上使用，还是在窗格中使用；innerWidth 和 innerHeight 返回浏览器窗口中页面视口的大小（不包含浏览器边框和工具栏）。&lt;/p&gt;
&lt;p&gt;window.open():&lt;/p&gt;
&lt;p&gt;​	window.open () 方法可以用于导航到指定 URL，也可以用于打开新浏览器窗口。这个方法接收 4 个参数：要加载的 URL、目标窗口、特性字符串和表示新窗口在浏览器历史记录中是否替代当前加载页 面的布尔值。通常，调用这个方法时只传前 3 个参数，最后一个参数只有在不打开新窗口时才会使用。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211208155632.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;定时器：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;setTimeout()&lt;/code&gt;  该方法通常接收两个参数：要执行的代码和在执行回调函数前等待的时间（毫秒）。第一个参数可以是包含 JavaScript 代码的字符串（类似于传给 eval () 的字符串）或者一个函数，第二个参数是要等待的毫秒数，并会返回一个唯一标识符，可用于取消该任务，只要是在指定时间到达之前调用 clearTimeout ()，就可以取消超时任务。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; timeoutId &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setTimeout&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;alert&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;hello&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;clearTimeout&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;timeoutId&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 取消超时任务&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;code&gt;setInterval()&lt;/code&gt;  与 setTimeout () 的使用方法类似，只不过指定的任务会每隔指定时间就执行一次，直到取消循环定时或者页面卸载。setInterval () 同样可以接收两个参数：要执行的代码（字符串或函数），以及把下一次执行定时代码的任务添加到队列要等待的时间。其也会返回一个标识符，通过 clearInterval () 来取消任务。&lt;/p&gt;
&lt;p&gt;系统对话框：&lt;/p&gt;
&lt;p&gt;​	可以让浏览器调用系统对话框向用户显示消息。这 些对话框与浏览器中显示的网页无关，而且也不包含 HTML。它们的外观由操作系统或者浏览器决定，无法使用 CSS 设置。此外，这些对话框都是同步的模态对话框，即在它们显示的时候，代码会停止执行， 在它们消失以后，代码才会恢复执行.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;alert()&lt;/code&gt; : 只接收一个参数&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211208161116.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;confirm()&lt;/code&gt; ：只接收一个参数，并返回布尔值&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211208161413.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;prompt()&lt;/code&gt; ：接收两个参数，第一个是要显示给用户的文本，第二个是文本框的默认值（可以是空字符串），最后返回文本框中的值&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211208161629.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;location&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#location&#34;&gt;#&lt;/a&gt; location&lt;/h3&gt;
&lt;p&gt;location 是最有用的 BOM 对象之一，提供了当前窗口中加载文档的信息，以及通常的导航功能。 这个对象独特的地方在于，它既是 window 的属性，也是 document 的属性。也就是说， window.location 和 document.location 指向同一个对象。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211208161815.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;navigator&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#navigator&#34;&gt;#&lt;/a&gt; navigator&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211208162355.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;screen&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#screen&#34;&gt;#&lt;/a&gt; screen&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211208162529.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;history&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#history&#34;&gt;#&lt;/a&gt; history&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;go()&lt;/code&gt;  方法可以在用户历史记录中沿任何方向导航，可以前进也可以后退。这个方法只接收一个参数， 这个参数可以是一个整数，表示前进或后退多少步。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;history&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;go&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 后退一页&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;history&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;go&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 前进两页&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;code&gt;history.length&lt;/code&gt;  用来表示历史记录的数量。&lt;/p&gt;
&lt;p&gt;​	对于窗口或标签页中加载的第一个页面，history.length 等于 1。 通过以下方法测试这个值，可以确定用户浏览器的起点是不是你的页面。&lt;/p&gt;
&lt;h2 id=&#34;dom&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#dom&#34;&gt;#&lt;/a&gt; DOM&lt;/h2&gt;
&lt;p&gt;文档对象模型（Document Object Model)&lt;/p&gt;
&lt;p&gt;HTML DOM 定义了所有 HTML 元素的&lt;em&gt;对象&lt;/em&gt;和&lt;em&gt;属性&lt;/em&gt;，以及访问它们的&lt;em&gt;方法&lt;/em&gt;。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;换言之，HTML DOM 是关于如何获取、修改、添加或删除 HTML 元素的标准。&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&#34;dom属性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#dom属性&#34;&gt;#&lt;/a&gt; DOM 属性&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;innerHTML&lt;/code&gt;  用于获取 HTML 元素的内容&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;DOCTYPE&lt;/span&gt; html&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;html&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;head&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;meta charset&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;utf-8&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;head&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;body&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;p id&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;intro&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;Hello World&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;p&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;script&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; txt&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;document&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getElementById&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;intro&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;innerHTML&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;document&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;txt&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;script&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;body&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;html&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;code&gt;nodeName&lt;/code&gt;  用于读取节点名称&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;nodeName 是只读的&lt;/li&gt;
&lt;li&gt;元素节点的 nodeName 与标签名相同&lt;/li&gt;
&lt;li&gt;属性节点的 nodeName 与属性名相同&lt;/li&gt;
&lt;li&gt;文本节点的 nodeName 始终是 #text&lt;/li&gt;
&lt;li&gt;文档节点的 nodeName 始终是 #document&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt; nodeName 始终包含 HTML 元素的大写字母标签名。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;nodeValue&lt;/code&gt;  用于规定节点的值&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;元素节点的 nodeValue 是 undefined 或 null&lt;/li&gt;
&lt;li&gt;文本节点的 nodeValue 是文本本身&lt;/li&gt;
&lt;li&gt;属性节点的 nodeValue 是属性值&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;nodeType&lt;/code&gt;  返回节点的类型（只读）&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211208185749.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;dom方法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#dom方法&#34;&gt;#&lt;/a&gt; DOM 方法&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211208184819.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;getElementsByld()&lt;/code&gt;  返回带有指定 ID 的元素引用&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;node&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getElementById&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;id&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;code&gt;getElementsByTagName()&lt;/code&gt;  返回带有指定签名的所有元素&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;node&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getElementsByTagName&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;tagname&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;code&gt;getElementsByClassName()&lt;/code&gt;  返回包含带有指定类名的所有元素的节点列表&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;document&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getElementsByClassName&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;intro&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;待补充&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#待补充&#34;&gt;#&lt;/a&gt; 待补充&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;filter () 方法&lt;/li&gt;
&lt;li&gt;箭头函数&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://nc3021.github.io/2021/11/26/financial/%E8%AE%A1%E9%87%8F%E7%BB%8F%E6%B5%8E%E5%AD%A6/</guid>
            <title>计量经济学</title>
            <link>https://nc3021.github.io/2021/11/26/financial/%E8%AE%A1%E9%87%8F%E7%BB%8F%E6%B5%8E%E5%AD%A6/</link>
            <category term="金融" scheme="https://nc3021.github.io/categories/financial/" />
            <category term="金融" scheme="https://nc3021.github.io/tags/%E9%87%91%E8%9E%8D/" />
            <category term="计量经济学" scheme="https://nc3021.github.io/tags/%E8%AE%A1%E9%87%8F%E7%BB%8F%E6%B5%8E%E5%AD%A6/" />
            <category term="量化金融" scheme="https://nc3021.github.io/tags/%E9%87%8F%E5%8C%96%E9%87%91%E8%9E%8D/" />
            <pubDate>Fri, 26 Nov 2021 19:30:49 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;计量经济学&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#计量经济学&#34;&gt;#&lt;/a&gt; 计量经济学&lt;/h1&gt;
&lt;h2 id=&#34;引论&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#引论&#34;&gt;#&lt;/a&gt; 引论&lt;/h2&gt;
&lt;h3 id=&#34;计量经济学的用途&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#计量经济学的用途&#34;&gt;#&lt;/a&gt; 计量经济学的用途&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;描述经济现实：&lt;/p&gt;
&lt;p&gt;​	将经济关系中的抽样符号定量化，如需求函数、消费倾向；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;检验经济理论假设：&lt;/p&gt;
&lt;p&gt;​	采用现实证据来检验理论模型，如资本资产定价模型、有效市场假说；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;预测未来经济活动：&lt;/p&gt;
&lt;p&gt;​	基于已发生的事件去预测未来，如 GDP、CPI、通货膨胀率等；&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;计量经济学的研究路线&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#计量经济学的研究路线&#34;&gt;#&lt;/a&gt; 计量经济学的研究路线&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;建立理论模型&lt;/li&gt;
&lt;li&gt;确定计量经济学模型&lt;/li&gt;
&lt;li&gt;收集、检查并整理数据&lt;/li&gt;
&lt;li&gt;估计计量经济学模型&lt;/li&gt;
&lt;li&gt;评价计量经济学模型&lt;/li&gt;
&lt;li&gt;应用计量经济学模型&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;eviews使用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#eviews使用&#34;&gt;#&lt;/a&gt; EViews 使用&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://nc3021.github.io/2021/11/26/financial/Eviews/&#34;&gt;查看 EViews 操作使用说明文档&lt;/a&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id=&#34;第一章-回归分析概述&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第一章-回归分析概述&#34;&gt;#&lt;/a&gt; 第一章 回归分析概述&lt;/h2&gt;
&lt;h3 id=&#34;回归意义&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#回归意义&#34;&gt;#&lt;/a&gt; 回归意义&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/lg4IXU1wWRC67hZ.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/MZ8Vp9nt4fX7lkJ.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;统计关系&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;确定关系：确定变量之间的函数关系&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;统计关系：随机变量之间的依赖关系&lt;/p&gt;
&lt;p&gt;计量经济学研究的是统计关系。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;回归与相关&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#回归与相关&#34;&gt;#&lt;/a&gt; 回归与相关&lt;/h4&gt;
&lt;p&gt;​	回归与相关的基本不同点在于，回归分析将因变量当作统计的、随机的，而自变量则被看作是固定的或非随机的；而相关分析将两个变量都看作随机的，具有对称性；&lt;/p&gt;
&lt;p&gt;​	事实上，将自变量看作是随机变量不会影响大部分计量经济学理论的接过（特别是大样本情况下）；&lt;/p&gt;
&lt;p&gt;​	在进行回归分析之前，一般先做相关分析。&lt;/p&gt;
&lt;h3 id=&#34;收入消费理论&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#收入消费理论&#34;&gt;#&lt;/a&gt; 收入消费理论&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/95lEFbp8m2edJ4L.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;回归函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#回归函数&#34;&gt;#&lt;/a&gt; 回归函数&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/tIJFbTGWNjZKdOo.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h4 id=&#34;随机干扰项&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#随机干扰项&#34;&gt;#&lt;/a&gt; 随机干扰项&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/8lTXmuOfDIxH4is.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/FSRanUW4T1PvVAf.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;随机干扰项：真实值与样本回归方程的估计值的差；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;残差：真实值与总体回归方程的估计值的差；&lt;/p&gt;
&lt;p&gt;随机感染项的来源：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;遗漏或被排除的变量&lt;/li&gt;
&lt;li&gt;数据的测量误差&lt;/li&gt;
&lt;li&gt;错误的函数形式&lt;/li&gt;
&lt;li&gt;纯粹的随机误差和无法预测的事件&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/gvakubKz87x9RJC.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;偏回归系数&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/FNMEmIkLrxGo2ey.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id=&#34;第二章-普通最小二乘法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第二章-普通最小二乘法&#34;&gt;#&lt;/a&gt; 第二章 普通最小二乘法&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/vqW5PzATBiaMlVN.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;线性回归模型的基本假设&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#线性回归模型的基本假设&#34;&gt;#&lt;/a&gt; 线性回归模型的基本假设&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/gu1wofclGLhIq2z.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;以上假设也称为线性回归模型的经典假设或高斯（Gauss）假设，满足该假设的线性回归模型，也称为经典线性回归模型（Classical Linear Regression Model, CLRM）。&lt;/p&gt;
&lt;p&gt;线性回归是指对估计参数为线性的一种回归（即估计参数只以一次方出现），对自变量 X 可以是或不是线性的；&lt;/p&gt;
&lt;h4 id=&#34;估计量的性质&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#估计量的性质&#34;&gt;#&lt;/a&gt; 估计量的性质&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/a3hnsrOPjAREN8F.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;​	这三个准则被称作估计量的小样本性质，拥有这类性质的估计量称为最佳线性无偏估计量 (best liner unbiased estimator BLUE);&lt;/p&gt;
&lt;h4 id=&#34;高斯-马尔可夫定理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#高斯-马尔可夫定理&#34;&gt;#&lt;/a&gt; 高斯 - 马尔可夫定理&lt;/h4&gt;
&lt;p&gt;​	在给定经典线性回归的假定下，最小二乘估计量是具有最小方差的线性无偏估计量即 BLUE。证明：略&lt;/p&gt;
&lt;h3 id=&#34;判定系数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#判定系数&#34;&gt;#&lt;/a&gt; 判定系数&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/DtSXMBYC3nJsWLa.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;​	总平方和 = 回归平方和 + 残差平方和&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/EqkdrMU4WJvm8hs.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;判定系数&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;R^2&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8141079999999999em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.00773em;&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.8141079999999999em;&#34;&gt;&lt;span style=&#34;top:-3.063em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 是解释变量个数的非减函数，即增加解释变量，&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;R^2&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8141079999999999em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.00773em;&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.8141079999999999em;&#34;&gt;&lt;span style=&#34;top:-3.063em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 会增加或不变，但增加解释变量会降低自由度（自由度：观测样本个数减去待估参数的个数）；&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/Y4FOra61gJHhRS3.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id=&#34;第三章-假设检验&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第三章-假设检验&#34;&gt;#&lt;/a&gt; 第三章 假设检验&lt;/h2&gt;
&lt;h3 id=&#34;假设检验的基本原理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#假设检验的基本原理&#34;&gt;#&lt;/a&gt; 假设检验的基本原理&lt;/h3&gt;
&lt;p&gt;​	假设检验是要确定一个准则（判定准则），以便决定拒绝或不拒绝某个原假设；&lt;/p&gt;
&lt;p&gt;​	当拒绝原假设时，通常表述为统计上显著；反之，统计上不显著；&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/WjMSIQUne9pPsYo.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/EFKksmS65WVPIC2.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;假设检验的判定准则：&lt;/p&gt;
&lt;p&gt;​	判定准则是比较样本统计量与预先设定的临界值之间的大小；&lt;/p&gt;
&lt;p&gt;​	参数估计值范围分为两个区域：拒绝域与接受域；&lt;/p&gt;
&lt;p&gt;假设检验的两种常用方法：&lt;br /&gt;
1. 置信区间法&lt;br /&gt;
 2. 显著性检验法&lt;/p&gt;
&lt;h3 id=&#34;置信区间法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#置信区间法&#34;&gt;#&lt;/a&gt; 置信区间法&lt;/h3&gt;
&lt;p&gt;​	根据参数估计量的分布，在给定的置信水平（如 95%）下构造一个随机置信区间；若该随即区间覆盖原假设值，则不拒绝原假设，否则拒绝原假设。&lt;/p&gt;
&lt;p&gt;置信区间的构造：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211211165500.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/5x8IahOWrkRKoQc.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/i8ZbtVQovUsgLuX.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Std.Error ：参数方差&lt;/p&gt;
&lt;h3 id=&#34;显著性检验法t检验&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#显著性检验法t检验&#34;&gt;#&lt;/a&gt; 显著性检验法（t 检验）&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/bX73INsLDPOqAu6.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/Zf32OkbeEqPrahM.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/17/M39OvGYgtULlziS.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Prob. ：对应其左侧一列 t 统计量的概率（即一般情况下，p&amp;lt;0.05 则认为其显著）&lt;/p&gt;
&lt;p&gt;结论：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;不能把 t 检验得出的统计显著性等同于理论的有效性；&lt;/li&gt;
&lt;li&gt;t 检验不能检验相应变量的相对重要性；&lt;/li&gt;
&lt;li&gt;随着样本容量的增大，t 值会越来越大；&lt;/li&gt;
&lt;li&gt;对于一个超大规模的样本而言，t 检验没用任何意义，因为你几乎可以拒绝任何原假设；&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;f检验&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#f检验&#34;&gt;#&lt;/a&gt; F 检验&lt;/h3&gt;
&lt;p&gt;对多个假设的联立检验或对线性约束的假设检验不能用 t 检验，只能用 F 检验，可以检验方差的整体显著性。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/Y7K2zr6xioIWbMm.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Prob (F-statistic): 模型的显著性，小于 0.05 为显著。&lt;/p&gt;
&lt;p&gt;Wald Test（对参数进行具体检验）&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/DvUnFMxtTlOg1WE.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Probability: 假设正确的概率，小于 0.05 时拒绝原假设；&lt;/p&gt;
&lt;h4 id=&#34;柯布-道格拉斯生产函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#柯布-道格拉斯生产函数&#34;&gt;#&lt;/a&gt; 柯布 - 道格拉斯生产函数&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211211170742.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h4 id=&#34;邹检验&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#邹检验&#34;&gt;#&lt;/a&gt; 邹检验&lt;/h4&gt;
&lt;p&gt;在时间序列回归中，模型的参数在整个样本期间内可能发生变化，邹检验由此而生，是 F 检验的重要应用。邹检验可以轻松推广到不止一次结构变动的情形。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;EViews 操作&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/jOTArwSyvVzL35C.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;一些说明：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;邹检验的假定：两个子时期回归的误差项是独立且具有同方差的正态分布变量；&lt;/li&gt;
&lt;li&gt;邹检验只告诉我们不同子时期的回归方程是否有差别，并没有告诉我们差别来自于截距、斜率还是二者兼有；&lt;/li&gt;
&lt;li&gt;邹检验假定我们知道结构转折点；&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;正态性检验&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#正态性检验&#34;&gt;#&lt;/a&gt; 正态性检验&lt;/h3&gt;
&lt;p&gt;​	正态性检验是检验误差项是否为正太分布。&lt;/p&gt;
&lt;p&gt;正太性的雅克 - 贝拉（Jarque-Bera）检验：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/image-20211117181202547.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211211172246.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id=&#34;第四章-模型设定&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第四章-模型设定&#34;&gt;#&lt;/a&gt; 第四章 模型设定&lt;/h2&gt;
&lt;p&gt;一个正确的方程包含了：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;正确的解释变量；&lt;/li&gt;
&lt;li&gt;正确的函数形式；&lt;/li&gt;
&lt;li&gt;正确的随机误差形式；&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;遗漏变量设定偏误&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#遗漏变量设定偏误&#34;&gt;#&lt;/a&gt; 遗漏变量（设定偏误）&lt;/h3&gt;
&lt;p&gt;参数估计量有偏且 &lt;code&gt;符号不一致&lt;/code&gt; （方差变小）；&lt;/p&gt;
&lt;p&gt;EViews 上检查遗漏变量的操作方法：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211211202523.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;不相干变量&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#不相干变量&#34;&gt;#&lt;/a&gt; 不相干变量&lt;/h3&gt;
&lt;p&gt;参数估计量无偏但非有效、 &lt;code&gt;不显著&lt;/code&gt; （方差增大，t 检验失效，拟合优度降低）&lt;/p&gt;
&lt;p&gt;EViews 上检查不相干变量的操作方法：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211211203152.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;模型选择准则&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#模型选择准则&#34;&gt;#&lt;/a&gt; 模型选择准则&lt;/h3&gt;
&lt;p&gt;四个重要的模型设定准则：&lt;/p&gt;
&lt;p&gt;1. 理论：变量在方程中的含义是不是含糊不清的，从理论上看是不是合理的？&lt;br /&gt;
2.t 检验：解释变量参数的估计值在预期假设下是不是显著的？&lt;br /&gt;
3. 调整的判定系数&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mover accent=&#34;true&#34;&gt;&lt;msup&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msup&gt;&lt;mo stretchy=&#34;true&#34;&gt;‾&lt;/mo&gt;&lt;/mover&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;\overline{R^2}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.940108em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord overline&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.940108em;&#34;&gt;&lt;span style=&#34;top:-3em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:3em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.00773em;&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.740108em;&#34;&gt;&lt;span style=&#34;top:-2.9890000000000003em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;top:-3.860108em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:3em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;overline-line&#34; style=&#34;border-bottom-width:0.04em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 或 AIC 和 SC: 将变量加入方程后，整体拟合优度是否有所改善？&lt;br /&gt;
4. 偏误：将变量加入方程后，其他变量参数是否有显著变化？&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211211203218.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h4 id=&#34;aic与sc&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#aic与sc&#34;&gt;#&lt;/a&gt; AIC 与 SC&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211211203318.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211211203329.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;函数形式的选择&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#函数形式的选择&#34;&gt;#&lt;/a&gt; 函数形式的选择&lt;/h3&gt;
&lt;p&gt;可线性化的非线性函数形式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;指数函数&lt;/li&gt;
&lt;li&gt;对数函数&lt;/li&gt;
&lt;li&gt;反函数形式&lt;/li&gt;
&lt;li&gt;多项式形式&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2 id=&#34;第五章-多重共线性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第五章-多重共线性&#34;&gt;#&lt;/a&gt; 第五章 多重共线性&lt;/h2&gt;
&lt;h3 id=&#34;多重共线性的定义&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#多重共线性的定义&#34;&gt;#&lt;/a&gt; 多重共线性的定义&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211212132921.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;多重共线性是一个程度问题而不是有无的问题，目前还没有一个被普遍接受的真正意义的检验多重共线性的统计量。&lt;/p&gt;
&lt;p&gt;完全多重共线性只是一种极端的隐患，更常见的是出现不完全多重共线性；而只要是不完全多重共线性，用 OLS 仍可得到参数的估计值及其标准误差，并且是无偏，但尽管无偏，估计量的标准误差非常大即估计的精度很小。&lt;/p&gt;
&lt;h3 id=&#34;不完全多重共线性的特征&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#不完全多重共线性的特征&#34;&gt;#&lt;/a&gt; 不完全多重共线性的特征&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;偏回归系数的 t 值会降低，倾向于统计上不显著；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;估计量（偏回归系数）对模型设定的变化非常敏感，估计系数可能出现非预期的符号或难以置信的数值；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;虽然系数不显著，但总的拟合优度&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;R^2&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8141079999999999em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.00773em;&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.8141079999999999em;&#34;&gt;&lt;span style=&#34;top:-3.063em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 却可能非常高；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可能出现每个偏回归系数的 t 值都不显著，但回归方程的 F 值却很显著。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;多重共线性的检验与补救&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#多重共线性的检验与补救&#34;&gt;#&lt;/a&gt; 多重共线性的检验与补救&lt;/h3&gt;
&lt;p&gt;检验方法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;变量之间的相关系数&lt;/li&gt;
&lt;li&gt;方差膨胀因子（VIF）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;补救方法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;剔除支配变量：支配变量 (dominant variable): 与被解释变量高度相关，以致于完全掩盖了方程中其他解释变量的影响 (如销售量与销售额)；&lt;/li&gt;
&lt;li&gt;增加样本容量：样本越大，估计越精确；&lt;/li&gt;
&lt;li&gt;剔除多余的变量：潜在的理论假设作为剔除的主要依据；&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;差分法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#差分法&#34;&gt;#&lt;/a&gt; 差分法&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211212144450.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h4 id=&#34;比率转换法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#比率转换法&#34;&gt;#&lt;/a&gt; 比率转换法&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211212144501.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h4 id=&#34;无为而治法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#无为而治法&#34;&gt;#&lt;/a&gt; 无为而治法&lt;/h4&gt;
&lt;p&gt;​	剔除本应包含的解释变量会导致设定偏误。与遗漏变量造成的有偏估计相比较，较低的 t 统计值 (显著性) 似乎只是一个次要的问题。&lt;br /&gt;
​	只有当后果很严重 (参数估计值出现非预期的符号)，才应该采取其他补救措施。&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id=&#34;第六章-序列相关性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第六章-序列相关性&#34;&gt;#&lt;/a&gt; 第六章 序列相关性&lt;/h2&gt;
&lt;h3 id=&#34;序列相关性的概念&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#序列相关性的概念&#34;&gt;#&lt;/a&gt; 序列相关性的概念&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211212145308.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h4 id=&#34;自相关系数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#自相关系数&#34;&gt;#&lt;/a&gt; 自相关系数&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211212152252.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;序列相关性的类型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#序列相关性的类型&#34;&gt;#&lt;/a&gt; 序列相关性的类型&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;非纯序列相关：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	通常由设定偏误导致，所谓模型设定偏误表现在模型中丢掉重要的变量或模型函数形式有错误即遗漏变量、不正确的函数形式；&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211212151302.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211212151824.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;纯序列相关：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;时间序列数据：对同一总体的连续的观测很可能表现出某种系统的相关性，特别是连续观测的时间间隔很短时，如一周、一天、甚至一天内多次观测；&lt;/li&gt;
&lt;li&gt;经济数据的周期性，如股票价格、GDP 等；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;大多数经济时间数据都有一个明显的特点：惯性，表现在时间序列不同时间的前后关联上。&lt;/p&gt;
&lt;h3 id=&#34;序列相关性的特征&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#序列相关性的特征&#34;&gt;#&lt;/a&gt; 序列相关性的特征&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211212152508.png&#34; alt=&#34;&#34; /&gt;&lt;/li&gt;
&lt;li&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211212152550.png&#34; alt=&#34;&#34; /&gt;&lt;/li&gt;
&lt;li&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211212152609.png&#34; alt=&#34;&#34; /&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;序列相关性的检验&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#序列相关性的检验&#34;&gt;#&lt;/a&gt; 序列相关性的检验&lt;/h3&gt;
&lt;p&gt;​	序列相关性检验的方法有很多种，但基本思路相同。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211212152827.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;图示法&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211212152854.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;回归检验法：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211212164422.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#DW&#34;&gt;杜宾 - 瓦森（DW）检验法&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#GB&#34;&gt;拉格朗日乘数检验（GB/LM）&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;span-iddw杜宾-瓦森dw检验法span&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#span-iddw杜宾-瓦森dw检验法span&#34;&gt;#&lt;/a&gt; &lt;span id=&#39;DW&#39;&gt;杜宾 - 瓦森（DW）检验法&lt;/span&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211212164447.png&#34; alt=&#34;&#34; /&gt;&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211212164516.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;DW 检验临界值 (&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;mi&gt;L&lt;/mi&gt;&lt;/msub&gt;&lt;mtext&gt;、&lt;/mtext&gt;&lt;msub&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;mi&gt;U&lt;/mi&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;d_L、d_U&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.84444em;vertical-align:-0.15em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.32833099999999993em;&#34;&gt;&lt;span style=&#34;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;L&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;、&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.32833099999999993em;&#34;&gt;&lt;span style=&#34;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34; style=&#34;margin-right:0.10903em;&#34;&gt;U&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;) 与三个参数有关：&lt;br /&gt;
①检验水平&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;α&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;\alpha&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.43056em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.0037em;&#34;&gt;α&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;，②样本容量 n , ③原回归模型中解释变量个数 k（不包括常数项）。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211212164528.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;若采用双侧侧检验，则结论为是否存在序列相关。&lt;/p&gt;
&lt;p&gt;当 DW 值落在 “不确定” 区域时，两种处理方法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;加大样本容量或重新选取样本，重作 DW 检验。有时 DW 值会离开不确定区；&lt;/li&gt;
&lt;li&gt;选用其它检验方法。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;span-idgb拉格朗日乘数检验gblmspan&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#span-idgb拉格朗日乘数检验gblmspan&#34;&gt;#&lt;/a&gt; &lt;span id=&#39;GB&#39;&gt;拉格朗日乘数检验（GB/LM）&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;​	拉格朗日乘数检验克服了 DW 检验的缺陷，适合于高阶序列相关以及模型中存在滞后被解释变量的情形。&lt;br /&gt;
它是由布劳殊（Breusch）与戈弗雷（Godfrey）于 1978 年提出的，也被称为 GB 检验。&lt;/p&gt;
&lt;p&gt;​	对于模型 $$Y_i=\beta_0+\beta_1X_{1i}+\beta_2X_{2i}+\cdots+\beta_kX_{ki}+\mu$$&lt;/p&gt;
&lt;p&gt;如果怀疑随机扰动项存在 P 阶序列相关：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;katex-display&#34;&gt;&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34; display=&#34;block&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mi&gt;μ&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;/msub&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;ρ&lt;/mi&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/msub&gt;&lt;msub&gt;&lt;mi&gt;μ&lt;/mi&gt;&lt;mrow&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;ρ&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msub&gt;&lt;msub&gt;&lt;mi&gt;μ&lt;/mi&gt;&lt;mrow&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mo&gt;⋯&lt;/mo&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;ρ&lt;/mi&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;/msub&gt;&lt;msub&gt;&lt;mi&gt;μ&lt;/mi&gt;&lt;mrow&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;ϵ&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;\mu_t=\rho_1\mu_{t-1}+\rho_2\mu_{t-2}+\cdots+\rho_p\mu_{t-p}+\epsilon_t
&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.625em;vertical-align:-0.19444em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;μ&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.2805559999999999em;&#34;&gt;&lt;span style=&#34;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;t&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.791661em;vertical-align:-0.208331em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;ρ&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.30110799999999993em;&#34;&gt;&lt;span style=&#34;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;μ&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.301108em;&#34;&gt;&lt;span style=&#34;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;mbin mtight&#34;&gt;−&lt;/span&gt;&lt;span class=&#34;mord mtight&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.208331em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.791661em;vertical-align:-0.208331em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;ρ&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.30110799999999993em;&#34;&gt;&lt;span style=&#34;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;μ&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.301108em;&#34;&gt;&lt;span style=&#34;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;mbin mtight&#34;&gt;−&lt;/span&gt;&lt;span class=&#34;mord mtight&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.208331em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.66666em;vertical-align:-0.08333em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;minner&#34;&gt;⋯&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8694379999999999em;vertical-align:-0.286108em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;ρ&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15139200000000003em;&#34;&gt;&lt;span style=&#34;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;p&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.286108em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;μ&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.28055599999999997em;&#34;&gt;&lt;span style=&#34;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;mbin mtight&#34;&gt;−&lt;/span&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;p&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.286108em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.58056em;vertical-align:-0.15em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;ϵ&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.2805559999999999em;&#34;&gt;&lt;span style=&#34;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;t&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211212155353.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211212155412.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;拉格朗日乘数检验的 EViews 操作&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211212160815.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;序列相关性的补救&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#序列相关性的补救&#34;&gt;#&lt;/a&gt; 序列相关性的补救&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;非纯序列相关：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	- 正确的模型设定，特别是出现负的序列相关时；&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;纯序列相关：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;广义最小二乘法：广义差分法（GLS）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;EViews 操作：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211212161406.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211212161447.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;AR 方法&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;尼威 - 韦斯特（Newey-West HAC）方法&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;只修正标准误而不会改变系数的估计值&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在大样本估计中，效果更好&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;绝大多数学术论文采用此种方法&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;EViews 操作：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211212161623.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211212161648.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211212161659.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;经验方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;采用时间序列数据作回归时，不对原模型进行序列相关检验，而是直接选择广义差分法或者 NW 法；&lt;/li&gt;
&lt;li&gt;如果确实存在序列相关，则被有效地消除了；&lt;/li&gt;
&lt;li&gt;如果不存在序列相关，则广义差分法或 NW 法等价于普通最小二乘法；&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr /&gt;
&lt;h2 id=&#34;第七章-异方差性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第七章-异方差性&#34;&gt;#&lt;/a&gt; 第七章 异方差性&lt;/h2&gt;
&lt;h3 id=&#34;异方差的概念&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#异方差的概念&#34;&gt;#&lt;/a&gt; 异方差的概念&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211212165647.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211212165634.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;异方差的类型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#异方差的类型&#34;&gt;#&lt;/a&gt; 异方差的类型&lt;/h3&gt;
&lt;p&gt;** 非纯异方差：** 由模型设定偏误导致（如遗漏变量）；&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;纯异方差：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;横截面数据：被解释变量的取值差异较大、解释变量的偏态；&lt;/li&gt;
&lt;li&gt;时间序列数据：学习效应、数据采集技术的变化&lt;/li&gt;
&lt;li&gt;异常值&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;异方差的特征&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#异方差的特征&#34;&gt;#&lt;/a&gt; 异方差的特征&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;OLS 估计量仍是无偏的；&lt;/li&gt;
&lt;li&gt;OLS 估计量不再是有效的（即最小方差估计量）；&lt;/li&gt;
&lt;li&gt;OLS 估计量的标准误是有偏的，且偏差通常是负的，意味着 OLS 通常会高估了参数的 t 值，导致原本不显著的变量可能变得显著；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;综上：若存在异方差，OLS 估计的假设检验将变的不可靠。&lt;/p&gt;
&lt;h3 id=&#34;异方差的检验&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#异方差的检验&#34;&gt;#&lt;/a&gt; 异方差的检验&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;检验思路：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	检验异⽅差，也就是检验随机误差项的方差与比例因子 Z 或解释变量 X 之间的相关性及其 “形式”；又因随机误差项方差的样本对应物是 OLS 的残差平方，因此所有的检验方法都基于&lt;u&gt;&lt;strong&gt;残差平方&lt;/strong&gt;&lt;/u&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;异方差的检验方法：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;图解法&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211212170852.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;帕克检验&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211212190703.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;怀特检验（White）&lt;/p&gt;
&lt;p&gt;基本思想：异方差来源于解释变量及其高次方。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;EViews 操作：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211212190935.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;异方差的补救&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#异方差的补救&#34;&gt;#&lt;/a&gt; 异方差的补救&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;非纯异方差：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	- 正确的模型设定&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;纯异方差：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;广义最小二乘法：&lt;a href=&#34;#WLS&#34;&gt;加权最小二乘法&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;修正异方差的标准误：&lt;a href=&#34;#White&#34;&gt;White 调整法&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;重新定义新变量：&lt;a href=&#34;#ln&#34;&gt;变换方程形式&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;首先考虑采用重新定义变量的方式&lt;/li&gt;
&lt;li&gt;大样本情况：White 调整法&lt;/li&gt;
&lt;li&gt;若能找到明确的比列因子（权重），则采用 WLS&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;span-idwls加权最小二乘法wlsspan&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#span-idwls加权最小二乘法wlsspan&#34;&gt;#&lt;/a&gt; &lt;span id=&#39;WLS&#39;&gt;加权最小二乘法 (WLS)&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211212191410.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;在实际操作中人们通常采用如下的经验方法：&lt;/p&gt;
&lt;p&gt;​	不对原模型进行异方差检验，而是直接选择加权最小二乘法，尤其是采用截面数据作样本时。&lt;/p&gt;
&lt;p&gt;​	如果确定存在异方差，则被有效地消除了；如果不存在异方差，则加权最小二乘法等价于普通最小二乘法。&lt;/p&gt;
&lt;h4 id=&#34;span-idwhitewhite调整法span&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#span-idwhitewhite调整法span&#34;&gt;#&lt;/a&gt; &lt;span id=&#39;White&#39;&gt;White 调整法&lt;/span&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;只修正标准误⽽不会改变系数的估计值；&lt;/li&gt;
&lt;li&gt;在⼤样本估计中，效果更好；&lt;/li&gt;
&lt;li&gt;绝⼤多数学术论⽂采用此种⽅法；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;EViews 操作：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211212192120.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h4 id=&#34;span-idln变换方程形式span&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#span-idln变换方程形式span&#34;&gt;#&lt;/a&gt; &lt;span id=&#39;ln&#39;&gt;变换方程形式&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;一般采用对解释变量取对数的形式。&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id=&#34;第八章-虚拟变量&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第八章-虚拟变量&#34;&gt;#&lt;/a&gt; 第八章 虚拟变量&lt;/h2&gt;
&lt;h3 id=&#34;虚拟变量概念&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#虚拟变量概念&#34;&gt;#&lt;/a&gt; 虚拟变量概念&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211212193128.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;​	虚拟变量既可以作为解释变量，又可以作为被解释变量；虚拟应变量模型又称为概率模型、离散选择模型。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;设置原则：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;每⼀定性变量所需的虚拟变量个数要比该定性变量的类别数少 1，即如果有 m 个定性变量，只在模型中引⼊ m-1 个虚拟变量；&lt;/li&gt;
&lt;li&gt;在同⼀个⽅程中，可以引⼊多个虚拟变量来考察多种定性因素的影响；&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;虚拟变量的引入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#虚拟变量的引入&#34;&gt;#&lt;/a&gt; 虚拟变量的引入&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211213191601.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;线性概率模型lpm&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#线性概率模型lpm&#34;&gt;#&lt;/a&gt; 线性概率模型（LPM)&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211212193508.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211212193548.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;logit模型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#logit模型&#34;&gt;#&lt;/a&gt; Logit 模型&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211212194008.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;EViews 操作：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211212194042.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211212194053.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;其参数估计值的解释：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211212194425.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211212194441.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211212194455.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;probit模型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#probit模型&#34;&gt;#&lt;/a&gt; Probit 模型&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211212194625.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;EViews 操作：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211212194708.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211212194721.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;其它虚拟应变量模型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#其它虚拟应变量模型&#34;&gt;#&lt;/a&gt; 其它虚拟应变量模型&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;多元 Logit 模型：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;被解释变量存在多种离散且⽆序的选择；&lt;/li&gt;
&lt;li&gt;如择业的选择、交通⼯具的选择；&lt;/li&gt;
&lt;li&gt;采用极⼤似然估计法，Eviews 中有示例程序；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;序次 Logit 模型：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;被解释变量存在多种离散且有序的选择；&lt;/li&gt;
&lt;li&gt;如债券的信用评级、舆论调查结果；&lt;/li&gt;
&lt;li&gt;采用极⼤似然估计法，Eviews 中可实现菜单操作；&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://nc3021.github.io/2021/11/26/front-end/HTML/</guid>
            <title>HTML学习</title>
            <link>https://nc3021.github.io/2021/11/26/front-end/HTML/</link>
            <category term="前端" scheme="https://nc3021.github.io/categories/front-end/" />
            <category term="前端" scheme="https://nc3021.github.io/tags/%E5%89%8D%E7%AB%AF/" />
            <pubDate>Fri, 26 Nov 2021 19:30:30 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;html学习&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#html学习&#34;&gt;#&lt;/a&gt; HTML 学习&lt;/h1&gt;
&lt;h2 id=&#34;标签&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#标签&#34;&gt;#&lt;/a&gt; 标签&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;标题标签&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;一级标题&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;h2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;二级标题&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;h2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/08/xnqcyYpleXIdgH6.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;段落标签&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;段落标签&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;换行标签 (无额外行间距)&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;br&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;文本标签&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;加粗标签&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;strong&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;强调标签&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;strong&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;b&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;字体加粗标签&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;b&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;倾斜标签&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;em&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;倾斜标签&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;em&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;i&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;倾斜标签&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;i&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;删除线标签&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;del&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;删除线&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;del&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;s&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;删除线&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;s&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;下划线标签&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;ins&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;下划线&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;ins&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;u&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;下划线&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;u&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;容器标签&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;占一行,大盒子&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;span&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;小盒子&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;span&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;图像标签&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;img&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;img.jpg&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;alt&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;替换文字&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;提示文本&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/08/RrEA6wMyfKDtLeV.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;超链接标签&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;外部链接&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token attr-name&#34;&gt;target&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;_blank&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;超链接&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;#&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;空链接&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;下载文件路径&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;下载链接&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/08/EQmq2jcyLIK4pOu.png&#34; alt=&#34;&#34; /&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/08/nOkz9CSiaysflm2.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;快捷键： &lt;code&gt;a&lt;/code&gt; + &lt;code&gt;tab&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;注释标签&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 注释标签 --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;表格标签&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;table&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;tr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;th&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;姓名&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;th&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;th&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;性别&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;th&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;tr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;tr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;td&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;刘德华&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;td&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;td&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;男&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;td&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;tr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;table&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;表格属性&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/08/iY3BahCZz2gpNFM.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;表头标签&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;th&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;表头&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;th&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;表格结构标签&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;thead&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;表格头部区域，，必须有表头标签&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;thead&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;tbody&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;tbody&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;合并单元格&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 跨列 --&gt;&lt;/span&gt; &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;td&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;colspan&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;2&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;td&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 跨行 --&gt;&lt;/span&gt; &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;td&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;span&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;2&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;td&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;列表标签&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;无序列表&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;ul&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;li&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;li&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;li&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;li&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;ul&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;有序列表&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;ol&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;li&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;li&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;li&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;li&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;ol&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;自定义列表&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;dl&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;dt&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;dt&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;dd&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;dd&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;dd&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;dd&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;dl&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!--dl 里只能有 dt 与 dd--&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;表单标签&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;表单域属性&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/09/ltxkBT3yagh2dYD.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;input&gt;&lt;strong&gt;标签&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/09/XvYQN3MFDozjCah.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;label&gt;&lt;strong&gt;标签&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/09/QXcVg29NSpdLrW7.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;select&gt;&lt;strong&gt;标签&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/09/zb9qHa43QWVOEBs.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;特殊字符&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#特殊字符&#34;&gt;#&lt;/a&gt; 特殊字符&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/08/ioQNV32cBLfekuw.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://nc3021.github.io/2021/11/26/hybrid-learning/Typora%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</guid>
            <title>Typora使用教程</title>
            <link>https://nc3021.github.io/2021/11/26/hybrid-learning/Typora%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</link>
            <category term="杂学" scheme="https://nc3021.github.io/categories/hybrid-learning/" />
            <category term="Typora" scheme="https://nc3021.github.io/tags/Typora/" />
            <category term="markdown" scheme="https://nc3021.github.io/tags/markdown/" />
            <pubDate>Fri, 26 Nov 2021 19:30:18 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;typora使用教程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#typora使用教程&#34;&gt;#&lt;/a&gt; Typora 使用教程&lt;/h1&gt;
&lt;h2 id=&#34;常用快捷键&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#常用快捷键&#34;&gt;#&lt;/a&gt; 常用快捷键&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;加粗：&lt;strong&gt;ctrl+B&lt;/strong&gt; （bold）&lt;/li&gt;
&lt;li&gt;字体倾斜：&lt;strong&gt;ctrl+I&lt;/strong&gt; （incline）&lt;/li&gt;
&lt;li&gt;下划线：&lt;strong&gt;ctrl+U&lt;/strong&gt; （under）&lt;/li&gt;
&lt;li&gt;多级标题：&lt;strong&gt;ctrl+1~6&lt;/strong&gt;   （写 Bolg 时必须按顺序使用）&lt;/li&gt;
&lt;li&gt;有序列表：&lt;strong&gt;ctrl+shift+[&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;无序列表：&lt;strong&gt;ctrl+shift+]&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;降级：&lt;strong&gt;Tab&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;升级：&lt;strong&gt;shift+Tab&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;插入链接：&lt;strong&gt;ctrl+K&lt;/strong&gt; （link）&lt;/li&gt;
&lt;li&gt;插入公式：&lt;strong&gt;ctrl+shift+M&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;代码：&lt;strong&gt;ctrl+shift+K&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;插入图片：&lt;strong&gt;ctrl+shift+I&lt;/strong&gt; （image）&lt;/li&gt;
&lt;li&gt;创建表格：&lt;strong&gt;ctrl+T&lt;/strong&gt; （table）&lt;/li&gt;
&lt;li&gt;选中一行：&lt;strong&gt;ctrl+L&lt;/strong&gt; （line）&lt;/li&gt;
&lt;li&gt;选中一字：&lt;strong&gt;ctrl+D&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;选中相同格式的文字：&lt;strong&gt;ctrl+E&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;搜索：&lt;strong&gt;ctrl+F&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;搜索并替换：&lt;strong&gt;ctrl+H&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;删除线：&lt;strong&gt;Alt+shift+5&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;引用：&lt;strong&gt;ctrl+shift+Q&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;生成目录：&lt;strong&gt;[TOC]+Enter&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;分割线：&lt;strong&gt;---+Enter&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;字体&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#字体&#34;&gt;#&lt;/a&gt; 字体&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;斜体：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;*斜体字体1*，_斜体字体2_
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;斜体字体 1&lt;/em&gt;，&lt;em&gt;斜体字体 2&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;加粗：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;**加粗字体1**，__加粗字体2__
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;加粗字体 1&lt;/strong&gt;，&lt;strong&gt;加粗字体 2&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;删除线：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;~~需要删除的文字~~
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;s&gt;需要删除的文字&lt;/s&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;大高亮&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;==高亮==
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;mark&gt;高亮&lt;/mark&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;小高亮&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;`高亮`
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;高亮&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;数学公式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数学公式&#34;&gt;#&lt;/a&gt; 数学公式&lt;/h2&gt;
&lt;p&gt;行内的数学公式用两个 &lt;code&gt;$&lt;/code&gt;  将 LaTex 公式包裹；&lt;/p&gt;
&lt;p&gt;而行外的公式（单独一行）用两个 &lt;code&gt;$$&lt;/code&gt;  将 LaTex 公式包裹。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;常用数学 LaTex 公式&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Csqrt%7Bab%7D&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\sqrt&amp;#123;ab&amp;#125;$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Csqrt%5Bn%5D%7Bab%7D&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\sqrt[n]&amp;#123;ab&amp;#125;$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Clog_%7Ba%7D%7Bb%7D&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\log_&amp;#123;a&amp;#125;&amp;#123;b&amp;#125;$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Clg%7Bab%7D&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\lg&amp;#123;ab&amp;#125;$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=a%5E%7Bb%7D&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$a^&amp;#123;b&amp;#125;$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=a_%7Bb%7D&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$a_&amp;#123;b&amp;#125;$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=x_a%5Eb&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$x_a^b$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Cint&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\int$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Cint_%7Ba%7D%5E%7Bb%7D&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\int_&amp;#123;a&amp;#125;^&amp;#123;b&amp;#125;$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Coint&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\oint$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Coint_a%5Eb&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\oint_a^b$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Csum&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\sum$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Csum_a%5Eb&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\sum_a^b$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Ccoprod&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\coprod$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Ccoprod_a%5Eb&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\coprod_a^b$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Cprod&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\prod$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Cprod_a%5Eb&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\prod_a^b$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Cbigcap&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\bigcap$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Cbigcap_a%5Eb&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\bigcap_a^b$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Cbigcup&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\bigcup$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Cbigcup_a%5Eb&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\bigcup_a^b$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Cbigsqcup&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\bigsqcup$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Cbigsqcup_a%5Eb&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\bigsqcup_a^b$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Cbigvee&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\bigvee$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Cbigvee_a%5Eb&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\bigvee_a^b$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Cbigwedge&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\bigwedge$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Cbigwedge_a%5Eb&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\bigwedge_a^b$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Cwidetilde%7Bab%7D&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\widetilde&amp;#123;ab&amp;#125;$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Cwidehat%7Bab%7D&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\widehat&amp;#123;ab&amp;#125;$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Coverleftarrow%7Bab%7D&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\overleftarrow&amp;#123;ab&amp;#125;$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Coverrightarrow%7Bab%7D&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\overrightarrow&amp;#123;ab&amp;#125;$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Coverbrace%7Bab%7D&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\overbrace&amp;#123;ab&amp;#125;$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Cunderbrace%7Bab%7D&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\underbrace&amp;#123;ab&amp;#125;$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Cunderline%7Bab%7D&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\underline&amp;#123;ab&amp;#125;$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Coverline%7Bab%7D&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\overline&amp;#123;ab&amp;#125;$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Cfrac%7Bab%7D%7Bcd%7D&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\frac&amp;#123;ab&amp;#125;&amp;#123;cd&amp;#125;$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Cfrac%7B%5Cpartial+a%7D%7B%5Cpartial+b%7D&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\frac&amp;#123;\partial a&amp;#125;&amp;#123;\partial b&amp;#125;$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Cfrac%7B%5Ctext%7Bd%7Dx%7D%7B%5Ctext%7Bd%7Dy%7D&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\frac&amp;#123;\text&amp;#123;d&amp;#125;x&amp;#125;&amp;#123;\text&amp;#123;d&amp;#125;y&amp;#125;$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Clim_%7Ba+%5Crightarrow+b%7D&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\lim_&amp;#123;a \rightarrow b&amp;#125;$&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;希腊字母&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Calpha&#34; alt=&#34;[公式]&#34; /&gt; 希腊字母&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;字母&lt;/th&gt;
&lt;th&gt;实现&lt;/th&gt;
&lt;th&gt;字母&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;实现&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;A&lt;/td&gt;
&lt;td&gt;&lt;code&gt;A&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;α&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;code&gt;\alpha&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;B&lt;/td&gt;
&lt;td&gt;&lt;code&gt;B&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;β&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;code&gt;\beta&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Γ&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Gamma&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;γ&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;code&gt;\gamma&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Δ&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Delta&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;δ&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;code&gt;\delta&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;E&lt;/td&gt;
&lt;td&gt;&lt;code&gt;E&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ϵ&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;code&gt;\epsilon&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Z&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Z&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ζ&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;code&gt;\zeta&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;H&lt;/td&gt;
&lt;td&gt;&lt;code&gt;H&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;η&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;code&gt;\eta&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Θ&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Theta&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;θ&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;code&gt;\theta&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;I&lt;/td&gt;
&lt;td&gt;&lt;code&gt;I&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ι&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;code&gt;\iota&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;K&lt;/td&gt;
&lt;td&gt;&lt;code&gt;K&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;κ&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;code&gt;\kappa&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Λ&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Lambda&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;λ&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;code&gt;\lambda&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;M&lt;/td&gt;
&lt;td&gt;&lt;code&gt;M&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;μ&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;code&gt;\mu&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;td&gt;&lt;code&gt;N&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ν&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;code&gt;\nu&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ξ&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Xi&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ξ&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;code&gt;\xi&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;O&lt;/td&gt;
&lt;td&gt;&lt;code&gt;O&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ο&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;code&gt;\omicron&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Π&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Pi&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;π&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;code&gt;\pi&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P&lt;/td&gt;
&lt;td&gt;&lt;code&gt;P&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ρ&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;code&gt;\rho&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Σ&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Sigma&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;σ&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;code&gt;\sigma&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;T&lt;/td&gt;
&lt;td&gt;&lt;code&gt;T&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;τ&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;code&gt;\tau&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Υ&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Upsilon&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;υ&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;code&gt;\upsilon&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Φ&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Phi&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ϕ&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;code&gt;\phi&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;td&gt;&lt;code&gt;X&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;χ&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;code&gt;\chi&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ψ&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Psi&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ψ&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;code&gt;\psi&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ω&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Omega&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ω&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;code&gt;\omega&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;段落&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#段落&#34;&gt;#&lt;/a&gt; 段落&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;更小行间距 ：&lt;strong&gt;shift+Enter&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;打断线：&lt;br/&gt;打断线后的内容将自动换行&lt;/li&gt;
&lt;li&gt;引用：&lt;strong&gt;&amp;gt;+Space + 文字&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;特殊符号&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#特殊符号&#34;&gt;#&lt;/a&gt; 特殊符号&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;&lt;/code&gt; ：＆ｌｔ；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;＆&lt;/code&gt; ：＆ａｍｐ；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;ul class=&#34;task-list&#34;&gt;
&lt;li class=&#34;task-list-item&#34;&gt;
&lt;p&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_0&#34; disabled=&#34;true&#34; /&gt;&lt;label for=&#34;cbx_0&#34;&gt; 待办事项&lt;/label&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;
&lt;p&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_1&#34; checked=&#34;true&#34; disabled=&#34;true&#34; /&gt;&lt;label for=&#34;cbx_1&#34;&gt; 已办事项&lt;/label&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;-&lt;/code&gt; + &lt;code&gt;空格&lt;/code&gt;  + &lt;code&gt;[&lt;/code&gt; + &lt;code&gt;空格&lt;/code&gt;  + &lt;code&gt;]&lt;/code&gt; + &lt;code&gt;空格&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;
&lt;p&gt;省略号&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;低端对其的省略号（&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo&gt;…&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;\ldots&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.12em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;minner&#34;&gt;…&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;）： &lt;code&gt;$\ldots$&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;中线对其的省略号（&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo&gt;⋯&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;\cdots&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.31em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;minner&#34;&gt;⋯&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;）： &lt;code&gt;$\cdots$&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;竖直对齐的省略号（&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;⋮&lt;/mi&gt;&lt;mpadded height=&#34;+0em&#34; voffset=&#34;0em&#34;&gt;&lt;mspace mathbackground=&#34;black&#34; width=&#34;0em&#34; height=&#34;1.5em&#34;&gt;&lt;/mspace&gt;&lt;/mpadded&gt;&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;\vdots&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1.53em;vertical-align:-0.03em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord&#34;&gt;⋮&lt;/span&gt;&lt;span class=&#34;mord rule&#34; style=&#34;border-right-width:0em;border-top-width:1.5em;bottom:0em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;）： &lt;code&gt;$\vdots$&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;写对期齐的省略号（&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo&gt;⋱&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;\ddots&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.82em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;minner&#34;&gt;⋱&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;）： &lt;code&gt;$\ddots$&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;​    竖直线，可以用来写备注吧 (细节还不太懂)   &lt;code&gt;&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;跳转&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#跳转&#34;&gt;#&lt;/a&gt; 跳转&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;文档之间跳转&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;相对路径（适用于 markdown 的阅读）：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[content](相对地址)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如果在相对文件夹下，相对地址为 &lt;code&gt;./xxx.md&lt;/code&gt; ;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;../&lt;/code&gt;  用于表示上一级目录，以此类推；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;绝对路径（适用于博客的阅读）：&lt;/p&gt;
&lt;p&gt;HTML 写法：&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;helf&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;xxx.com&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;content&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;Markdown 写法：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[content](xxx.com)  //快捷键 ctrl+
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;文档内跳转&lt;/p&gt;
&lt;p&gt;第一步：定义一个锚 (id)&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;span&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;jump&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;content&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;span&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;第二步：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[点击跳转](#jump)
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://nc3021.github.io/2021/11/26/financial/Eviews/</guid>
            <title>EViews操作</title>
            <link>https://nc3021.github.io/2021/11/26/financial/Eviews/</link>
            <category term="金融" scheme="https://nc3021.github.io/categories/financial/" />
            <category term="金融" scheme="https://nc3021.github.io/tags/%E9%87%91%E8%9E%8D/" />
            <category term="计量经济学" scheme="https://nc3021.github.io/tags/%E8%AE%A1%E9%87%8F%E7%BB%8F%E6%B5%8E%E5%AD%A6/" />
            <category term="EViews" scheme="https://nc3021.github.io/tags/EViews/" />
            <category term="量化金融" scheme="https://nc3021.github.io/tags/%E9%87%8F%E5%8C%96%E9%87%91%E8%9E%8D/" />
            <pubDate>Fri, 26 Nov 2021 16:01:56 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;eviews操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#eviews操作&#34;&gt;#&lt;/a&gt; EViews 操作&lt;/h1&gt;
&lt;h2 id=&#34;回归数据分析&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#回归数据分析&#34;&gt;#&lt;/a&gt; 回归数据分析&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211211144053.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;假设检验&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#假设检验&#34;&gt;#&lt;/a&gt; 假设检验&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/16/dajXyExDBHbZA56.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5C%E4%BD%A0%E7%8C%9C%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211116103231625.png&#34; alt=&#34;image-20211116103231625&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;ols拟合&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ols拟合&#34;&gt;#&lt;/a&gt; OLS 拟合&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/16/Em53r1qtTp4ZoRa.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;拟合优度检验&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#拟合优度检验&#34;&gt;#&lt;/a&gt; 拟合优度检验&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/16/nOJXp7yvcZuBdjI.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;相关性分析&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#相关性分析&#34;&gt;#&lt;/a&gt; 相关性分析&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/16/k9HBYeK1CfnsZqV.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/16/xgms2JN6ZpIqRbY.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;检查是否为遗漏变量&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#检查是否为遗漏变量&#34;&gt;#&lt;/a&gt; 检查是否为遗漏变量&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/16/TxFZnfXI32hRy48.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;方差膨胀因子vif&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#方差膨胀因子vif&#34;&gt;#&lt;/a&gt; 方差膨胀因子 VIF&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/16/LCfMNrSpJEuVYXw.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;white检验&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#white检验&#34;&gt;#&lt;/a&gt; White 检验&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/16/fceaKF8BdrXqW4Y.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/16/YtxPiSzeyhJWmD5.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;white调整法处理异方差&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#white调整法处理异方差&#34;&gt;#&lt;/a&gt; White 调整法处理异方差&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/16/B5T6Oi9MIEZfUrt.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;取对数处理异方差&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#取对数处理异方差&#34;&gt;#&lt;/a&gt; 取对数处理异方差&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/16/E5FdY8JAINBSfxb.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/16/zvp8EIU6DcdXCNi.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;建立logit模型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#建立logit模型&#34;&gt;#&lt;/a&gt; 建立 Logit 模型&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/16/RAVhzSIUaGQb17x.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://nc3021.github.io/2021/11/26/front-end/CSS/</guid>
            <title>CSS学习</title>
            <link>https://nc3021.github.io/2021/11/26/front-end/CSS/</link>
            <category term="前端" scheme="https://nc3021.github.io/categories/front-end/" />
            <category term="前端" scheme="https://nc3021.github.io/tags/%E5%89%8D%E7%AB%AF/" />
            <pubDate>Fri, 26 Nov 2021 16:01:56 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;css学习&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#css学习&#34;&gt;#&lt;/a&gt; CSS 学习&lt;/h1&gt;
&lt;h2 id=&#34;css选择器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#css选择器&#34;&gt;#&lt;/a&gt; CSS 选择器&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/09/roUpHWm3NqzinLs.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;标签选择器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#标签选择器&#34;&gt;#&lt;/a&gt; 标签选择器：&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/09/6bYiEtgm9wx5oaM.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;style&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token style&#34;&gt;&lt;span class=&#34;token language-css&#34;&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token selector&#34;&gt;P&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token property&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;green&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;style&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;类选择器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#类选择器&#34;&gt;#&lt;/a&gt; 类选择器 .&lt;/h3&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;red&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    红色字体&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;style&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token style&#34;&gt;&lt;span class=&#34;token language-css&#34;&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token selector&#34;&gt;.red&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token property&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;red&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;style&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;id选择器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#id选择器&#34;&gt;#&lt;/a&gt; id 选择器  #&lt;/h3&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;red&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    红色字体&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;style&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token style&#34;&gt;&lt;span class=&#34;token language-css&#34;&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token selector&#34;&gt;#red&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token property&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;red&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;style&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; /*只能调用一次*/&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;快捷键： &lt;code&gt;div&lt;/code&gt; + &lt;code&gt;#&lt;/code&gt; + &lt;code&gt;xxx&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;通配符选择器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#通配符选择器&#34;&gt;#&lt;/a&gt; 通配符选择器 *&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/09/pZMQtjs4xBdzNGR.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;css字体属性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#css字体属性&#34;&gt;#&lt;/a&gt; CSS 字体属性&lt;/h2&gt;
&lt;h3 id=&#34;字体系列-font-family&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#字体系列-font-family&#34;&gt;#&lt;/a&gt; 字体系列 font-family&lt;/h3&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   p&amp;#123;font-family:&#34;Microsoft Yahei&#34;,Arial;&amp;#125;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;字体大小-font-size&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#字体大小-font-size&#34;&gt;#&lt;/a&gt; 字体大小 font-size&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/09/egkPE3Oa76oHpxn.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;字体粗细-font-weight&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#字体粗细-font-weight&#34;&gt;#&lt;/a&gt; 字体粗细 font-weight&lt;/h3&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;style&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token style&#34;&gt;&lt;span class=&#34;token language-css&#34;&gt;&lt;span class=&#34;token selector&#34;&gt;.bold&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;font-weight&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;700&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;/*font-weight:bold   两者等效 */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;style&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/09/LY13EhQprcIJN7l.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;文字样式-font-style&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#文字样式-font-style&#34;&gt;#&lt;/a&gt; 文字样式 font-style&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/09/YKOSMiAXCa1d5Pc.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;字体复合属性-font&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#字体复合属性-font&#34;&gt;#&lt;/a&gt; 字体复合属性 font&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/09/bZR8XjFGkc9JT4Q.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;css文本属性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#css文本属性&#34;&gt;#&lt;/a&gt; CSS 文本属性&lt;/h2&gt;
&lt;h3 id=&#34;文本颜色-color&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#文本颜色-color&#34;&gt;#&lt;/a&gt; 文本颜色 color&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/09/6sBzWlIGDJwU81t.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;文本对齐-text-align&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#文本对齐-text-align&#34;&gt;#&lt;/a&gt; 文本对齐 text-align&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/09/tngFhDlwQo3buix.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;装饰文本-text-decoration&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#装饰文本-text-decoration&#34;&gt;#&lt;/a&gt; 装饰文本 text-decoration&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/09/bfPesMgSwWER9VK.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;文本缩进-text-indent&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#文本缩进-text-indent&#34;&gt;#&lt;/a&gt; 文本缩进 text-indent&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/09/kx9ZMcnOILbN2js.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;行间距-line-height&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#行间距-line-height&#34;&gt;#&lt;/a&gt; 行间距 line-height&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/09/PqYlACidGrxLNok.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;css引入方式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#css引入方式&#34;&gt;#&lt;/a&gt; CSS 引入方式&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/09/CtLgyoRjfmwal39.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;外部引入快捷键：link +Tab&lt;/p&gt;
&lt;h2 id=&#34;emment语法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#emment语法&#34;&gt;#&lt;/a&gt; Emment 语法&lt;/h2&gt;
&lt;h3 id=&#34;快速生成html&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#快速生成html&#34;&gt;#&lt;/a&gt; 快速生成 HTML&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5C%E4%BD%A0%E7%8C%9C%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211109220515298.png&#34; alt=&#34;image-20211109220515298&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;快速生成css&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#快速生成css&#34;&gt;#&lt;/a&gt; 快速生成 CSS&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/10/gfREu5e4l2bxYSW.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;复合选择器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#复合选择器&#34;&gt;#&lt;/a&gt; 复合选择器&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/10/YRMbUhiynS3B4f1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;后代选择器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#后代选择器&#34;&gt;#&lt;/a&gt; 后代选择器&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/10/WrLx3O9uNSjcfFq.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;子选择器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#子选择器&#34;&gt;#&lt;/a&gt; 子选择器&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/10/mXuo4xSEfhONZen.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;（亲儿子包含所有儿子）&lt;/p&gt;
&lt;h3 id=&#34;并集选择器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#并集选择器&#34;&gt;#&lt;/a&gt; 并集选择器&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/10/V6AoCtNfEKgmD3v.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;伪类选择器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#伪类选择器&#34;&gt;#&lt;/a&gt; 伪类选择器&lt;/h3&gt;
&lt;h4 id=&#34;链接伪类选择器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#链接伪类选择器&#34;&gt;#&lt;/a&gt; 链接伪类选择器&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/10/RlmMSI1ivKQG2Ta.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;需要按照 LVHA 顺序声明&lt;/p&gt;
&lt;h4 id=&#34;focus伪类选择器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#focus伪类选择器&#34;&gt;#&lt;/a&gt; focus 伪类选择器&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/10/os27TGQ3tBkd1zj.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;元素显示模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#元素显示模式&#34;&gt;#&lt;/a&gt; 元素显示模式&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/10/eQNda9g5sXPzhRY.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/10/mYajh1rD26FvQiO.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;显示模式的转换&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#显示模式的转换&#34;&gt;#&lt;/a&gt; 显示模式的转换&lt;/h3&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;style&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token style&#34;&gt;&lt;span class=&#34;token language-css&#34;&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token selector&#34;&gt;div&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token property&#34;&gt;display&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;inline&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token selector&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token property&#34;&gt;display&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;block&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token selector&#34;&gt;span&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token property&#34;&gt;display&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;inline-block&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;style&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;css背景&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#css背景&#34;&gt;#&lt;/a&gt; CSS 背景&lt;/h2&gt;
&lt;h3 id=&#34;背景颜色&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#背景颜色&#34;&gt;#&lt;/a&gt; 背景颜色&lt;/h3&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;div&amp;#123;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   background-color: #FF6700;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   opacity: 0.5;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &amp;#125;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;div&amp;#123;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   backfround:rgba(0,128,0,.3)&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&amp;#125;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/10/yOZ48ac19ozg6BR.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;背景图片&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#背景图片&#34;&gt;#&lt;/a&gt; 背景图片&lt;/h3&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;background-image：none|url(url)&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;优点：便于控制位置&lt;/p&gt;
&lt;p&gt;url：绝对或相对地址&lt;/p&gt;
&lt;h3 id=&#34;背景平铺&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#背景平铺&#34;&gt;#&lt;/a&gt; 背景平铺&lt;/h3&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;background-repeat: repeat|no-repeat|repeat-x|repeat-y;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;背景图片位置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#背景图片位置&#34;&gt;#&lt;/a&gt; 背景图片位置&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/10/xO6JXvYrpZniFdq.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/10/xUNITDa1CGoVHR5.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;背景图像固定&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#背景图像固定&#34;&gt;#&lt;/a&gt; 背景图像固定&lt;/h3&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;background-attachment：scroll|fixed&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;背景符合写法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#背景符合写法&#34;&gt;#&lt;/a&gt; 背景符合写法&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/10/GIhOCQtszncoPpb.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;css三大特性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#css三大特性&#34;&gt;#&lt;/a&gt; CSS 三大特性&lt;/h2&gt;
&lt;h3 id=&#34;层叠性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#层叠性&#34;&gt;#&lt;/a&gt; 层叠性&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/10/AhKFeMiUnm7O9vx.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;继承性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#继承性&#34;&gt;#&lt;/a&gt; 继承性&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/10/AI7bwF6HEpzNovD.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;优先级&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#优先级&#34;&gt;#&lt;/a&gt; 优先级&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/10/fo56NnKBygda2Dr.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/10/t2dvcBOZaoTAuIq.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;盒子模型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#盒子模型&#34;&gt;#&lt;/a&gt; 盒子模型&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/12/pvFML79hSiORPaK.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;边框-border&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#边框-border&#34;&gt;#&lt;/a&gt; 边框 border&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5C%E4%BD%A0%E7%8C%9C%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211112150616313.png&#34; alt=&#34;image-20211112150616313&#34; /&gt;&lt;/p&gt;
&lt;p&gt;边框各样式示例：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/12/btNeEgIhox5zPaV.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5C%E4%BD%A0%E7%8C%9C%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211112151045556.png&#34; alt=&#34;image-20211112151045556&#34; /&gt;&lt;/p&gt;
&lt;p&gt;边框复合写法：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5C%E4%BD%A0%E7%8C%9C%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211112152152282.png&#34; alt=&#34;image-20211112152152282&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/12/nvgqYAr3NTQyU8t.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;内边距-padding&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#内边距-padding&#34;&gt;#&lt;/a&gt; 内边距 padding&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/12/9guDw1qLWtPkmZU.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;一旦设定了 height 或 width,padding 就会使其比原有盒子更大（margin 不会）；&lt;/p&gt;
&lt;h3 id=&#34;外边距-margin&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#外边距-margin&#34;&gt;#&lt;/a&gt; 外边距 margin&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/12/n14dpqYOjox6EUD.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;块级元素水平居中：&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;margin:0 auto;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;行内元素或行内块元素水平居中：&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;text-align:center;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;外边距合并：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/12/a3IyTLZ5dM4VgpU.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5C%E4%BD%A0%E7%8C%9C%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211112155921646.png&#34; alt=&#34;image-20211112155921646&#34; /&gt;&lt;/p&gt;
&lt;p&gt;清除浏览器自带的标签内外边距：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/12/NJk7gfDRZzLOmvM.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;圆角边框&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#圆角边框&#34;&gt;#&lt;/a&gt; 圆角边框&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5C%E4%BD%A0%E7%8C%9C%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211112182308262.png&#34; alt=&#34;image-20211112182308262&#34; /&gt;&lt;/p&gt;
&lt;p&gt;属性为一个值则对应四角，两个值则对应（左上右下，右上左下），四个值则对应（左上，右上，右下，左下）；&lt;/p&gt;
&lt;p&gt;分开写法：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/12/Sbe8CYQNZEA5q9p.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;圆形边框：&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;border-radius:50%;(在正方形盒子里)&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;盒子阴影-box-shadow&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#盒子阴影-box-shadow&#34;&gt;#&lt;/a&gt; 盒子阴影 box-shadow&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/12/xe1BifprjPugUL8.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;div:hover&amp;#123;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; box-shadow:10px 10px 10px -4px rgba(0,0,0,.3);&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&amp;#125;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;文字阴影-text-shadow&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#文字阴影-text-shadow&#34;&gt;#&lt;/a&gt; 文字阴影 text-shadow&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/12/un573tQZ2xj4oqO.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;div:hover&amp;#123;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; text-shadow:5px 5px 6px rgba(0,0,0,.3);&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&amp;#125;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;浮动&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#浮动&#34;&gt;#&lt;/a&gt; 浮动&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/12/kGd8Ca7cj6USLi3.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/12/7sNLv3CAmVhYZcH.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/12/AXyZ5g6brx4oWNl.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;问题与解决方案&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#问题与解决方案&#34;&gt;#&lt;/a&gt; 问题与解决方案&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;为什么 CSS 样式一般放在 head 中？&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/09/5R4zWBr6vdHNFfU.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;overflow&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;属性选择器&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://nc3021.github.io/2021/11/25/hybrid-learning/Git/</guid>
            <title>Git使用说明</title>
            <link>https://nc3021.github.io/2021/11/25/hybrid-learning/Git/</link>
            <category term="杂学" scheme="https://nc3021.github.io/categories/hybrid-learning/" />
            <category term="Git" scheme="https://nc3021.github.io/tags/Git/" />
            <category term="分布式文件管理" scheme="https://nc3021.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/" />
            <pubDate>Thu, 25 Nov 2021 21:36:15 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;git使用说明&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#git使用说明&#34;&gt;#&lt;/a&gt; Git 使用说明&lt;/h1&gt;
&lt;h2 id=&#34;git-本地命令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#git-本地命令&#34;&gt;#&lt;/a&gt; Git 本地命令&lt;/h2&gt;
&lt;h3 id=&#34;创建版本库&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#创建版本库&#34;&gt;#&lt;/a&gt; 创建版本库&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;先创建空文件夹（路径上没有中文）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在文件夹上打开  &lt;code&gt;git bash&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;$ git init
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211120201247.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;将文件添加到版本库&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#将文件添加到版本库&#34;&gt;#&lt;/a&gt; 将文件添加到版本库&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;figure class=&#34;highlight git&#34;&gt;&lt;figcaption data-lang=&#34;git&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token command&#34;&gt;$ git add xxx.txt&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token command&#34;&gt;$ git add&lt;span class=&#34;token parameter&#34;&gt; -A&lt;/span&gt;    //添加所有文件&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;可以重复多次使用添加多个文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;figure class=&#34;highlight git&#34;&gt;&lt;figcaption data-lang=&#34;git&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token command&#34;&gt;$ git commit&lt;span class=&#34;token parameter&#34;&gt; -m&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;本次提交内容的说明&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;将添加的所有文件提交到仓库&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;查看仓库当前状态&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#查看仓库当前状态&#34;&gt;#&lt;/a&gt; 查看仓库当前状态&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$ git status
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;随时可以掌握工作区状态&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211120202408.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git diff
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可以查看文件被修改前后的内容&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211120202606.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;版本回退&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#版本回退&#34;&gt;#&lt;/a&gt; 版本回退&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$ git reset --hard commit_id //退回某个版本
$ git reset --hard HEAD^ //退回上一个版本
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;$ git log  
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可以查看提交历史，方便回退到过去的哪个版本；&lt;/p&gt;
&lt;p&gt;查看结束后按 &lt;code&gt;q&lt;/code&gt;  退出；&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211120204012.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git reflog
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可以查看命令历史，方便确定回到未来的哪个版本；&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211120203952.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;撤销修改&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#撤销修改&#34;&gt;#&lt;/a&gt; 撤销修改&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$ git checkout -- &amp;lt;file&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;让这个文件回退到最近一次 &lt;code&gt;git commit&lt;/code&gt;  或 &lt;code&gt;git add&lt;/code&gt;  时的状态（即撤销在工作区的修改内容，即使文件被删除了也可以恢复）&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$git reset HEAD &amp;lt;file&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;清除暂存区的提交内容&lt;/p&gt;
&lt;h3 id=&#34;删除文件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#删除文件&#34;&gt;#&lt;/a&gt; 删除文件&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$ git rm &amp;lt;file&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;git-远程仓库&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#git-远程仓库&#34;&gt;#&lt;/a&gt; Git 远程仓库&lt;/h2&gt;
&lt;h3 id=&#34;关联远程仓库&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#关联远程仓库&#34;&gt;#&lt;/a&gt; 关联远程仓库&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$ git remote add xxx（远程仓库的本地名）git@xxx.com(仓库官网地址):xx（用户名）/xxxx(文件夹名).git
$ git remote add origin git@gitee.com:mzcy3021213/image.git
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;将 &lt;code&gt;remote&lt;/code&gt;  改为 &lt;code&gt;clone&lt;/code&gt;  即可克隆远程库生成一个本地库；&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git remote rm &amp;lt;远程仓库的本地名&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;取消关联远程仓库&lt;/p&gt;
&lt;h3 id=&#34;关联远程的其它分支&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#关联远程的其它分支&#34;&gt;#&lt;/a&gt; 关联远程的其它分支&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$ git branch --set-upstream-to=origin/&amp;lt;分支&amp;gt; &amp;lt;分支&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;拉取&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#拉取&#34;&gt;#&lt;/a&gt; 拉取&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$ git pull
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;推送&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#推送&#34;&gt;#&lt;/a&gt; 推送&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$ git push -u origin master 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;加上了 &lt;code&gt;-u&lt;/code&gt;  参数，Git 不但会把本地的 &lt;code&gt;master&lt;/code&gt;  分支内容推送的远程新的 &lt;code&gt;master&lt;/code&gt;  分支，还会把本地的 &lt;code&gt;master&lt;/code&gt;  分支和远程的 &lt;code&gt;master&lt;/code&gt;  分支关联起来，在以后的推送或者拉取时就可以简化命令；&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git push origin dev
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;推送到远程的 dev 分支；&lt;/p&gt;
&lt;h3 id=&#34;多人协作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#多人协作&#34;&gt;#&lt;/a&gt; 多人协作&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211123155748.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;分支管理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#分支管理&#34;&gt;#&lt;/a&gt; 分支管理&lt;/h2&gt;
&lt;h3 id=&#34;创建并切换分支&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#创建并切换分支&#34;&gt;#&lt;/a&gt; 创建并切换分支&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$ git branch &amp;lt;分支名&amp;gt;       //创建分支
$ git checkout &amp;lt;分支名&amp;gt;     
$ git switch &amp;lt;分支名&amp;gt;       //切换分支

$ git checkout -b &amp;lt;分支名&amp;gt;  
$ git switch -c &amp;lt;分支名&amp;gt;    //创建并切换分支
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;$ git branch                //查看当前分支
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211123145722.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git branch&lt;/code&gt;  命令会列出所有分支，当前分支前面会标一个 &lt;code&gt;*&lt;/code&gt;  号；&lt;/p&gt;
&lt;h3 id=&#34;合并分支&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#合并分支&#34;&gt;#&lt;/a&gt; 合并分支&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$ git merge &amp;lt;分支名&amp;gt;              
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;git merge&lt;/code&gt;  命令用于合并指定分支到当前分支&lt;/p&gt;
&lt;h3 id=&#34;删除分支&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#删除分支&#34;&gt;#&lt;/a&gt; 删除分支&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$ git branch -d &amp;lt;分支名&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;储藏分支&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#储藏分支&#34;&gt;#&lt;/a&gt; 储藏分支&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$ git stash                   
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;存储还未完成的分支；&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git stash list
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;查看存储的分支；&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git stash apply          
$ git stash pop
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;恢复分支：一种是用 &lt;code&gt;git stash apply&lt;/code&gt;  恢复，但是恢复后，stash 内容并不删除，你需要用 &lt;code&gt;git stash drop&lt;/code&gt;  来删除；&lt;/p&gt;
&lt;p&gt;另一种方式是用 &lt;code&gt;git stash pop&lt;/code&gt; ，恢复的同时把 stash 内容也删了；&lt;/p&gt;
&lt;h3 id=&#34;修复分支&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#修复分支&#34;&gt;#&lt;/a&gt; 修复分支&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$ git cherry-pick &amp;lt;提交的编号&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;将对其它分支修改的提交移植到本分支上；&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/mzcy3021213/image/raw/master/img/20211123155844.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;分支标签&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#分支标签&#34;&gt;#&lt;/a&gt; 分支标签&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$ git tag &amp;lt;标签名&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;对当前分支创建标签&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git tag 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;查询所有标签&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git tag &amp;lt;标签名&amp;gt; &amp;lt;提交编号&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;对历史提交打上标签&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git tag -d &amp;lt;标签名&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;删除标签&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
