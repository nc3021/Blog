<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>Course Of Growth</title>
        <subtitle></subtitle>
        <icon>https://nc3021.github.io/images/favicon.ico</icon>
        <link>https://nc3021.github.io</link>
        <author>
          <name>页川木子</name>
        </author>
        <description>It&#39;s not too late from now on</description>
        <language>zh-CN</language>
        <pubDate>Tue, 28 Dec 2021 20:04:03 +0800</pubDate>
        <lastBuildDate>Tue, 28 Dec 2021 20:04:03 +0800</lastBuildDate>
        <category term="学习，成长，编程" />
        <item>
            <guid isPermalink="true">https://nc3021.github.io/2021/12/28/front-end/%E9%9D%A2%E7%BB%8F/</guid>
            <title>前端面经</title>
            <link>https://nc3021.github.io/2021/12/28/front-end/%E9%9D%A2%E7%BB%8F/</link>
            <category term="前端" scheme="https://nc3021.github.io/categories/front-end/" />
            <category term="前端" scheme="https://nc3021.github.io/tags/%E5%89%8D%E7%AB%AF/" />
            <category term="面试" scheme="https://nc3021.github.io/tags/%E9%9D%A2%E8%AF%95/" />
            <pubDate>Tue, 28 Dec 2021 20:04:03 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;前端面经&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#前端面经&#34;&gt;#&lt;/a&gt; 前端面经&lt;/h1&gt;
&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h2 id=&#34;待准备问题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#待准备问题&#34;&gt;#&lt;/a&gt; 待准备问题&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;VUE 的源码&lt;/li&gt;
&lt;li&gt;简历两个项目&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;html篇&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#html篇&#34;&gt;#&lt;/a&gt; HTML 篇&lt;/h2&gt;
&lt;h3 id=&#34;html-语义化&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#html-语义化&#34;&gt;#&lt;/a&gt; HTML 语义化&lt;/h3&gt;
&lt;p&gt;用正确的标签做正确的事情。&lt;br /&gt;
html 语义化让页面的内容结构化，结构更清晰，便于对浏览器、搜索引擎解析；即使在没有样式 CSS 情况下也以一种文档格式显示，并且是容易阅读的；&lt;br /&gt;
 搜索引擎的爬虫也依赖于 HTML 标记来确定上下文和各个关键字的权重，利于 SEO;&lt;br /&gt;
 使阅读源代码的人对网站更容易将网站分块，便于阅读维护理解。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8zMjU3MDQyMw==&#34;&gt;初探・HTML5 语义化 - 知乎 (zhihu.com)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211228145604.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211228145932.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;img标签上-title-与-alt-属性的区别&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#img标签上-title-与-alt-属性的区别&#34;&gt;#&lt;/a&gt; &amp;lt;img&amp;gt; 标签上 title 与 alt 属性的区别&lt;/h3&gt;
&lt;p&gt;alt 是给搜索引擎识别，在图像无法显示时的替代文本；&lt;br /&gt;
title 是关于元素的注释信息，主要是给用户解读。&lt;br /&gt;
当鼠标放到文字或是图片上时有 title 文字显示。&lt;/p&gt;
&lt;h3 id=&#34;href与src的区别&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#href与src的区别&#34;&gt;#&lt;/a&gt; href 与 src 的区别&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;href&lt;/strong&gt;：指定资源的位置，用于建立当前页面与引用资源之间的关系（链接），&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;src&lt;/strong&gt;：（source 的缩写），指向外部资源的位置，指向的内容将会应用到文档中当前标签所在位置。&lt;/li&gt;
&lt;li&gt;遇到 href，页面会并行加载后续内容；而 src 则不同，浏览器需要加载完毕 src 的内容才会继续往下走。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;很多网站不常用table-iframe这两个元素的原因&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#很多网站不常用table-iframe这两个元素的原因&#34;&gt;#&lt;/a&gt; 很多网站不常用 table  iframe 这两个元素的原因&lt;/h3&gt;
&lt;p&gt;因为浏览器页面渲染的时候是从上至下的，而 table 和 iframe 这两种元素会改变这样渲染规则，他们是要等待自己元素内的内容加载完才整体渲染。用户体验会很不友好。&lt;/p&gt;
&lt;h3 id=&#34;html5新增特性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#html5新增特性&#34;&gt;#&lt;/a&gt; HTML5 新增特性&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vYmluZ3VvNjY2L3AvMTA5Mjg5MDcuaHRtbA==&#34;&gt;html5 新特性总结 - 斌果 - 博客园 (cnblogs.com)&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;新的语义标签&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;标签&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&amp;lt;header&amp;gt;&lt;/td&gt;
&lt;td&gt;定义了文档的头部区域&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;lt;footer&amp;gt;&lt;/td&gt;
&lt;td&gt;定义了文档的尾部区域&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;lt;nav&amp;gt;&lt;/td&gt;
&lt;td&gt;定义文档的导航&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;lt;section&amp;gt;&lt;/td&gt;
&lt;td&gt;定义文档中的节&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;lt;article&amp;gt;&lt;/td&gt;
&lt;td&gt;定义文章&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;lt;aside&amp;gt;&lt;/td&gt;
&lt;td&gt;定义页面以外的内容&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;lt;details&amp;gt;&lt;/td&gt;
&lt;td&gt;定义用户可以看到或者隐藏的额外细节&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;lt;summary&amp;gt;&lt;/td&gt;
&lt;td&gt;标签包含 details 元素的标题&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;lt;dialog&amp;gt;&lt;/td&gt;
&lt;td&gt;定义对话框&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;lt;figure&amp;gt;&lt;/td&gt;
&lt;td&gt;定义自包含内容，如图表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;lt;main&amp;gt;&lt;/td&gt;
&lt;td&gt;定义文档主内容&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;lt;mark&amp;gt;&lt;/td&gt;
&lt;td&gt;定义文档的主内容&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;lt;time&amp;gt;&lt;/td&gt;
&lt;td&gt;定义日期 / 时间&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;画布 (Canvas) API&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;地理定位 (Geolocation) API&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;本地离线存储 localStorage 长期存储数据，浏览器关闭后数据不丢失；&lt;br /&gt;
sessionStorage 的数据在浏览器关闭后自动删除&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;新的技术 webworker, websocket, Geolocation&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;拖拽释放 API&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;音频、视频 API (audio,video)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;表单控件，calendar、date、time、email、url、searc&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;块级标签行内标签行内块标签&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#块级标签行内标签行内块标签&#34;&gt;#&lt;/a&gt; 块级标签，行内标签，行内块标签&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;块级元素：独占一行，对宽高的属性值生效；如果不给宽度，块级元素就默认为浏览器的宽度，即就是 100% 宽；&lt;/p&gt;
&lt;p&gt;块标签：包含 div、p、ul、ol、li、dl、h1~h6、form、table；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;行内元素：可以多个标签存在一行，对宽高属性值不生效，完全靠内容撑开宽高！&lt;/p&gt;
&lt;p&gt;行内标签：包含 a、button、span、em、i、strong、b、img、input、label、br；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;行内块元素：结合的行内和块级的优点（不仅可以对宽高属性值生效，还可以多个标签存在一行显示）；&lt;/p&gt;
&lt;p&gt;行内块标签：img,input,textarea&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;各种标签之间的转换&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;块级标签转换为行内标签：display:inline;&lt;/li&gt;
&lt;li&gt;行内标签转换为块级标签：display:block;&lt;/li&gt;
&lt;li&gt;转换为行内块标签：display：inline-block;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;xhtml和html的区别&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#xhtml和html的区别&#34;&gt;#&lt;/a&gt; XHTML 和 HTML 的区别&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;html 元素必须正确嵌套，不能乱；&lt;/li&gt;
&lt;li&gt;属性必须是小写的；&lt;/li&gt;
&lt;li&gt;属性值必须加引号；&lt;/li&gt;
&lt;li&gt;标签必须有结束，单标签也应该用  “/” 来结束掉；&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;每个html文件里开头都有个很重要的东西doctype知道这是干什么的吗&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#每个html文件里开头都有个很重要的东西doctype知道这是干什么的吗&#34;&gt;#&lt;/a&gt; 每个 HTML 文件里开头都有个很重要的东西，Doctype，知道这是干什么的吗？&lt;/h3&gt;
&lt;p&gt;声明位于文档中的最前面的位置，处于 标签之前。此标签可告知浏览器文档使用哪种 HTML 或 XHTML 规范。（重点：告诉浏览器按照何种规范解析页面）&lt;/p&gt;
&lt;h3 id=&#34;渐进增强和优雅降级之间的不同&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#渐进增强和优雅降级之间的不同&#34;&gt;#&lt;/a&gt; 渐进增强和优雅降级之间的不同&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;渐进增强 progressive enhancement：针对低版本浏览器进行构建页面，保证最基本的功能，然后再针对高级浏览器进行效果、交互等改进和追加功能达到更好的用户体验。&lt;/li&gt;
&lt;li&gt;优雅降级 graceful degradation：一开始就构建完整的功能，然后再针对低版本浏览器进行兼容&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;css篇&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#css篇&#34;&gt;#&lt;/a&gt; CSS 篇&lt;/h2&gt;
&lt;h3 id=&#34;盒子模型的介绍&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#盒子模型的介绍&#34;&gt;#&lt;/a&gt; 盒子模型的介绍&lt;/h3&gt;
&lt;p&gt;盒模型： 内容 (content)、填充 (padding)、 边框 (border)、边界 (margin)；&lt;/p&gt;
&lt;p&gt;类型：IE 盒子模型，标准 W3C 盒子模型&lt;/p&gt;
&lt;p&gt;区 别： IE 的 content 的 width 和 height 把 border 和 padding 计算了进去；&lt;/p&gt;
&lt;h3 id=&#34;css-选择器优先级&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#css-选择器优先级&#34;&gt;#&lt;/a&gt; css 选择器优先级&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;单个选择器：&lt;/p&gt;
&lt;p&gt;!important &amp;gt; 行内样式（比重 1000）&amp;gt; ID 选择器（比重 100） &amp;gt; 类选择器（比重 10） &amp;gt; 标签（比重 1） &amp;gt; 通配符 &amp;gt; 继承 &amp;gt; 浏览器默认属性&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;复合选择器：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/10/fo56NnKBygda2Dr.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;垂直居中的几种方式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#垂直居中的几种方式&#34;&gt;#&lt;/a&gt; 垂直居中的几种方式&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;单行文本: line-height = height&lt;/li&gt;
&lt;li&gt;图片: vertical-align: middle;&lt;/li&gt;
&lt;li&gt;flex: justify-content:center&lt;/li&gt;
&lt;li&gt;transform + absolute : top: 50%;left: 50%;transform: translate(-50%, -50%);&lt;/li&gt;
&lt;li&gt;absolute+margin 负值：top: 50%;left: 50%;margin-top: -50px;margin-left: -100px;&lt;/li&gt;
&lt;li&gt;暂略&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8zMzYxMzYyMTI=&#34;&gt;CSS 垂直居中，你会多少种写法？ - 知乎 (zhihu.com)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211228190526.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;简明说一下-css-link-与-import-的区别和用法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#简明说一下-css-link-与-import-的区别和用法&#34;&gt;#&lt;/a&gt; 简明说一下 CSS link 与 @import 的区别和用法？&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;** 加载顺序：**link 是先将 css 文件加载到网页，然后再进行编译。@import 是先加载完 html 结构再加载 css 文件，如果网速较慢则会影响视觉效果。&lt;/li&gt;
&lt;li&gt;** 兼容性：**link 是 xhtml 标签无兼容问题，@import 是 css2.1 提出的所以不支持 IE5 以前的浏览器。&lt;/li&gt;
&lt;li&gt;**DOM 支持：**link 支持 DOM 改变样式，@import 不支持。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;rgba和opacity的透明效果有什么不同&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#rgba和opacity的透明效果有什么不同&#34;&gt;#&lt;/a&gt; rgba 和 opacity 的透明效果有什么不同？&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;opacity&lt;/strong&gt; ：子元素会继承父元素的 opacity 属性；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RGBA&lt;/strong&gt; ：设置的元素的后代元素不会继承不透明属性。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;displaynone和visibilityhidden的区别&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#displaynone和visibilityhidden的区别&#34;&gt;#&lt;/a&gt; display:none 和 visibility:hidden 的区别？&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;display:none&lt;/strong&gt; ：隐藏对应的元素，在文档布局中不再给它分配空间，它各边的元素会合拢，就当他从来不存在；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;visibility:hidden&lt;/strong&gt; ：隐藏对应的元素，但是在文档布局中仍保留原来的空间。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;有哪些方式可以对一个dom设置它的css样式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#有哪些方式可以对一个dom设置它的css样式&#34;&gt;#&lt;/a&gt; 有哪些方式可以对一个 DOM 设置它的 CSS 样式？&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;外部样式表，引入一个外部 css 文件&lt;/li&gt;
&lt;li&gt;内部样式表，将 css 代码放在 标签内部&lt;/li&gt;
&lt;li&gt;内联样式，将 css 样式直接定义在 HTML 元素内部&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;文档流是什么&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#文档流是什么&#34;&gt;#&lt;/a&gt; 文档流是什么？&lt;/h3&gt;
&lt;p&gt;文档流也称为普通流，即网页在解析时，遵循从上向下，从左向右的顺序。&lt;/p&gt;
&lt;p&gt;css 中的定位机制，共三种：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;正常的文档流&lt;/li&gt;
&lt;li&gt;float&lt;/li&gt;
&lt;li&gt;postion 的 absolute&lt;/li&gt;
&lt;li&gt;flex&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;position的值-relative和absolute分别是相对于谁进行定位的&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#position的值-relative和absolute分别是相对于谁进行定位的&#34;&gt;#&lt;/a&gt; position 的值， relative 和 absolute 分别是相对于谁进行定位的？&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;relative: 相对定位，相对于自己本身在正常文档流中的位置进行定位。&lt;/li&gt;
&lt;li&gt;absolute: 生成绝对定位，相对于最近一级定位不为 static 的父元素进行定位。&lt;/li&gt;
&lt;li&gt;fixed: （老版本 IE 不支持）生成绝对定位，相对于浏览器窗口或者 frame 进行定&lt;/li&gt;
&lt;li&gt;static: 默认值，没有定位，元素出现在正常的文档流中。&lt;/li&gt;
&lt;li&gt;sticky: 生成粘性定位的元素，容器的位置根据正常文档流计算得出。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;divcss的布局较table布局有什么优点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#divcss的布局较table布局有什么优点&#34;&gt;#&lt;/a&gt; div+css 的布局较 table 布局有什么优点？&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;改版的时候更方便 只要改 css 文件。&lt;/li&gt;
&lt;li&gt;页面加载速度更快、结构化清晰、页面显示简洁。&lt;/li&gt;
&lt;li&gt;表现与结构相分离。&lt;/li&gt;
&lt;li&gt;易于优化（seo）搜索引擎更友好，排名更容易靠前。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;如何创建块级格式化上下文block-formatting-contextbfc有什么用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#如何创建块级格式化上下文block-formatting-contextbfc有什么用&#34;&gt;#&lt;/a&gt; 如何创建块级格式化上下文 (block formatting context),&lt;strong&gt;BFC&lt;/strong&gt; 有什么用？&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;什么是 BFC?&lt;/p&gt;
&lt;p&gt;​	BFC 格式化上下文，它是一个独立的渲染区域，让处于 BFC 内部的元素和外部的元素相互隔离，使内外元素的定位不会相互影响&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如何产生 BFC?&lt;/p&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;figcaption data-lang=&#34;CSS&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;display&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; inline-block&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;position&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; absolute/fixed&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;BFC 作用&lt;/p&gt;
&lt;p&gt;​	BFC 最大的一个作用就是：在页面上有一个独立隔离容器，容器内的元素和容器外的元素布局不会相互影响。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;css3有哪些新特性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#css3有哪些新特性&#34;&gt;#&lt;/a&gt; CSS3 有哪些新特性？&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;弹性盒模型 display: flex;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;颜色透明度 color: rgba（255, 0, 0, 0.75）；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;圆角 border-radius: 5px;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;阴影 box-shadow:3px 3px 3px rgba（0, 64, 128, 0.3）；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2d，3d 变换；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;平滑过渡 transition: all .3s ease-in .1s;&lt;/p&gt;
&lt;p&gt;动画 @keyframes anim-1 {50% {border-radius: 50%;}} animation: anim-1 1s;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;新增伪类选择器：:checked、:enabled、:disabled&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;暂略&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;css3动画简单动画的实现如旋转等&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#css3动画简单动画的实现如旋转等&#34;&gt;#&lt;/a&gt; CSS3 动画（简单动画的实现，如旋转等）&lt;/h3&gt;
&lt;p&gt;​	依靠 CSS3 中提出的三个属性：transition、transform、animation&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;transition&lt;/strong&gt;：定义了元素在变化过程中是怎么样的，包含 transition-property、transition-duration、transition-timing-function、transition-delay。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;transform&lt;/strong&gt;：定义元素的变化结果，包含 rotate、scale、skew、translate。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;animation&lt;/strong&gt;：动画定义了动作的每一帧（@keyframes）有什么效果，包括 animation-name，animation-duration、animation-timing-function、animation-delay、animation-iteration-count、animation-direction&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;如何清除浮动&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#如何清除浮动&#34;&gt;#&lt;/a&gt; 如何清除浮动？&lt;/h3&gt;
&lt;h3 id=&#34;常见兼容性问题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#常见兼容性问题&#34;&gt;#&lt;/a&gt; 常见兼容性问题？&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;浏览器默认的 margin 和 padding 不同。解决方案是加一个全局的 *{margin:0;padding:0;} 来统一。&lt;/li&gt;
&lt;li&gt;Chrome 中文界面下默认会将小于 12px 的文本强制按照 12px 显示，&lt;br /&gt;
 可通过加入 CSS 属性 -webkit-text-size-adjust: none; 解决.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;canvas与svg的区别&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#canvas与svg的区别&#34;&gt;#&lt;/a&gt; canvas 与 svg 的区别？&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;canvas 是 H5 时期才有绘图方法，而 svg 已经有了十多年的历史（XML）；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;canvas 绘图是基于像素点，是位图，如果进行放大或缩小会失真；svg 基于图形，是矢图用 html 标签描绘形状，放大缩小不会失真；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;canvas 需要在 js 中绘制，svg 在 html 绘制；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;canvas 支持颜色比 svg 多；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;canvas 无法对已经绘制的图像进行修改、操作，svg 可以获取到标签进行操作。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;矢量图&lt;/strong&gt; 表现的图像颜色比较单一，所以所占用的空间会很小。&lt;br /&gt;
&lt;strong&gt;位图&lt;/strong&gt; 表现的色彩比较丰富，所以占用的空间会很大，颜色信息越多，占用空间越大，图像越清晰，占用空间越大。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;矢量图&lt;/strong&gt; 色彩不丰富，无法表现逼真的实物，矢量图常常用来表示标识、图标、Logo 等简单直接的图像。&lt;br /&gt;
&lt;strong&gt;位图&lt;/strong&gt; 表现的色彩比较丰富，可以表现出色彩丰富的图象，可逼真表现自然界各类实物。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;画三角形&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#画三角形&#34;&gt;#&lt;/a&gt; 画三角形&lt;/h3&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;figcaption data-lang=&#34;CSS&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;#box&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 0px&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 0px&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;border-top&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 20px solid red&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;border-right&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 20px solid transparent&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;border-bottom&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 20px solid transparent&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;border-left&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 20px solid transparent&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;js篇&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#js篇&#34;&gt;#&lt;/a&gt; JS 篇&lt;/h2&gt;
&lt;h3 id=&#34;js数据类型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#js数据类型&#34;&gt;#&lt;/a&gt; JS 数据类型&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;基本数据类型： Undefined、Null、Boolean、Number、String、Symbol&lt;/li&gt;
&lt;li&gt;引用数据类型： Object (包括 Object 、Array 、Function、Date、Set、Map、RegExp)&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;声明变量时不同的内存地址分配：
&lt;ul&gt;
&lt;li&gt;简单类型的值存放在栈中，在栈中存放的是对应的值&lt;/li&gt;
&lt;li&gt;引用类型对应的值存储在堆中，在栈中存放的是指向堆内存的地址&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;不同的类型数据导致赋值变量时的不同：
&lt;ul&gt;
&lt;li&gt;简单类型赋值，是生成相同的值，两个对象对应不同的地址&lt;/li&gt;
&lt;li&gt;复杂类型赋值，是将保存对象的内存地址赋值给另一个变量。也就是两个变量指向堆内存中同一个对象&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;和-的区别&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#和-的区别&#34;&gt;#&lt;/a&gt; == 和 === 的区别&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;等于操作符&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;操作符（==）在比较中会先进行类型转换，再确定操作数是否相等&lt;/p&gt;
&lt;p&gt;遵循以下规则：&lt;/p&gt;
&lt;p&gt;​	如果任一操作数是布尔值，则将其转换为数值再比较是否相等；&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; result1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;​	如果一个操作数是字符串，另一个操作数是数值，则尝试将字符串转换为数值，再比较是否相等；&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; result1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;55&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;55&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;​	如果一个操作数是对象，另一个操作数不是，则调用对象的  &lt;code&gt;valueOf()&lt;/code&gt;  方法取得其原始值，再根据前面的规则进行比较；&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; obj &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token function-variable function&#34;&gt;valueOf&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; result1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;obj &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;​	 &lt;code&gt;null&lt;/code&gt;  和 &lt;code&gt;undefined&lt;/code&gt;  相等；&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; result1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;undefined&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;​	如果有任一操作数是  &lt;code&gt;NaN&lt;/code&gt;  ，则相等操作符返回  &lt;code&gt;false&lt;/code&gt; ；&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; result1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;NaN&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;NaN&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// false&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;​	如果两个操作数都是对象，则比较它们是不是同一个对象。如果两个操作数都指向同一个对象，则相等操作符返回 &lt;code&gt;true&lt;/code&gt; ；&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; obj1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;name&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;xxx&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; obj2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;name&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;xxx&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; result1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;obj1 &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; obj2 &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// false&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;blockquote&gt;
&lt;p&gt;简单小结：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;两个都为简单类型，字符串和布尔值都会转换成数值，再比较&lt;/li&gt;
&lt;li&gt;简单类型与引用类型比较，对象转化成其原始类型的值，再比较&lt;/li&gt;
&lt;li&gt;两个都为引用类型，则比较它们是否指向同一个对象&lt;/li&gt;
&lt;li&gt;null 和 undefined 相等&lt;/li&gt;
&lt;li&gt;存在 NaN 则返回 false&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;全等操作符&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	全等操作符由 3 个等于号（ === ）表示，只有两个操作数在不转换的前提下相等才返回  &lt;code&gt;true&lt;/code&gt; 。即类型相同，值也需相同；&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;undefined&lt;/code&gt;  和  &lt;code&gt;null&lt;/code&gt;  与自身严格相等&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;小结&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	除了在比较对象属性为 &lt;code&gt;null&lt;/code&gt;  或者 &lt;code&gt;undefined&lt;/code&gt;  的情况下，我们可以使用相等操作符（==），其他情况建议一律使用全等操作符（===）;&lt;/p&gt;
&lt;p&gt;相等运算符隐藏的类型转换，会带来一些违反直觉的结果&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;0&#39;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// false&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;0&#39;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token boolean&#34;&gt;false&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;false&#39;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// false&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token boolean&#34;&gt;false&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;0&#39;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token boolean&#34;&gt;false&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;undefined&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// false&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token boolean&#34;&gt;false&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// false&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;undefined&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token string&#34;&gt;&#39; \t\r\n&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;null-和-undefined-的区别&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#null-和-undefined-的区别&#34;&gt;#&lt;/a&gt; null 和 undefined 的区别？&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;null 表示一个对象被定义了，值为 “空值”；&lt;/li&gt;
&lt;li&gt;undefined 表示不存在这个值。
&lt;ul&gt;
&lt;li&gt;变量被声明了，但没有赋值时，就等于 undefined&lt;/li&gt;
&lt;li&gt;调用函数时，应该提供的参数没有提供，该参数等于 undefined&lt;/li&gt;
&lt;li&gt;对象没有赋值的属性，该属性的值为 undefined&lt;/li&gt;
&lt;li&gt;函数没有返回值时，默认返回 undefined。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;eval是做什么的&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#eval是做什么的&#34;&gt;#&lt;/a&gt; eval 是做什么的？&lt;/h3&gt;
&lt;p&gt;​	它的功能是把对应的字符串解析成 JS 代码并运行；&lt;br /&gt;
应该避免使用 eval，不安全，非常耗性能（2 次，一次解析成 js 语句，一次执行）;&lt;/p&gt;
&lt;h3 id=&#34;箭头函数的特点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#箭头函数的特点&#34;&gt;#&lt;/a&gt; 箭头函数的特点&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;不需要 function 关键字来创建函数；&lt;/li&gt;
&lt;li&gt;省略 return 关键字；&lt;/li&gt;
&lt;li&gt;改变 this 指向；&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;var-let-const-区别&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#var-let-const-区别&#34;&gt;#&lt;/a&gt; var、let、const 区别？&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;var 存在变量提升。&lt;/li&gt;
&lt;li&gt;let 只能在块级作用域内访问。&lt;/li&gt;
&lt;li&gt;const 用来定义常量，必须初始化，不能修改（对象特殊）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;dom的常见操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#dom的常见操作&#34;&gt;#&lt;/a&gt; DOM 的常见操作&lt;/h3&gt;
&lt;p&gt;文档对象模型 (DOM) 是  &lt;code&gt;HTML&lt;/code&gt;  和  &lt;code&gt;XML&lt;/code&gt;  文档的编程接口&lt;/p&gt;
&lt;p&gt;它提供了对文档的结构化的表述，并定义了一种方式可以使从程序中对该结构进行访问，从而改变文档的结构，样式和内容&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;mark&gt;创建节点&lt;/mark&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;createElement&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;创建新元素，接受一个参数，即要创建元素的标签名&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; divEl &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; document&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;createElement&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;div&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;code&gt;createTextNode&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;创建一个文本节点&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; textEl&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;document&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;createTextNode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;content&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;code&gt;createDocumentFragment&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;用来创建一个文档碎片，它表示一种轻量级的文档，主要是用来存储临时节点，然后把文档碎片的内容一次性添加到 &lt;code&gt;DOM&lt;/code&gt;  中（当请求把一个 &lt;code&gt;DocumentFragment&lt;/code&gt;  节点插入文档树时，插入的不是  &lt;code&gt;DocumentFragment&lt;/code&gt;  自身，而是它的所有子孙节点）&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; fragment &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; document&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;createDocumentFragment&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;code&gt;createAttribute&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;创建属性节点，可以是自定义属性&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; attribute &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; document&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;createAttribute&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;custom&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;mark&gt;获取节点&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;querySelector&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;querySelector&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;传入任何有效的 &lt;code&gt;css&lt;/code&gt;  选择器，即可选中单个  &lt;code&gt;DOM&lt;/code&gt;  元素（首个）：&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;document&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;querySelector&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;.element&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;document&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;querySelector&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;#element&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;document&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;querySelector&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;div&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;document&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;querySelector&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;[name=&#34;username&#34;]&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;document&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;querySelector&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;div + p &gt; span&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;code&gt;querySelectorAll&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;返回一个包含节点子树内所有与之相匹配的 &lt;code&gt;Element&lt;/code&gt;  节点列表，如果没有相匹配的，则返回一个空节点列表&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; notLive &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; document&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;querySelectorAll&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;p&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;关于获取 &lt;code&gt;DOM&lt;/code&gt;  元素的方法还有如下，就不一一述说&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;document&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getElementById&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;id属性值&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;返回拥有指定id的对象的引用&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;document&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getElementsByClassName&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;class属性值&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;返回拥有指定&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt;的对象集合&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;document&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getElementsByTagName&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;标签名&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;返回拥有指定标签名的对象集合&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;document&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getElementsByName&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;name属性值&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; 返回拥有指定名称的对象结合&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;document&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;element&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;querySelector&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;CSS选择器&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  仅返回第一个匹配的元素&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;document&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;element&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;querySelectorAll&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;CSS选择器&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;   返回所有匹配的元素&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;document&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;documentElement&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  获取页面中的&lt;span class=&#34;token constant&#34;&gt;HTML&lt;/span&gt;标签&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;document&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;body&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; 获取页面中的&lt;span class=&#34;token constant&#34;&gt;BODY&lt;/span&gt;标签&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;document&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;all&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  获取页面中的所有元素节点的对象集合型&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;mark&gt;更新节点&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;innerHTML&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;不但可以修改一个 &lt;code&gt;DOM&lt;/code&gt;  节点的文本内容，还可以直接通过 &lt;code&gt;HTML&lt;/code&gt;  片段修改 &lt;code&gt;DOM&lt;/code&gt;  节点内部的子树&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 获取 &amp; lt;p id=&#34;p&#34;&gt;...&amp;lt;/p &gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; p &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; document&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getElementById&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;p&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 设置文本为 abc:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;p&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;innerHTML &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;ABC&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// &amp;lt;p id=&#34;p&#34;&gt;ABC&amp;lt;/p &gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 设置 HTML:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;p&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;innerHTML &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;ABC &amp;lt;span style=&#34;color:red&#34;&gt;RED&amp;lt;/span&gt; XYZ&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// &amp;lt;p&gt;...&amp;lt;/p &gt; 的内部结构已修改&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;code&gt;style&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;DOM&lt;/code&gt;  节点的 &lt;code&gt;style&lt;/code&gt;  属性对应所有的 &lt;code&gt;CSS&lt;/code&gt; ，可以直接获取或设置。遇到 &lt;code&gt;-&lt;/code&gt;  需要转化为驼峰命名&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 获取 &amp; lt;p id=&#34;p-id&#34;&gt;...&amp;lt;/p &gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; p &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; document&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getElementById&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;p-id&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 设置 CSS:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;p&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;style&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;color &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;#ff0000&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;p&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;style&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fontSize &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;20px&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 驼峰命名&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;p&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;style&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;paddingTop &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;2em&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;mark&gt;添加节点&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;appendChild&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;把一个子节点添加到父节点的最后一个子节点&lt;/p&gt;
&lt;p&gt;&lt;code&gt;insertBefore&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;把子节点插入到指定的位置，使用方法如下&lt;/p&gt;
&lt;p&gt;&lt;code&gt;setAttribute&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;在指定元素中添加一个属性节点，如果元素中已有该属性改变属性值&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;删除节点&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;删除一个节点，首先要获得该节点本身以及它的父节点，然后，调用父节点的 &lt;code&gt;removeChild&lt;/code&gt;  把自己删掉&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 拿到待删除节点:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; self &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; document&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getElementById&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;to-be-removed&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 拿到父节点:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; parent &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;parentElement&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 删除:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; removed &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; parent&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;removeChild&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;removed &lt;span class=&#34;token operator&#34;&gt;===&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;删除后的节点虽然不在文档树中了，但其实它还在内存中，可以随时再次被添加到别的位置.&lt;/p&gt;
&lt;h3 id=&#34;对bom的理解&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#对bom的理解&#34;&gt;#&lt;/a&gt; 对 BOM 的理解&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;D:%5CMarkdown%5Clocal_image%5C3e191c40-8089-11eb-85f6-6fac77c0c9b3.png&#34; alt=&#34;img&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;BOM&lt;/code&gt;  (Browser Object Model)，浏览器对象模型，提供了独立于内容与浏览器窗口进行交互的对象&lt;/p&gt;
&lt;p&gt;其作用就是跟浏览器做一些交互效果，比如如何进行页面的后退，前进，刷新，浏览器的窗口发生变化，滚动条的滚动，以及获取客户的一些信息如：浏览器品牌版本，屏幕分辨率。&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;window&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;​	 &lt;code&gt;Bom&lt;/code&gt;  的核心对象是 &lt;code&gt;window&lt;/code&gt; ，它表示浏览器的一个实例。在浏览器中， &lt;code&gt;window&lt;/code&gt;  对象有双重角色，即是浏览器窗口的一个接口，又是全局对象。因此所有在全局作用域中声明的变量、函数都会变成 &lt;code&gt;window&lt;/code&gt;  对象的属性和方法&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;location&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;url&lt;/code&gt;  地址如下：&lt;/p&gt;
&lt;figure class=&#34;highlight http&#34;&gt;&lt;figcaption data-lang=&#34;HTTP&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;http:&lt;/span&gt;//foouser:barpassword@www.wrox.com:80/WileyCDA/?q=javascript#contents&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;code&gt;location&lt;/code&gt;  属性描述如下：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;属性名&lt;/th&gt;
&lt;th&gt;例子&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;hash&lt;/td&gt;
&lt;td&gt;&amp;quot;#contents&amp;quot;&lt;/td&gt;
&lt;td&gt;utl 中 #后面的字符，没有则返回空串&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;host&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy53cm94LmNvbTo4MA==&#34;&gt;www.wrox.com:80&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;服务器名称和端口号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hostname&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy53cm94LmNvbQ==&#34;&gt;www.wrox.com&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;域名，不带端口号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;href&lt;/td&gt;
&lt;td&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy53cm94LmNvbTo4MC9XaWxleUNEQS8/cT1qYXZhc2NyaXB0I2NvbnRlbnRz&#34;&gt;http://www.wrox.com:80/WileyCDA/?q=javascript#contents&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;完整 url&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pathname&lt;/td&gt;
&lt;td&gt;&amp;quot;/WileyCDA/&amp;quot;&lt;/td&gt;
&lt;td&gt;服务器下面的文件路径&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;port&lt;/td&gt;
&lt;td&gt;80&lt;/td&gt;
&lt;td&gt;url 的端口号，没有则为空&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;protocol&lt;/td&gt;
&lt;td&gt;http:&lt;/td&gt;
&lt;td&gt;使用的协议&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;search&lt;/td&gt;
&lt;td&gt;?q=javascript&lt;/td&gt;
&lt;td&gt;url 的查询字符串，通常为？后面的内容&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;除了  &lt;code&gt;hash&lt;/code&gt;  之外，只要修改 &lt;code&gt;location&lt;/code&gt;  的一个属性，就会导致页面重新加载新 &lt;code&gt;URL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;location.reload()&lt;/code&gt; ，此方法可以重新刷新当前页面。这个方法会根据最有效的方式刷新页面，如果页面自上一次请求以来没有改变过，页面就会从浏览器缓存中重新加载&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;navigator&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;​	 &lt;code&gt;navigator&lt;/code&gt;  对象主要用来获取浏览器的属性，区分浏览器类型。&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;history&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;​	 &lt;code&gt;history&lt;/code&gt;  对象主要用来操作浏览器 &lt;code&gt;URL&lt;/code&gt;  的历史记录，可以通过参数向前，向后，或者向指定 &lt;code&gt;URL&lt;/code&gt;  跳转&lt;/p&gt;
&lt;p&gt;常用的属性如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;history.go()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;接收一个整数数字或者字符串参数：向最近的一个记录中包含指定字符串的页面跳转，&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;history&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;go&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;maixaofei.com&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;当参数为整数数字的时候，正数表示向前跳转指定的页面，负数为向后跳转指定的页面&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;history&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;go&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 向前跳转三个记录&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;history&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;go&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 向后跳转一个记录&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;history.forward()&lt;/code&gt; ：向前跳转一个页面&lt;/li&gt;
&lt;li&gt;&lt;code&gt;history.back()&lt;/code&gt; ：向后跳转一个页面&lt;/li&gt;
&lt;li&gt;&lt;code&gt;history.length&lt;/code&gt; ：获取历史记录数&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWUzanMuY24vaW50ZXJ2aWV3L0phdmFTY3JpcHQvQk9NLmh0bWwjJUU0JUI4JTgwJUUzJTgwJTgxJUU2JTk4JUFGJUU0JUJCJTgwJUU0JUI5JTg4&#34;&gt;面试官：说说你对 BOM 的理解，常见的 BOM 对象你了解哪些？ | web 前端面试 - 面试官系列 (vue3js.cn)&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;宏任务与微任务&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#宏任务与微任务&#34;&gt;#&lt;/a&gt; 宏任务与微任务&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;JS 分为同步任务和异步任务&lt;/li&gt;
&lt;li&gt;同步任务都在主线程上执行，形成一个执行栈&lt;/li&gt;
&lt;li&gt;主线程之外，事件触发线程管理着一个任务队列，只要异步任务有了运行结果，就在任务队列之中放置一个事件。&lt;/li&gt;
&lt;li&gt;一旦执行栈中的所有同步任务执行完毕（此时 JS 引擎空闲），系统就会读取任务队列，将可运行的异步任务添加到可执行栈中，开始执行。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;宏任务&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	&lt;strong&gt;(macro)task&lt;/strong&gt;，可以理解是每次执行栈执行的代码就是一个宏任务（包括每次从事件队列中获取一个事件回调并放到执行栈中执行）。浏览器为了能够使得 JS 内部 (macro) task 与 DOM 任务能够有序的执行，会在一个 (macro) task 执行结束后，在下一个 (macro) task 执行开始前，对页面进行重新渲染；&lt;/p&gt;
&lt;p&gt;宏任务包含：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;script (整体代码)&lt;/li&gt;
&lt;li&gt;setTimeout&lt;/li&gt;
&lt;li&gt;setInterval&lt;/li&gt;
&lt;li&gt;I/O&lt;/li&gt;
&lt;li&gt;UI 交互事件&lt;/li&gt;
&lt;li&gt;postMessage&lt;/li&gt;
&lt;li&gt;MessageChannel&lt;/li&gt;
&lt;li&gt;setImmediate (Node.js 环境)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;微任务&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	microtask, 可以理解是在当前 task 执行结束后立即执行的任务。也就是说，在当前 task 任务后，下一个 task 之前，在渲染之前。&lt;/p&gt;
&lt;p&gt;微任务报含：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Promise.then、&lt;/li&gt;
&lt;li&gt;Object.observe&lt;/li&gt;
&lt;li&gt;MutationObserver&lt;/li&gt;
&lt;li&gt;process.nextTick (Node.js 环境)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;运行机制&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在事件循环中，每进行一次循环操作称为 tick，每一次 tick 的任务处理模型是比较复杂的，但关键步骤如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;执行一个宏任务（栈中没有就从事件队列中获取）&lt;/li&gt;
&lt;li&gt;执行过程中如果遇到微任务，就将它添加到微任务的任务队列中&lt;/li&gt;
&lt;li&gt;宏任务执行完毕后，立即执行当前微任务队列中的所有微任务（依次执行）&lt;/li&gt;
&lt;li&gt;当前宏任务执行完毕，开始检查渲染，然后 GUI 线程接管渲染&lt;/li&gt;
&lt;li&gt;渲染完毕后，JS 线程继续接管，开始下一个宏任务（从事件队列中获取）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;new操作符具体干了什么呢&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#new操作符具体干了什么呢&#34;&gt;#&lt;/a&gt; new 操作符具体干了什么呢？&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;创建一个新的对象 &lt;code&gt;obj&lt;/code&gt; ；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将新对象与构建函数 &lt;code&gt;Mother&lt;/code&gt;  的原型通过原型链连接起来；&lt;/p&gt;
&lt;p&gt;&lt;code&gt;obj.__proto__=Mother.prototype&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将构建函数中的 &lt;code&gt;this&lt;/code&gt;  绑定到新建的对象 &lt;code&gt;obj&lt;/code&gt;  上；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;根据构建函数返回类型作判断，如果是原始值则被忽略，如果是返回对象，需要正常处理&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;手写 new&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;mynew&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;Func&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;args&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 1. 创建一个新对象&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; obj &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 2. 新对象原型指向构造函数原型对象&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    obj&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;__proto__ &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Func&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;prototype&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 3. 将构建函数的 this 指向新对象&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; result &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;Func&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;apply&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;obj&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 4. 根据返回值判断&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; result &lt;span class=&#34;token keyword&#34;&gt;instanceof&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Object&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt; result &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; obj&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;json是什么&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#json是什么&#34;&gt;#&lt;/a&gt; JSON 是什么？&lt;/h3&gt;
&lt;p&gt;​	JSON 的全称是”JavaScript Object Notation”，意思是 JavaScript 对象表示法，它是一种基于文本，独立于语言的轻量级数据交换格式。&lt;/p&gt;
&lt;h3 id=&#34;ajax-是什么-如何创建一个ajax&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ajax-是什么-如何创建一个ajax&#34;&gt;#&lt;/a&gt; Ajax 是什么？如何创建一个 Ajax？&lt;/h3&gt;
&lt;p&gt;​	AJAX 是一种用于创建快速动态网页的技术。通过在后台与服务器进行少量数据交换，AJAX 可以使网页实现异步更新。这意味着可以在不重新加载整个网页的情况下，对网页的某部分进行更新。而传统的网页（不使用 AJAX）如果需要更新内容，必需重载整个网页面。&lt;/p&gt;
&lt;p&gt;​	 &lt;code&gt;Ajax&lt;/code&gt;  的原理简单来说通过 &lt;code&gt;XmlHttpRequest&lt;/code&gt;  对象来向服务器发异步请求，从服务器获得数据，然后用 &lt;code&gt;JavaScript&lt;/code&gt;  来操作 &lt;code&gt;DOM&lt;/code&gt;  而更新页面&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;创建 XMLHttpRequest 对象，也就是创建一个异步调用对象；&lt;/li&gt;
&lt;li&gt;创建一个新的 HTTP 请求，并指定该 HTTP 请求的方法、URL 及验证信息；&lt;/li&gt;
&lt;li&gt;设置响应 HTTP 请求状态变化的函数；&lt;/li&gt;
&lt;li&gt;发送 HTTP 请求；&lt;/li&gt;
&lt;li&gt;获取异步调用返回的数据；&lt;/li&gt;
&lt;li&gt;使用 JavaScript 和 DOM 实现局部刷新；&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWUzanMuY24vaW50ZXJ2aWV3L0phdmFTY3JpcHQvYWpheC5odG1sIyVFNCVCQSU4QyVFMyU4MCU4MSVFNSVBRSU5RSVFNyU4RSVCMCVFOCVCRiU4NyVFNyVBOCU4Qg==&#34;&gt;面试官：ajax 原理是什么？如何实现？ | web 前端面试 - 面试官系列 (vue3js.cn)&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;call-apply-bind方法的区别&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#call-apply-bind方法的区别&#34;&gt;#&lt;/a&gt; call、apply、bind 方法的区别&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;call&lt;/code&gt;  和 &lt;code&gt;apply&lt;/code&gt;  可以用来&lt;strong&gt;重新定义函数的执行环境&lt;/strong&gt;，也就是 &lt;code&gt;this&lt;/code&gt;  的指向； &lt;code&gt;call&lt;/code&gt;  和 &lt;code&gt;apply&lt;/code&gt;  都是为了改变某个函数运行时的 &lt;code&gt;context&lt;/code&gt; ，即上下文而存在的，换句话说，就是为了改变函数体内部 &lt;code&gt;this&lt;/code&gt;  的指向。&lt;/p&gt;
&lt;p&gt;从定义中也可以看出来， &lt;code&gt;call()&lt;/code&gt;  和 &lt;code&gt;apply()&lt;/code&gt;  的不同点就是&lt;strong&gt;接收参数的方式不同&lt;/strong&gt;。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;People&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;call&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; age&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;People&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;apply&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; age&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;apply () 方法&lt;/strong&gt;接收两个参数，一个是函数运行的作用域（ &lt;code&gt;this&lt;/code&gt; ），另一个是参数数组。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;call () 方法&lt;/strong&gt;不一定接受两个参数，第一个参数也是函数运行的作用域（ &lt;code&gt;this&lt;/code&gt; ），但是传递给函数的参数必须列举出来。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;apply&lt;/code&gt;  和 &lt;code&gt;call&lt;/code&gt;  是一次性传入参数，而 &lt;code&gt;bind&lt;/code&gt;  可以分为多次传入，且 &lt;code&gt;bind&lt;/code&gt;  是返回绑定 this 之后的函数， &lt;code&gt;apply&lt;/code&gt; 、 &lt;code&gt;call&lt;/code&gt;  则是立即执行。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;innerhtml-innertext-outerhtml的区别&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#innerhtml-innertext-outerhtml的区别&#34;&gt;#&lt;/a&gt; innerHTML、innerText、outerHTML 的区别？&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;innerHTML&lt;/strong&gt;：对象的起始位置到终止位置的全部内容，包括 Html 标签。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;innerText&lt;/strong&gt;  ：从起始位置到终止位置的内容，但它去除 Html 标签。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;outerHTML&lt;/strong&gt;：除了包含 innerHTML 的全部内容外，还包含对象标签本身。&lt;/p&gt;
&lt;h3 id=&#34;documenwrite-和-innerhtml-的区别&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#documenwrite-和-innerhtml-的区别&#34;&gt;#&lt;/a&gt; documen.write 和 innerHTML 的区别？&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;document.write 只能重绘整个页面；&lt;/li&gt;
&lt;li&gt;innerHTML 可以重绘页面的一部分；&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;typeof-与-instanceof-区别&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#typeof-与-instanceof-区别&#34;&gt;#&lt;/a&gt; typeof 与 instanceof 区别&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;typeof&lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	操作符返回一个字符串，表示未经计算的操作数的类型；&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;typeof&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// &#39;number&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;typeof&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;1&#39;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// &#39;string&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;typeof&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;undefined&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// &#39;undefined&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;typeof&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// &#39;boolean&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;typeof&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;Symbol&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// &#39;symbol&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;typeof&lt;/span&gt; console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;log &lt;span class=&#34;token comment&#34;&gt;// &#39;function&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;typeof&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// &#39;object&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;typeof&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// &#39;object&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;typeof&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// &#39;object&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;typeof&lt;/span&gt; console &lt;span class=&#34;token comment&#34;&gt;// &#39;object&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;如果我们想要判断一个变量是否存在，可以使用 &lt;code&gt;typeof&lt;/code&gt; ：&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;typeof&lt;/span&gt; a &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;undefined&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 变量存在&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt; &lt;code&gt;instanceof&lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	运算符用于检测构造函数的  &lt;code&gt;prototype&lt;/code&gt;  属性是否出现在某个实例对象的原型链上，即构造函数通过 &lt;code&gt;new&lt;/code&gt;  可以实例对象， &lt;code&gt;instanceof&lt;/code&gt;  能判断这个对象是否是之前那个构造函数生成的对象；&lt;/p&gt;
&lt;p&gt;实现原理：&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;myInstanceof&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;left&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; right&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 这里先用 typeof 来判断基础数据类型，如果是，直接返回 false&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;typeof&lt;/span&gt; left &lt;span class=&#34;token operator&#34;&gt;!==&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;object&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; left &lt;span class=&#34;token operator&#34;&gt;===&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;//getProtypeOf 是 Object 对象自带的 API，能够拿到参数的原型对象&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; proto &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Object&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getPrototypeOf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;left&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;                  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;proto &lt;span class=&#34;token operator&#34;&gt;===&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;proto &lt;span class=&#34;token operator&#34;&gt;===&lt;/span&gt; right&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;prototype&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 找到相同原型对象，返回 true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        proto &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Object&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getPrototypeof&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;proto&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;code&gt;typeof&lt;/code&gt;  与 &lt;code&gt;instanceof&lt;/code&gt;  都是判断数据类型的方法，区别如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;typeof&lt;/code&gt;  会返回一个变量的基本类型， &lt;code&gt;instanceof&lt;/code&gt;  返回的是一个布尔值&lt;/li&gt;
&lt;li&gt;&lt;code&gt;instanceof&lt;/code&gt;  可以准确地判断复杂引用数据类型，但是不能正确判断基础数据类型&lt;/li&gt;
&lt;li&gt;而 &lt;code&gt;typeof&lt;/code&gt;  也存在弊端，它虽然可以判断基础数据类型（ &lt;code&gt;null&lt;/code&gt;  除外），但是引用数据类型中，除了 &lt;code&gt;function&lt;/code&gt;  类型以外，其他的也无法判断&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果需要通用检测数据类型，可以采用 &lt;code&gt;Object.prototype.toString&lt;/code&gt; ，调用该方法，统一返回格式 &lt;code&gt;“[object Xxx]”&lt;/code&gt;  的字符串&lt;/p&gt;
&lt;h3 id=&#34;事件代理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#事件代理&#34;&gt;#&lt;/a&gt; 事件代理&lt;/h3&gt;
&lt;p&gt;适合事件委托的事件有： &lt;code&gt;click&lt;/code&gt; ， &lt;code&gt;mousedown&lt;/code&gt; ， &lt;code&gt;mouseup&lt;/code&gt; ， &lt;code&gt;keydown&lt;/code&gt; ， &lt;code&gt;keyup&lt;/code&gt; ， &lt;code&gt;keypress&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;从上面应用场景中，我们就可以看到使用事件委托存在两大优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;减少整个页面所需的内存，提升整体性能&lt;/li&gt;
&lt;li&gt;动态绑定，减少重复工作&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;但是使用事件委托也是存在局限性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;focus&lt;/code&gt; 、 &lt;code&gt;blur&lt;/code&gt;  这些事件没有事件冒泡机制，所以无法进行委托绑定事件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mousemove&lt;/code&gt; 、 &lt;code&gt;mouseout&lt;/code&gt;  这样的事件，虽然有事件冒泡，但是只能不断通过位置去计算定位，对性能消耗高，因此也是不适合于事件委托的&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;js的事件模型及其事件流&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#js的事件模型及其事件流&#34;&gt;#&lt;/a&gt; JS 的事件模型及其事件流&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;	javascript&lt;/code&gt;  中的事件，可以理解就是在 &lt;code&gt;HTML&lt;/code&gt;  文档或者浏览器中发生的一种交互操作，使得网页具备互动性， 常见的有加载事件、鼠标事件、自定义事件等&lt;/p&gt;
&lt;p&gt;​	由于 &lt;code&gt;DOM&lt;/code&gt;  是一个树结构，如果在父子节点绑定事件时候，当触发子节点的时候，就存在一个顺序问题，这就涉及到了事件流的概念&lt;/p&gt;
&lt;p&gt;事件流都会经历三个阶段：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;事件捕获阶段 (capture phase)&lt;/li&gt;
&lt;li&gt;处于目标阶段 (target phase)&lt;/li&gt;
&lt;li&gt;事件冒泡阶段 (bubbling phase)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20220113132252.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;事件模型：&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;事件模型可以分为三种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原始事件模型（DOM0 级）&lt;/li&gt;
&lt;li&gt;标准事件模型（DOM2 级）&lt;/li&gt;
&lt;li&gt;IE 事件模型（基本不用）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;原始事件模型&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;事件绑定监听函数比较简单，有两种方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;HTML 代码中直接绑定&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;input type&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;button&#34;&lt;/span&gt; onclick&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;fun()&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;通过 &lt;code&gt;JS&lt;/code&gt;  代码绑定&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; btn &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; document&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getElementById&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;.btn&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;btn&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;onclick &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; fun&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;特性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;绑定速度快&lt;/p&gt;
&lt;p&gt;&lt;code&gt;DOM0&lt;/code&gt;  级事件具有很好的跨浏览器优势，会以最快的速度绑定，但由于绑定速度太快，可能页面还未完全加载出来，以至于事件可能无法正常运行&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;只支持冒泡，不支持捕获&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;同一个类型的事件只能绑定一次&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;标准事件模型&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在该事件模型中，一次事件共有三个过程:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;事件捕获阶段：事件从 &lt;code&gt;document&lt;/code&gt;  一直向下传播到目标元素，依次检查经过的节点是否绑定了事件监听函数，如果有则执行&lt;/li&gt;
&lt;li&gt;事件处理阶段：事件到达目标元素，触发目标元素的监听函数&lt;/li&gt;
&lt;li&gt;事件冒泡阶段：事件从目标元素冒泡到 &lt;code&gt;document&lt;/code&gt; , 依次检查经过的节点是否绑定了事件监听函数，如果有则执行&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;btn&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;addEventListener&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;eventType&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; handler&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; useCapture&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;参数如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;eventType&lt;/code&gt;  指定事件类型 (不要加 on)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;handler&lt;/code&gt;  是事件处理函数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;useCapture&lt;/code&gt;  是一个 &lt;code&gt;boolean&lt;/code&gt;  用于指定是否在捕获阶段进行处理，一般设置为 &lt;code&gt;false&lt;/code&gt;  与 IE 浏览器保持一致&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;特性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可以在一个 &lt;code&gt;DOM&lt;/code&gt;  元素上绑定多个事件处理器，各自并不会冲突；&lt;/li&gt;
&lt;li&gt;执行时机可能选择。当第三个参数 ( &lt;code&gt;useCapture&lt;/code&gt; ) 设置为 &lt;code&gt;true&lt;/code&gt;  就在捕获过程中执行，反之在冒泡过程中执行处理函数；&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;btn&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;addEventListener&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;click&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;btn&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;box&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;addEventListener&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;click&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;box&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 设置为 true，则事件在捕获阶段执行，为 false 则在冒泡阶段执行。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;IE 事件模型&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;IE 事件模型共有两个过程:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;事件处理阶段：事件到达目标元素，触发目标元素的监听函数。&lt;/li&gt;
&lt;li&gt;事件冒泡阶段：事件从目标元素冒泡到 &lt;code&gt;document&lt;/code&gt; , 依次检查经过的节点是否绑定了事件监听函数，如果有则执行&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;请解释一下-javascript-的同源策略&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#请解释一下-javascript-的同源策略&#34;&gt;#&lt;/a&gt; 请解释一下 JavaScript 的同源策略？&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;概念：同源策略是客户端脚本（尤其是 Netscape Navigator2.0，其目的是防止某个文档或脚本从多个不同源装载。&lt;/li&gt;
&lt;li&gt;所谓 “同源” 指的是” 三个相同 “。&lt;strong&gt;相同的域名、端口和协议&lt;/strong&gt;，这三个相同的话就视为同一个域，本域下的 JS 脚本只能读写本域下的数据资源，无法访问其它域的资源。&lt;/li&gt;
&lt;li&gt;同源策略是一种安全协议，指一段脚本只能读取来自同一来源的窗口和文档的属性。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;同源策略的作用&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;无法用 js 读取非同源的 Cookie、LocalStorage 和 IndexDB：这个主要是为了防止恶意网站通过 js 获取用户其他网站的 cookie 等用户信息。&lt;/li&gt;
&lt;li&gt;无法用 js 获取非同源的 DOM：防止恶意网站通过 iframe 获取页面 dom，从而窃取页面的信息。&lt;/li&gt;
&lt;li&gt;无法用 js 发送非同源的 AJAX 请求：防止恶意的请求攻击服务器窃取数据信息。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;跨域问题的解决方案&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#跨域问题的解决方案&#34;&gt;#&lt;/a&gt; 跨域问题的解决方案&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;JSONP&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	创建一个 script 标签，将 src 改成我们要请求的接口，并将 script 添加在 body 中，那么当浏览器解析到这个 script 时，会想 src 对应的服务器发送一个 get 请求，并将参数带过去。&lt;br /&gt;
然后当浏览器接收到服务端返回的数据，就会触发参数中 callbak 对应的回调函数 cb，从而完成整个 get 请求。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; script &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; document&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;createElement&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;script&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;script&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;src &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;http://localhost:3000/api/test.do?a=1&amp;amp;b=2&amp;amp;callback=cb&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;body&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;script&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;cb&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// do something&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;res&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;只支持 get 请求&lt;/li&gt;
&lt;li&gt;需要后台配合，将返回结果包装成 callback (res) 的形式&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;cors&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	cors 是一个 W3C 标准，全称是 &amp;quot;跨域资源共享&amp;quot;（Cross-origin resource sharing），它允许浏览器向跨源服务器发送 XMLHttpRequest 请求，从而克服了 AJAX 只能同源使用的限制&lt;br /&gt;
 cors 需要浏览器和服务器同时支持，整个 CORS 通信过程，都是浏览器自动完成不需要用户参与，对于开发者来说，cors 的代码和正常的 ajax 没有什么差别，浏览器一旦发现跨域请求，就会添加一些附加的头信息。&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;请求方式只能是：GET、POST、HEAD&lt;/li&gt;
&lt;li&gt;HTTP 请求头限制这几种字段：Accept、Accept-Language、Content-Language、Content-Type、Last-Event-ID&lt;/li&gt;
&lt;li&gt;Content-type 只能取：application/x-www-form-urlencoded、multipart/form-data、text/plain&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;服务器反向代理&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	通过服务器的方向代理，将前端访问域名跟后端服务域名映射到同源的地址下，从而实现前端服务和后端服务的同源&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuemhpaHUuY29tL3NlYXJjaD90eXBlPWNvbnRlbnQmYW1wO3E9JUU4JUI3JUE4JUU1JTlGJTlGJUU5JTk3JUFFJUU5JUEyJTk4&#34;&gt;跨域问题&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;什么是执行上下文&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#什么是执行上下文&#34;&gt;#&lt;/a&gt; 什么是执行上下文？&lt;/h3&gt;
&lt;p&gt;简而言之，执行上下文就是当前 JavaScript 代码被解析和执行时所在环境的抽象概念， JavaScript 中运行任何的代码都是在执行上下文中运行。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;执行上下文的类型&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;执行上下文总共有三种类型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;全局执行上下文： 这是默认的、最基础的执行上下文。不在任何函数中的代码都位于全局执行上下文中。它做了两件事：1. 创建一个全局对象，在浏览器中这个全局对象就是 window 对象。2. 将 this 指针指向这个全局对象。一个程序中只能存在一个全局执行上下文。&lt;/li&gt;
&lt;li&gt;函数执行上下文： 每次调用函数时，都会为该函数创建一个新的执行上下文。每个函数都拥有自己的执行上下文，但是只有在函数被调用的时候才会被创建。&lt;/li&gt;
&lt;li&gt;Eval 函数执行上下文： 运行在 eval 函数中的代码也获得了自己的执行上下文。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;执行上下文的生命周期&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	执行上下文的生命周期包括三个阶段：创建阶段 → 执行阶段 → 回收阶段&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;创建阶段&lt;/p&gt;
&lt;p&gt;创建阶段即当函数被调用，但未执行任何其内部代码之前&lt;/p&gt;
&lt;p&gt;创建阶段做了三件事：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;确定 this 的值，也被称为  &lt;code&gt;This Binding&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;LexicalEnvironment（词法环境） 组件被创建&lt;/li&gt;
&lt;li&gt;VariableEnvironment（变量环境） 组件被创建&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;执行阶段&lt;/p&gt;
&lt;p&gt;在这阶段，执行变量赋值、代码执行&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;回收阶段&lt;/p&gt;
&lt;p&gt;执行上下文出栈等待虚拟机回收执行上下文&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;执行栈&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#执行栈&#34;&gt;#&lt;/a&gt; 执行栈&lt;/h3&gt;
&lt;p&gt;​	执行栈，也叫调用栈，具有 LIFO（后进先出）结构，用于存储在代码执行期间创建的所有执行上下文。&lt;/p&gt;
&lt;p&gt;​	当 &lt;code&gt;Javascript&lt;/code&gt;  引擎开始执行你第一行脚本代码的时候，它就会创建一个全局执行上下文然后将它压到执行栈中；&lt;/p&gt;
&lt;p&gt;每当引擎碰到一个函数的时候，它就会创建一个函数执行上下文，然后将这个执行上下文压到执行栈中；&lt;/p&gt;
&lt;p&gt;引擎会执行位于执行栈栈顶的执行上下文 (一般是函数执行上下文)，当该函数执行结束后，对应的执行上下文就会被弹出，然后控制流程到达执行栈的下一个执行上下文。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20220116214335.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;解决javascript-数字精度丢失的问题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#解决javascript-数字精度丢失的问题&#34;&gt;#&lt;/a&gt; 解决 Javascript 数字精度丢失的问题&lt;/h3&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;strip&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;num&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; precision &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;12&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;parseFloat&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;num&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toPrecision&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;precision&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;如何判断一个元素是否在可视区域中&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#如何判断一个元素是否在可视区域中&#34;&gt;#&lt;/a&gt; 如何判断一个元素是否在可视区域中&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWUzanMuY24vaW50ZXJ2aWV3L0phdmFTY3JpcHQvdmlzaWJsZS5odG1sIyVFNCVCOCU4MCVFMyU4MCU4MSVFNyU5NCVBOCVFOSU4MCU5NA==&#34;&gt;面试官：如何判断一个元素是否在可视区域中？ | web 前端面试 - 面试官系列 (vue3js.cn)&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;this的理解&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#this的理解&#34;&gt;#&lt;/a&gt; this 的理解&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;this 永远指向一个对象；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;this 的指向完全取决于函数调用的位置&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;根据不同的使用场合， &lt;code&gt;this&lt;/code&gt;  有不同的值，主要分为下面几种情况：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;默认绑定&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;隐式绑定&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;new 绑定&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;显示绑定&lt;/p&gt;
&lt;p&gt;其中：new 绑定优先级 &amp;gt; 显示绑定优先级 &amp;gt; 隐式绑定优先级 &amp;gt; 默认绑定优先级&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWUzanMuY24vaW50ZXJ2aWV3L0phdmFTY3JpcHQvdGhpcy5odG1sIyVFNCVCOCU4MCVFMyU4MCU4MSVFNSVBRSU5QSVFNCVCOSU4OQ==&#34;&gt;面试官：谈谈 this 对象的理解 | web 前端面试 - 面试官系列 (vue3js.cn)&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;promise解决的问题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#promise解决的问题&#34;&gt;#&lt;/a&gt; Promise 解决的问题&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8xMDA0MTY0MzI=&#34;&gt;Promise 到底解决了哪些问题？ - 知乎 (zhihu.com)&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;介绍一下闭包和闭包的常用场景&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#介绍一下闭包和闭包的常用场景&#34;&gt;#&lt;/a&gt; 介绍一下闭包和闭包的常用场景？&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;闭包是指有权访问另一个函数作用域中的变量的函数，创建闭包常见方式，就是在一个函数的内部创建另一个函数。&lt;/li&gt;
&lt;li&gt;使用闭包主要为了设计私有的方法和变量，闭包的优点是可以避免变量的污染，缺点是闭包会常驻内存，会增大内存使用量，使用不当很容易造成内存泄露。&lt;br /&gt;
在 js 中，函数即闭包，只有函数才会产生作用域的概念。&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;闭包有三个特性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;函数嵌套函数&lt;/li&gt;
&lt;li&gt;函数内部可以引用外部的参数和变量&lt;/li&gt;
&lt;li&gt;参数和变量不会被垃圾回收机制回收&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;应用场景：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;创建私有变量&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;makeSizer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    document&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;body&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;style&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fontSize &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; size &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;px&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; size12 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;makeSizer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; size14 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;makeSizer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;14&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; size16 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;makeSizer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;document&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getElementById&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;size-12&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;onclick &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; size12&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;document&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getElementById&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;size-14&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;onclick &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; size14&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;document&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getElementById&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;size-16&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;onclick &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; size16&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;延长变量的生命周期&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;不适用场景：返回闭包的函数是个非常大的函数&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;闭包的缺点就是常驻内存，会增大内存使用量，使用不当会造成内存泄漏&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;javascript的内存垃圾回收机制&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#javascript的内存垃圾回收机制&#34;&gt;#&lt;/a&gt; javascript 的内存 (垃圾) 回收机制？&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;垃圾回收器会每隔一段时间找出那些不再使用的内存，然后为其释放内存&lt;/li&gt;
&lt;li&gt;一般使用&lt;strong&gt;标记清除方法 (mark and sweep)&lt;/strong&gt;, 当变量进入环境标记为进入环境，离开环境标记为离开环境&lt;br /&gt;
垃圾回收器会在运行的时候给存储在内存中的所有变量加上标记，然后去掉环境中的变量以及被环境中变量所引用的变量（闭包），在这些完成之后仍存在标记的就是要删除的变量了&lt;/li&gt;
&lt;li&gt;还有&lt;strong&gt;引用计数方法 (reference counting)&lt;/strong&gt;, 在低版本 IE 中经常会出现内存泄露，很多时候就是因为其采用引用计数方式进行垃圾回收。引用计数的策略是跟踪记录每个值被使用的次数，当声明了一个 变量并将一个引用类型赋值给该变量的时候这个值的引用次数就加 1，如果该变量的值变成了另外一个，则这个值得引用次数减 1，当这个值的引用次数变为 0 的时 候，说明没有变量在使用，这个值没法被访问了，因此可以将其占用的空间回收，这样垃圾回收器会在运行的时候清理掉引用次数为 0 的值占用的空间。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;作用域链的理解&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#作用域链的理解&#34;&gt;#&lt;/a&gt; 作用域链的理解？&lt;/h3&gt;
&lt;p&gt;我们一般将作用域分成：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;全局作用域&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	任何不在函数中或是大括号中声明的变量，都是在全局作用域下，全局作用域下声明的变量可以在程序的任意位置访问&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;函数作用域&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	函数作用域也叫局部作用域，如果一个变量是在函数内部声明的它就在一个函数作用域下面。这些变量只能在函数内部访问，不能在函数以外去访问&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;块级作用域&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	ES6 引入了 &lt;code&gt;let&lt;/code&gt;  和 &lt;code&gt;const&lt;/code&gt;  关键字，和 &lt;code&gt;var&lt;/code&gt;  关键字不同，在大括号中使用 &lt;code&gt;let&lt;/code&gt;  和 &lt;code&gt;const&lt;/code&gt;  声明的变量存在于块级作用域中。在大括号之外不能访问这些变量&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;javascript原型原型链-有什么特点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#javascript原型原型链-有什么特点&#34;&gt;#&lt;/a&gt; JavaScript 原型，原型链？有什么特点？&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;JavaScript&lt;/code&gt;  常被描述为一种基于原型的语言 —— 每个对象拥有一个原型对象，即每个对象都会在其内部初始化一个属性，就是 proto；&lt;/li&gt;
&lt;li&gt;当我们访问一个对象的属性时，如果这个对象内部不存在这个属性，那么他就会去 prototype 里找这个属性，这个 prototype 又会有自己的 prototype，于是就这样一直找下去，也就是我们平时所说的原型链的概念；&lt;/li&gt;
&lt;li&gt;特点：&lt;br /&gt;
JavaScript 对象是通过引用来传递的，我们创建的每个新对象实体中并没有一份属于自己的原型副本。当我们修改原型时，与之相关的对象也会继承这一改变。&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;对象有属性__proto__，指向该对象的构造函数的原型对象；&lt;/li&gt;
&lt;li&gt;方法除了有属性__proto__，还有属性 prototype，prototype 指向该方法的原型对象；而它的__proto__通常指向 Function.prototype;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;总结：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;__proto__&lt;/code&gt; 作为不同对象之间的桥梁，用来指向创建它的构造函数的原型对象的：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20220116165843.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;举个例子：&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;Person&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;name &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; name&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;age &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;18&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function-variable function&#34;&gt;sayName&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 第二步 创建实例&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; person &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Person&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;person&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20220116165808.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一切对象都是继承自 &lt;code&gt;Object&lt;/code&gt;  对象， &lt;code&gt;Object&lt;/code&gt;  对象直接继承根源对象 &lt;code&gt;null&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;一切的函数对象（包括  &lt;code&gt;Object&lt;/code&gt;  对象），都是继承自  &lt;code&gt;Function&lt;/code&gt;  对象&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;js如何实现继承的&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#js如何实现继承的&#34;&gt;#&lt;/a&gt; JS 如何实现继承的？&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWUzanMuY24vaW50ZXJ2aWV3L0phdmFTY3JpcHQvaW5oZXJpdC5odG1sIyVFNCVCOCU4MCVFMyU4MCU4MSVFNiU5OCVBRiVFNCVCQiU4MCVFNCVCOSU4OA==&#34;&gt;面试官：Javascript 如何实现继承？ | web 前端面试 - 面试官系列 (vue3js.cn)&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;javascript和css是应该放在外部文件中呢还是把它们放在页面本身之内呢&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#javascript和css是应该放在外部文件中呢还是把它们放在页面本身之内呢&#34;&gt;#&lt;/a&gt; JavaScript 和 CSS 是应该放在外部文件中呢还是把它们放在页面本身之内呢？&lt;/h3&gt;
&lt;p&gt;​	放在外部文件中：浏览器会缓存这些文件，单页面也更小，用户访问多个网页的话外部文件可以复用；如果是访问频率不高且 JS 文件与 CSS 文件不太大的情况也可以考虑将其放入页面本身；&lt;/p&gt;
&lt;h3 id=&#34;queryselector与getelementby等的区别&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#queryselector与getelementby等的区别&#34;&gt;#&lt;/a&gt; querySelector 与 getElementBy 等的区别&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC8xYjE5MzYyNjY1NWU=&#34;&gt;querySelector 与 getElementBy 等的区别 - 简书 (jianshu.com)&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;vue篇&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vue篇&#34;&gt;#&lt;/a&gt; Vue 篇&lt;/h2&gt;
&lt;h3 id=&#34;谈谈你对mvvm开发模式的理解&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#谈谈你对mvvm开发模式的理解&#34;&gt;#&lt;/a&gt; 谈谈你对 MVVM 开发模式的理解？&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;MVVM 分为 Model、View、ViewModel 三者；&lt;/li&gt;
&lt;li&gt;Model 代表数据模型，数据和业务逻辑都在 Model 层中定义；&lt;/li&gt;
&lt;li&gt;View 代表 UI 视图，负责数据的展示；&lt;/li&gt;
&lt;li&gt;ViewModel 负责监听 Model 中数据的改变并且控制视图的更新，处理用户交互操作；&lt;/li&gt;
&lt;li&gt;Model 和 View 并无直接关联，而是通过 ViewModel 来进行联系的，Model 和 ViewModel 之间有着双向数据绑定的联系。因此当 Model 中的数据改变时会触发 View 层的刷新，View 中由于用户交互操作而改变的数据也会在 Model 中同步。&lt;/li&gt;
&lt;li&gt;这种模式实现了 Model 和 View 的数据自动同步，因此开发者只需要专注对数据的维护操作即可，而不需要自己亲自操作 dom。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;你对spa单页面的理解它的优缺点分别是什么如何实现spa应用呢&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#你对spa单页面的理解它的优缺点分别是什么如何实现spa应用呢&#34;&gt;#&lt;/a&gt; 你对 SPA 单页面的理解，它的优缺点分别是什么？如何实现 SPA 应用呢？&lt;/h3&gt;
&lt;p&gt;​	SPA（single-page application），翻译过来就是单页应用 &lt;code&gt;SPA&lt;/code&gt;  是一种网络应用程序或网站的模型，它通过动态重写当前页面来与用户交互，这种方法避免了页面之间切换打断用户体验在单页应用中，所有必要的代码（ &lt;code&gt;HTML&lt;/code&gt; 、 &lt;code&gt;JavaScript&lt;/code&gt;  和 &lt;code&gt;CSS&lt;/code&gt; ）都通过单个页面的加载而检索，或者根据需要（通常是为响应用户操作）动态装载适当的资源并添加到页面，页面在任何时间点都不会重新加载。熟知的 JS 框架如 &lt;code&gt;react&lt;/code&gt; , &lt;code&gt;vue&lt;/code&gt; , &lt;code&gt;angular&lt;/code&gt; , &lt;code&gt;ember&lt;/code&gt;  都属于 &lt;code&gt;SPA&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;​	SPA 主要是由一个主页面和多个页面片段构成，只需要通过局部刷新来跳转页面&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;单页应用优缺点&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;具有桌面应用的即时性、网站的可移植性和可访问性&lt;/li&gt;
&lt;li&gt;用户体验好、快，内容的改变不需要重新加载整个页面&lt;/li&gt;
&lt;li&gt;良好的前后端分离，分工更明确&lt;/li&gt;
&lt;li&gt;更容易传输数据&lt;/li&gt;
&lt;li&gt;成本更低&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;缺点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不利于搜索引擎的抓取&lt;/li&gt;
&lt;li&gt;首次渲染速度相对较慢&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;生命周期有哪些&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#生命周期有哪些&#34;&gt;#&lt;/a&gt; 生命周期有哪些？&lt;/h3&gt;
&lt;p&gt;Vue 生命周期总共可以分为 8 个阶段：创建前后，载入前后，更新前后，销毁前销毁后，以及一些特殊场景的生命周期&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;生命周期&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;beforeCreate&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;组件实例被创建之初，组件的属性生效之前&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;created&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;组件实例已经完全创建，属性也绑定，但真实 dom 还没有生成，$el 还不可用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;beforeMount&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;在挂载开始之前被调用：相关的 render 函数首次被调用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;mounted&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;el 被新创建的 vm.$el 替换，并挂载到实例上去之后调用该钩子&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;beforeUpdate&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;组件数据发生变化，发生在虚拟 DOM 打补丁之前&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;updated&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;组件数据更新之后&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;beforeDestroy&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;组件实例销毁之前&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;destroyed&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;组件实例销毁之后&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;activated&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;keep-alive 专属，组件被激活时调用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;deactivated&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;keep-alive 专属，组件被销毁时调用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;errorCaptured&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;捕获一个来自子孙组件的错误时被调用&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;v-if-和-v-show-有什么区别&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#v-if-和-v-show-有什么区别&#34;&gt;#&lt;/a&gt; v-if 和 v-show 有什么区别？&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;v-if 是真正的条件渲染，会控制这个 DOM 节点的存在与否。因为它会确保在切换过程中条件块内的事件监听器和子组件适当地被销毁和重建；也是惰性的：如果在初始渲染时条件为假，则什么也不做 —— 直到条件第一次变为真时，才会开始渲染条件块。&lt;/li&gt;
&lt;li&gt;v-show 就简单得多 —— 不管初始条件是什么，元素总是会被渲染，并且只是简单地基于 CSS 的 “display” 属性进行切换。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;你使用过-vuex-吗&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#你使用过-vuex-吗&#34;&gt;#&lt;/a&gt; 你使用过 Vuex 吗？&lt;/h3&gt;
&lt;p&gt;​	在 Vue 中实现集中式状态（数据）管理的一个 Vue 插件，对 vue 应用中多个组件的共享状态进行集中式的管理（读 / 写数据或方法），也是一种组件间通信的方式，且适用于任意组件间通信。&lt;/p&gt;
&lt;h3 id=&#34;computed-和-watch-的区别和运用的场景&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#computed-和-watch-的区别和运用的场景&#34;&gt;#&lt;/a&gt; computed 和 watch 的区别和运用的场景？&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;computed： 是计算属性，依赖其它属性值，并且 computed 的值有缓存，只有它依赖的属性值发生改变，下一次获取 computed 的值时才会重新计算 computed 的值；&lt;/li&gt;
&lt;li&gt;watch： 更多的是「观察」的作用，类似于某些数据的监听回调 ，每当监听的数据变化时都会执行回调进行后续操作；&lt;/li&gt;
&lt;li&gt;运用场景：
&lt;ul&gt;
&lt;li&gt;当我们需要进行数值计算，并且依赖于其它数据时，应该使用 computed，因为可以利用 computed 的缓存特性，避免每次获取值时，都要重新计算；&lt;/li&gt;
&lt;li&gt;当我们需要在数据变化时执行异步或开销较大的操作时，应该使用 watch，使用 watch 选项允许我们执行异步操作 (访问一个 API)，限制我们执行该操作的频率，并在我们得到最终结果前，设置中间状态。这些都是计算属性无法做到的。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;直接给一个数组项赋值vue-能检测到变化吗&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#直接给一个数组项赋值vue-能检测到变化吗&#34;&gt;#&lt;/a&gt; 直接给一个数组项赋值，Vue 能检测到变化吗？&lt;/h3&gt;
&lt;p&gt;由于 JavaScript 的限制，Vue 不能检测到以下数组的变动：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;当你利用索引直接设置一个数组项时，例如： &lt;code&gt;vm.items[indexOfItem] = newValue&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;当你修改数组的长度时，例如： &lt;code&gt;vm.items.length = newLength&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;为了解决第一个问题，Vue 提供了以下操作方法：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;// Vue.set
Vue.set(vm.items, indexOfItem, newValue)
// vm.$set，Vue.set的一个别名
vm.$set(vm.items, indexOfItem, newValue)
// Array.prototype.splice
vm.items.splice(indexOfItem, 1, newValue)
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;为了解决第二个问题，Vue 提供了以下操作方法：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;// Array.prototype.splice
vm.items.splice(newLength)
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;vue-的父组件和子组件生命周期钩子函数执行顺序&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vue-的父组件和子组件生命周期钩子函数执行顺序&#34;&gt;#&lt;/a&gt; Vue 的父组件和子组件生命周期钩子函数执行顺序？&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;加载渲染过程 :&lt;br /&gt;
 父 beforeCreate -&amp;gt; 父 created -&amp;gt; 父 beforeMount -&amp;gt; 子 beforeCreate -&amp;gt; 子 created -&amp;gt; 子 beforeMount -&amp;gt; 子 mounted -&amp;gt; 父 mounted&lt;/li&gt;
&lt;li&gt;子组件更新过程 :&lt;br /&gt;
 父 beforeUpdate -&amp;gt; 子 beforeUpdate -&amp;gt; 子 updated -&amp;gt; 父 updated&lt;/li&gt;
&lt;li&gt;父组件更新过程 :&lt;br /&gt;
 父 beforeUpdate -&amp;gt; 父 updated&lt;/li&gt;
&lt;li&gt;销毁过程 :&lt;br /&gt;
 父 beforeDestroy -&amp;gt; 子 beforeDestroy -&amp;gt; 子 destroyed -&amp;gt; 父 destroyed&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;组件中-data-为什么是一个函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#组件中-data-为什么是一个函数&#34;&gt;#&lt;/a&gt; 组件中 data 为什么是一个函数？&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;因为组件是用来复用的，且 JS 里对象是引用关系，如果组件中 data 是一个对象，那么这样作用域没有隔离，子组件中的 data 属性值会相互影响，&lt;/li&gt;
&lt;li&gt;如果组件中 data 选项是一个函数，那么每个实例可以维护一份被返回对象的独立的拷贝，组件实例之间的 data 属性值不会互相影响；而 new Vue 的实例，是不会被复用的，因此不存在引用对象的问题。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;v-model-的原理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#v-model-的原理&#34;&gt;#&lt;/a&gt; v-model 的原理？&lt;/h3&gt;
&lt;p&gt;我们在 vue 项目中主要使用 v-model 指令在表单 input、textarea、select 等元素上创建双向数据绑定，我们知道 v-model 本质上不过是语法糖，v-model 在内部为不同的输入元素使用不同的属性并抛出不同的事件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;text 和 textarea 元素使用 value 属性和 input 事件；&lt;/li&gt;
&lt;li&gt;checkbox 和 radio 使用 checked 属性和 change 事件；&lt;/li&gt;
&lt;li&gt;select 字段将 value 作为 prop 并将 change 作为事件。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;vue-组件间通信有哪几种方式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vue-组件间通信有哪几种方式&#34;&gt;#&lt;/a&gt; Vue 组件间通信有哪几种方式？&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;props&lt;/code&gt; / &lt;code&gt;$emit&lt;/code&gt;  (父传子 / 子传父)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$emit&lt;/code&gt; / &lt;code&gt;$on&lt;/code&gt; （全局事件总线）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vuex&lt;/code&gt;  (实现集中式状态（数据）管理的插件)&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;vue中组件和插件有什么区别&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vue中组件和插件有什么区别&#34;&gt;#&lt;/a&gt; Vue 中组件和插件有什么区别？&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;组件：&lt;/strong&gt; 组件就是把图形、非图形的各种逻辑均抽象为一个统一的概念（组件）来实现开发的模式，在 &lt;code&gt;Vue&lt;/code&gt;  中每一个 &lt;code&gt;.vue&lt;/code&gt;  文件都可以视为一个组件。&lt;/p&gt;
&lt;p&gt;优势：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;降低整个系统的耦合度（系统各部分的相互依赖程度）；&lt;/li&gt;
&lt;li&gt;调试方便，方便快速定位问题所在；&lt;/li&gt;
&lt;li&gt;提高可维护性；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;插件：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;添加全局方法或者属性。如:  &lt;code&gt;vue-custom-element&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;添加全局资源：指令 / 过滤器 / 过渡等。如  &lt;code&gt;vue-touch&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;通过全局混入来添加一些组件选项。如 &lt;code&gt;vue-router&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;添加  &lt;code&gt;Vue&lt;/code&gt;  实例方法，通过把它们添加到  &lt;code&gt;Vue.prototype&lt;/code&gt;  上实现。&lt;/li&gt;
&lt;li&gt;一个库，提供自己的  &lt;code&gt;API&lt;/code&gt; ，同时提供上面提到的一个或多个功能。如 &lt;code&gt;vue-router&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;总结：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;组件  &lt;code&gt;(Component)&lt;/code&gt;  是用来构成你的  &lt;code&gt;App&lt;/code&gt;  的业务模块，它的目标是  &lt;code&gt;App.vue&lt;/code&gt; ；&lt;/p&gt;
&lt;p&gt;插件  &lt;code&gt;(Plugin)&lt;/code&gt;  是用来增强你的技术栈的功能模块，它的目标是  &lt;code&gt;Vue&lt;/code&gt;  本身，简单来说，插件就是指对 &lt;code&gt;Vue&lt;/code&gt;  的功能的增强或补充；&lt;/p&gt;
&lt;h3 id=&#34;vue的响应式原理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vue的响应式原理&#34;&gt;#&lt;/a&gt; VUE 的响应式原理&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;D:%5CMarkdown%5Clocal_image%5Cdata.png&#34; alt=&#34;data&#34; /&gt;&lt;/p&gt;
&lt;p&gt;** 定义：** 响应式指的是组件 data 的数据一旦变化，立刻触发视图的更新。它是实现数据驱动视图的第一步，也是 Vue 的双向绑定中从 data 到 view 的过程。&lt;/p&gt;
&lt;p&gt;** 监听 data 变化的核心 API：**Vue 实现响应式的一个核心 API 是  &lt;code&gt;Object.defineProperty&lt;/code&gt; 。该方法会直接在一个对象上定义一个新属性，或者修改一个对象的现有属性，并返回此对象。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如何监听 data 变化：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;共定义了三个函数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;updateView：模拟 Vue 更新视图的入口函数。&lt;/li&gt;
&lt;li&gt;defineReactive：对数据进行监听的具体实现。&lt;/li&gt;
&lt;li&gt;observer：调用该函数后，可对目标对象进行监听，将目标对象编程响应式的。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;简而言之：&lt;strong&gt;利用的是&lt;/strong&gt; Object.defineProperty&lt;/strong&gt; 进行的数据劫持，再结合与发布订阅者模式，通过监听器 &lt;code&gt;Observer&lt;/code&gt;  监听数据的变化，在数据变动时通知订阅者 &lt;code&gt;watcher&lt;/code&gt;  进行的数据更新；&lt;/p&gt;
&lt;p&gt;** 详细点说：** 当你把一个普通的 JavaScript 对象传入 Vue 实例作为  &lt;code&gt;data&lt;/code&gt;  选项，Vue 将遍历此对象所有的 property，并使用 &lt;a href=&#34;https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty&#34;&gt; &lt;code&gt;Object.defineProperty&lt;/code&gt; &lt;/a&gt; 把这些 property 全部转为 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvSmF2YVNjcmlwdC9HdWlkZS9Xb3JraW5nX3dpdGhfT2JqZWN0cyMlRTUlQUUlOUElRTQlQjklODlfZ2V0dGVyc18lRTQlQjglOEVfc2V0dGVycw==&#34;&gt;getter/setter&lt;/span&gt;。 &lt;code&gt;Object.defineProperty&lt;/code&gt;  是 ES5 中一个无法 shim 的特性，这也就是 Vue 不支持 IE8 以及更低版本浏览器的原因。&lt;/p&gt;
&lt;p&gt;这些 getter/setter 对用户来说是不可见的，但是在内部它们让 Vue 能够追踪依赖，在 property 被访问和修改时通知变更。&lt;/p&gt;
&lt;p&gt;每个组件实例都对应一个 &lt;strong&gt;watcher&lt;/strong&gt; 实例，它会在组件渲染的过程中把 “接触” 过的数据 property 记录为依赖。之后当依赖项的 setter 触发时，会通知 watcher，从而使它关联的组件重新渲染。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;由于 JavaScript 的限制，Vue 不能检测数组和对象的变化，所以：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;对于对象：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Vue 无法检测 property 的添加或移除。由于 Vue 会在初始化实例时对 property 执行 getter/setter 转化，所以 property 必须在  &lt;code&gt;data&lt;/code&gt;  对象上存在才能让 Vue 将它转换为响应式的。例如：&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; vm &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Vue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  data&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    a&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// `vm.a` 是响应式的&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;vm&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;b &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// `vm.b` 是非响应式的&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;对于已经创建的实例，Vue 不允许动态添加根级别的响应式 property。但是，可以使用  &lt;code&gt;Vue.set(object, propertyName, value)&lt;/code&gt;  方法向嵌套对象添加响应式 property。例如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Vue.set(vm.someObject, &#39;b&#39;, 2)
this.$set(this.someObject,&#39;b&#39;,2)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;有时你可能需要为已有对象赋值多个新 property，比如使用  &lt;code&gt;Object.assign()&lt;/code&gt;  或  &lt;code&gt;_.extend()&lt;/code&gt; 。但是，这样添加到对象上的新 property 不会触发更新。在这种情况下，你应该用原对象与要混合进去的对象的 property 一起创建一个新的对象。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 代替 `Object.assign (this.someObject, &amp;#123; a: 1, b: 2&amp;#125;)`&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;someObject &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Object&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;assign&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;someObject&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; a&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; b&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;对于数组：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Vue 不能检测以下数组的变动：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;当你利用索引直接设置一个数组项时，例如： &lt;code&gt;vm.items[indexOfItem] = newValue&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;当你修改数组的长度时，例如： &lt;code&gt;vm.items.length = newLength&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;两种解决方法：&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Vue.set&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Vue&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;vm&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;items&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; indexOfItem&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; newValue&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Array.prototype.splice&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;vm&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;items&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;splice&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;indexOfItem&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; newValue&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;路由懒加载&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#路由懒加载&#34;&gt;#&lt;/a&gt; 路由懒加载&lt;/h3&gt;
&lt;p&gt;​	懒加载本质是延迟加载或按需加载，即在需要的时候的时候进行加载。首页不用设置懒加载，一个页面加载过后再次访问不会重复加载。&lt;/p&gt;
&lt;p&gt;为什么要进行路由懒加载？&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;当进行打包构建应用时，打包后的代码逻辑实现包可能会非常大。当用户要去使用的时候，那么就会把所有的资源都请求下来才可以。&lt;/li&gt;
&lt;li&gt;当我们把不同的路由对应的组件分别打包，在路由被访问时再进行加载，就会更加高效。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;路由懒加载所做的事情：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将路由对应的组件加载成一个个对应的 js 包 。&lt;/li&gt;
&lt;li&gt;在路由被访问时才将对应的组件加载。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;实现方法：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;h3 id=&#34;对于-vue30-特性你有什么了解的吗&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#对于-vue30-特性你有什么了解的吗&#34;&gt;#&lt;/a&gt; 对于 vue3.0 特性你有什么了解的吗？&lt;/h3&gt;
&lt;h2 id=&#34;打包工具&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#打包工具&#34;&gt;#&lt;/a&gt; 打包工具&lt;/h2&gt;
&lt;h3 id=&#34;webpack&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#webpack&#34;&gt;#&lt;/a&gt; webpack&lt;/h3&gt;
&lt;h4 id=&#34;构建流程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#构建流程&#34;&gt;#&lt;/a&gt; 构建流程&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;D:%5CMarkdown%5Clocal_image%5Cf435cdbce99c4d6d809e8a7a44fa4c47.png&#34; alt=&#34;img&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;理解&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#理解&#34;&gt;#&lt;/a&gt; 理解&lt;/h3&gt;
&lt;p&gt;​	  &lt;code&gt;webpack&lt;/code&gt;  是一个打包模块化 js 的工具，在 &lt;code&gt;webpack&lt;/code&gt;  里一切文件皆模块，通过 &lt;code&gt;loader&lt;/code&gt;  转换文件，通过 &lt;code&gt;plugin&lt;/code&gt;  注入钩子，最后输出由多个模块组合成的文件， &lt;code&gt;webpack&lt;/code&gt;  专注构建模块化项目。&lt;/p&gt;
&lt;p&gt;​	 &lt;code&gt;webPack&lt;/code&gt;  可以看做是模块的打包机器：它做的事情是，分析你的项目结构，找到 js 模块以及其它的一些浏览器不能直接运行的拓展语言，例如：Scss，TS 等，并将其打包为合适的格式以供浏览器使用。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzczNDYwMjc4L2FydGljbGUvZGV0YWlscy8xMjY2NjQ2ODM/c3BtPTEwMDEuMjEwMS4zMDAxLjY2NjEuMSZhbXA7dXRtX21lZGl1bT1kaXN0cmlidXRlLnBjX3JlbGV2YW50X3QwLm5vbmUtdGFzay1ibG9nLTJ+ZGVmYXVsdH5DVFJMSVNUflJhdGUtMS0xMjY2NjQ2ODMtYmxvZy0xMTExMzg5MjUucGNfcmVsZXZhbnRfbXVsdGlfcGxhdGZvcm1fd2hpdGVsaXN0djMmYW1wO2RlcHRoXzEtdXRtX3NvdXJjZT1kaXN0cmlidXRlLnBjX3JlbGV2YW50X3QwLm5vbmUtdGFzay1ibG9nLTJ+ZGVmYXVsdH5DVFJMSVNUflJhdGUtMS0xMjY2NjQ2ODMtYmxvZy0xMTExMzg5MjUucGNfcmVsZXZhbnRfbXVsdGlfcGxhdGZvcm1fd2hpdGVsaXN0djMmYW1wO3V0bV9yZWxldmFudF9pbmRleD0x&#34;&gt;(2 条消息) webpack 的面试题（吐血整理）_行走的前端小白菜的博客 - CSDN 博客_前端 webpack 面试题&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDQ3NTA5My9hcnRpY2xlL2RldGFpbHMvMTE2MjEzODM0&#34;&gt;(2 条消息) 面试官：说说 webpack 的构建流程？_动感超人，的博客 - CSDN 博客&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;flutter&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#flutter&#34;&gt;#&lt;/a&gt; Flutter&lt;/h2&gt;
&lt;h3 id=&#34;flutter的优点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#flutter的优点&#34;&gt;#&lt;/a&gt; Flutter 的优点&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Flutter 是一个跨平台的框架，而且跨平台的难度不高，且相比于其它众多基于 html 的跨平台框架相比，Flutter 的性能与构建思路几乎最接近原生开发；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;性能强大，流畅：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Flutter 对比 weex 和 react native 相比，性能的强大是有目共睹的。基于 dom 树渲染原生组件，很难与直接在原生视图上绘图比肩性能，Google 作为一个轮子大厂，直接在两个平台上重写了各自的 UIKit，对接到平台底层，减少 UI 层的多层转换，UI 性能可以比肩原生，这个优势在&lt;strong&gt;滑动&lt;/strong&gt;和&lt;strong&gt;播放动画&lt;/strong&gt;时尤为明显。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;路由设计优秀：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Flutter 的路由传值非常方便，push 一个路由，会返回一个 Future 对象（也就是 Promise 对象），使用 await 或者.then 就可以在目标路由 pop，回到当前页面时收到返回值。这个反向传值的设计基本是甩了微信小程序一条街了。弹出 dialog 等一些操作也是使用的路由方法，几乎不用担心出现传值困难。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;网络协议篇&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#网络协议篇&#34;&gt;#&lt;/a&gt; 网络协议篇&lt;/h2&gt;
&lt;h3 id=&#34;tcp-传输的三次握手-四次挥手策略&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#tcp-传输的三次握手-四次挥手策略&#34;&gt;#&lt;/a&gt; TCP 传输的三次握手、四次挥手策略&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;三次握手：&lt;/p&gt;
&lt;p&gt;为了准确无误地吧数据送达目标处，TCP 协议采用了三次握手策略。用 TCP 协议把数据包送出去后，TCP 不会对传送后的情况置之不理，他一定会向对方确认是否送达，握手过程中使用 TCP 的标志：SYN 和 ACK&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;发送端首先发送一个带 SYN 的标志的数据包给对方&lt;/li&gt;
&lt;li&gt;接收端收到后，回传一个带有 SYN/ACK 标志的数据包以示传达确认信息&lt;/li&gt;
&lt;li&gt;最后，发送端再回传一个带 ACK 的标志的数据包，代表 “握手” 结束&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如在握手过程中某个阶段莫明中断，TCP 协议会再次以相同的顺序发送相同的数据包&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;ul&gt;
&lt;li&gt;断开一个 TCP 连接需要 “四次挥手”
&lt;ul&gt;
&lt;li&gt;第一次挥手：主动关闭方发送一个 FIN，用来关注主动方到被动关闭方的数据传送，也即是主动关闭方告诫被动关闭方：我已经不会再给你发数据了（在 FIN 包之前发送的数据，如果没有收到对应的 ACK 确认报文，主动关闭方依然会重发这些数据）。但是，此时主动关闭方还可以接受数据&lt;/li&gt;
&lt;li&gt;第二次挥手：被动关闭方收到 FIN 包后，发送一个 ACK 给对方，确认序号收到序号 +1（与 SYN 相同，一个 FIN 占用一个序号）&lt;/li&gt;
&lt;li&gt;第三次挥手：被动关闭方发送一个 FIN。用来关闭被动关闭方到主动关闭方的数据传送，也就是告诉主动关闭方，我的数据也发送完了，不会给你发送数据了&lt;/li&gt;
&lt;li&gt;第四次挥手：主动关闭方收到 FIN 后，发送一个 ACK 给被动关闭方，确认序号为收到序号 + 1，至此，完成四次挥手&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;为什么是三次握手而不是两次？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	有这样一种情况，当 A 发送一个消息给 B，但是由于网络原因，消息被阻塞在了某个节点，然后阻塞的时间超出设定的时间，A 会认为这个消息丢失了，然后重新发送消息。当 A 和 B 通信完成后，这个被 A 认为失效的消息，到达了 B。对于 B 而言，以为这是一个新的请求链接消息，就向 A 发送确认，但对于 A 而言，它认为没有给 B 再次发送消息（因为上次的通话已经结束）所有 A 不会理睬 B 的这个确认，但是 B 则会一直等待 A 的消息。所以有了三次握手的修订，第三次握手看似多余其实不然，这主要是为了防止已失效的请求报文段突然又传送到了服务端而产生连接的误判。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;为什么不是三次挥手而是四次？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	当收到对方的 FIN 报文时，仅表示对方不再发送数据但还能接收收据，我们也未必把全部数据都发给了对方，所以我们可以立即 close，也可以发送一些数据给对方后，再发送 FIN 报文给对方表示同意关闭连接。因此我们的 ACK 和 FIN 一般会分开发送，因此多了一次。&lt;/p&gt;
&lt;h3 id=&#34;http协议的理解&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#http协议的理解&#34;&gt;#&lt;/a&gt; HTTP 协议的理解&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC80NTE3Mzg2Mg==&#34;&gt;深入理解 HTTP 协议 - 知乎 (zhihu.com)&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;http常见的状态码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#http常见的状态码&#34;&gt;#&lt;/a&gt; HTTP 常见的状态码？&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;1xx （临时响应）&lt;/li&gt;
&lt;li&gt;100 Continue 继续，一般在发送 post 请求时，已发送了 http header 之后服务端将返回此信息，表示确认，之后发送具体参数信息。&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;li&gt;2xx （成功)&lt;/li&gt;
&lt;li&gt;200 OK 正常返回信息&lt;/li&gt;
&lt;li&gt;201 Created 请求成功并且服务器创建了新的资源&lt;/li&gt;
&lt;li&gt;202 Accepted 服务器已接受请求，但尚未处理。&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;li&gt;3xx （重定向） 要完成请求，需要进一步操作。&lt;/li&gt;
&lt;li&gt;301 Moved Permanently 请求的网页已永久移动到新位置。&lt;/li&gt;
&lt;li&gt;302 Found 临时性重定向，请求的网页暂时被移动到了新位置。&lt;/li&gt;
&lt;li&gt;303 See Other 临时性重定向，请求的资源在其它的 URl 上，且总是使用 GET 请求新的 URI。&lt;/li&gt;
&lt;li&gt;304 Not Modified 自从上次请求后，请求的网页未修改过。&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;li&gt;4xx （请求错误）&lt;/li&gt;
&lt;li&gt;400 Bad Request 服务器无法理解请求的格式。&lt;/li&gt;
&lt;li&gt;401 Unauthorized 应该用来表示缺失或错误的认证。&lt;/li&gt;
&lt;li&gt;403 Forbidden 权限不够而禁止访问。&lt;/li&gt;
&lt;li&gt;404 Not Found 找不到如何与 URI 相匹配的资源。&lt;/li&gt;
&lt;li&gt;406 Not Acceptable 表示客户端无法解析服务端返回的内容.&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;li&gt;5xx （服务器错误）&lt;/li&gt;
&lt;li&gt;500 Internal Server Error 最常见的服务器端错误。&lt;/li&gt;
&lt;li&gt;503 Service Unavailable 服务器端暂时无法处理请求（可能是过载或维护）。&lt;/li&gt;
&lt;li&gt;504 网关超时&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;http-和-https为什么https安全&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#http-和-https为什么https安全&#34;&gt;#&lt;/a&gt; HTTP 和 HTTPS，为什么 HTTPS 安全？&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;HTTP 协议通常承载与 TCP 协议之上，在 HTTP 和 TCP 之间添加一个安全协议层（SSL 或 TSL），这个时候，就成了我们常说的 HTTPS&lt;/li&gt;
&lt;li&gt;默认 HTTP 的端口号为 80，HTTPS 的端口号为 443&lt;/li&gt;
&lt;li&gt;因为网络请求需要中间有很多的服务器路由的转发，中间的节点都可能篡改信息，而如果使用 HTTPS，密钥在你和终点站才有，https 之所有说比 http 安全，是因为他利用 ssl/tls 协议传输。包含证书，流量转发，负载均衡，页面适配，浏览器适配，refer 传递等，保障了传输过程的安全性&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;http协议下常用的7种请求方法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#http协议下常用的7种请求方法&#34;&gt;#&lt;/a&gt; HTTP 协议下常用的 7 种请求方法&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;GET&lt;/strong&gt;：发出请求从服务器获取一份文档；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HEAD&lt;/strong&gt;：同 GET 但只从服务器获取文档的首部；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;POST&lt;/strong&gt;：向服务器发送带要处理的数据，并可以接收处理过后的数据；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PUT&lt;/strong&gt;：将请求的主体部分存储在服务器上；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;TRACE&lt;/strong&gt;：对可能经过代理服务器传送到服务器上去的报文进行追踪；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;OPTIONS&lt;/strong&gt;：请求 Web 服务器告知其支持的各种功能；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DELETE&lt;/strong&gt;：从服务器上删除一份文档；&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;tcp与udp的区别&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#tcp与udp的区别&#34;&gt;#&lt;/a&gt; TCP 与 UDP 的区别？&lt;/h3&gt;
&lt;p&gt;TCP (Transmission Control Protocol) 和 UDP (User Datagram Protocol) 协议属于传输层协议，它们之间的区别包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;TCP 是面向连接的，UDP 是无连接的；&lt;/li&gt;
&lt;li&gt;TCP 是可靠的，UDP 是不可靠的；&lt;/li&gt;
&lt;li&gt;TCP 只支持点对点通信，UDP 支持一对一、一对多、多对一、多对多的通信模式；&lt;/li&gt;
&lt;li&gt;TCP 是面向字节流的，UDP 是面向报文的；&lt;/li&gt;
&lt;li&gt;TCP 有拥塞控制机制；UDP 没有拥塞控制，适合媒体通信；&lt;/li&gt;
&lt;li&gt;TCP 首部开销 (20 个字节) 比 UDP 的首部开销 (8 个字节) 要大；&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;什么是-http-协议无状态协议怎么解决http协议无状态协议&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#什么是-http-协议无状态协议怎么解决http协议无状态协议&#34;&gt;#&lt;/a&gt; 什么是 HTTP 协议无状态协议？怎么解决 Http 协议无状态协议？&lt;/h3&gt;
&lt;p&gt;HTTP 是一个无状态的协议，也就是没有记忆力，这意味着每一次的请求都是独立的，缺少状态意味着如果后续处理需要前面的信息，则它必须要重传，这样可能导致每次连接传送的数据量增大。另一方面，在服务器不需要先前信息时它的应答就很快。&lt;/p&gt;
&lt;p&gt;HTTP 的这种特性有优点也有缺点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;优点&lt;/strong&gt;：解放了服务器，每一次的请求 “点到为止”，不会造成不必要的连接占用&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;缺点&lt;/strong&gt;：每次请求会传输大量重复的内容信息，并且，在请求之间无法实现数据的共享&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;解决方案：使用 Cookie 技术&lt;/p&gt;
&lt;h3 id=&#34;osi-网络体系结构与-tcpip-协议模型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#osi-网络体系结构与-tcpip-协议模型&#34;&gt;#&lt;/a&gt; OSI 网络体系结构与 TCP/IP 协议模型&lt;/h3&gt;
&lt;p&gt;​	OSI 是一个理论上的网络通信模型，而 TCP/IP 则是实际上的网络通信标准。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211228204916.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;前端安全&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#前端安全&#34;&gt;#&lt;/a&gt; 前端安全&lt;/h2&gt;
&lt;h3 id=&#34;xss&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#xss&#34;&gt;#&lt;/a&gt; XSS&lt;/h3&gt;
&lt;p&gt;​	跨站脚本攻击，缩写为 XSS (Cross Site Scripting)，是利用网页的漏洞，通过某种方式给网页注入恶意代码，使用户加载网页时执行注入的恶意代码。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;三种攻击方式：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;非持久性跨站（反射型）&lt;/li&gt;
&lt;li&gt;持久性跨站（存储型）&lt;/li&gt;
&lt;li&gt;DOM 跨站&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;mark&gt;非持久跨站&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;​	攻击步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;攻击者构造出特殊的  &lt;code&gt;URL&lt;/code&gt;  ，其中包含恶意代码。&lt;/li&gt;
&lt;li&gt;用户打开带有恶意代码的  &lt;code&gt;URL&lt;/code&gt;  时，网站服务端将恶意代码从  &lt;code&gt;URL&lt;/code&gt;  中取出，拼接在 &lt;code&gt;HTML&lt;/code&gt;  中返回给浏览器。&lt;/li&gt;
&lt;li&gt;用户浏览器接收到响应后解析执行，混在其中的恶意代码也被执行。&lt;/li&gt;
&lt;li&gt;恶意代码窃取用户数据并发送到攻击者的网站，或者冒充用户的行为，调用目标网站接口执行攻击者指定的操作。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;mark&gt;持久性跨站&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;​	攻击步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;攻击者将&lt;strong&gt;恶意代码&lt;/strong&gt;提交到目标网站的数据库中。&lt;/li&gt;
&lt;li&gt;用户打开目标网站时，网站服务端将恶意代码从数据库取出，拼接在 &lt;code&gt;HTML&lt;/code&gt;  中返回给浏览器。&lt;/li&gt;
&lt;li&gt;用户浏览器接收到响应后解析执行，混在其中的恶意代码也被执行。&lt;/li&gt;
&lt;li&gt;恶意代码窃取用户数据并发送到攻击者的网站，或者冒充用户的行为，调用&lt;strong&gt;目标网站接口&lt;/strong&gt;执行攻击者指定的操作。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;mark&gt;DOM 跨站&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;​	攻击步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;攻击者构造出特殊的  &lt;code&gt;URL&lt;/code&gt;  ，其中包含恶意代码。&lt;/li&gt;
&lt;li&gt;用户打开带有恶意代码的  &lt;code&gt;URL&lt;/code&gt;  。&lt;/li&gt;
&lt;li&gt;用户浏览器接收到响应后解析执行，前端  &lt;code&gt;JavaScript&lt;/code&gt;  取出  &lt;code&gt;URL&lt;/code&gt;  中的恶意代码并执行。&lt;/li&gt;
&lt;li&gt;恶意代码窃取用户数据并发送到攻击者的网站，或者冒充用户的行为，调用目标网站接口执行攻击者指定的操作。&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;区别：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;反射型跟存储型的区别是：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;存储型 XSS 的恶意代码存在数据库里，反射型 XSS 的恶意代码存在 URL 里。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;DOM 型跟前两种区别是：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;DOM 型 XSS 攻击中，取出和执行恶意代码由&lt;strong&gt;浏览器端&lt;/strong&gt;完成，属于前端 JavaScript 自身的安全漏洞，而其他两种 XSS 都属于&lt;strong&gt;服务端&lt;/strong&gt;的安全漏洞。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;防御 XSS：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;设置 &lt;code&gt;HttpOnly&lt;/code&gt; ，让客户端脚本无法读取到 cookie 信息；&lt;/li&gt;
&lt;li&gt;转义字符串；&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;sql-注入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sql-注入&#34;&gt;#&lt;/a&gt; SQL 注入&lt;/h3&gt;
&lt;p&gt;​	SQL 注入就是通过把 SQL 命令插入到 Web 表单提交或输入域名或页面请求的查询字符串，最终达到欺骗服务器执行恶意的 SQL 命令。&lt;/p&gt;
&lt;h2 id=&#34;git篇&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#git篇&#34;&gt;#&lt;/a&gt; Git 篇&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://nc3021.github.io/2021/11/25/hybrid-learning/Git/&#34;&gt;Git 使用说明 - 杂学 | Sakura = Course Of Growth (nc3021.github.io)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;D:%5CMarkdown%5Clocal_image%5Cv2-024f245887c2ac566c40e4685699d89b_720w.jpg&#34; alt=&#34;img&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;什么是git&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#什么是git&#34;&gt;#&lt;/a&gt; 什么是 Git？&lt;/h3&gt;
&lt;p&gt;​	Git 是分布式版本控制系统（DVCS）。它可以跟踪文件的更改，并允许你恢复到任何特定版本的更改。&lt;/p&gt;
&lt;h3 id=&#34;git-是用什么语言编写的&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#git-是用什么语言编写的&#34;&gt;#&lt;/a&gt; Git 是用什么语言编写的？&lt;/h3&gt;
&lt;p&gt;​	Git 使用 C 语言编写。 GIT 很快，C 语言通过减少运行时的开销来做到这一点。&lt;/p&gt;
&lt;h3 id=&#34;git-pull-和-git-fetch-有什么区别&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#git-pull-和-git-fetch-有什么区别&#34;&gt;#&lt;/a&gt; git pull 和 git fetch 有什么区别？&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;git pull&lt;/strong&gt; 命令从中央存储库中提取特定分支的新更改或提交，并更新本地存储库中的目标分支。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;git fetch&lt;/strong&gt; 也用于相同的目的，但它的工作方式略有不同。当你执行 git fetch 时，它会从所需的分支中提取所有新提交，并将其存储在本地存储库中的新分支中。如果要在目标分支中反映这些更改，必须在 git fetch 之后执行 git merge。只有在对目标分支和获取的分支进行合并后才会更新目标分支。&lt;/p&gt;
&lt;h3 id=&#34;什么是-git-stash&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#什么是-git-stash&#34;&gt;#&lt;/a&gt; 什么是 git stash?&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;git stash&lt;/strong&gt; 会将你的工作目录，即修改后的跟踪文件和暂存的更改保存在一堆未完成的更改中，你可以随时重新应用这些更改。&lt;/p&gt;
&lt;h3 id=&#34;什么时候使用git-rebase代替git-merge&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#什么时候使用git-rebase代替git-merge&#34;&gt;#&lt;/a&gt; 什么时候使用 git rebase 代替 git merge？&lt;/h3&gt;
&lt;p&gt;使用变基时，意味着使用另一个分支作为集成修改的新基础。一般只有在完全自信且为了使历史分支记录更为清晰的时候使用。&lt;/p&gt;
&lt;h3 id=&#34;提交时发生冲突你能解释冲突是如何产生的吗你是如何解决的&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#提交时发生冲突你能解释冲突是如何产生的吗你是如何解决的&#34;&gt;#&lt;/a&gt; 提交时发生冲突，你能解释冲突是如何产生的吗？你是如何解决的？&lt;/h3&gt;
&lt;p&gt;​	开发过程中，我们都有自己的特性分支，所以冲突发生的并不多，但也碰到过。诸如公共类的公共方法，我和别人同时修改同一个文件，他提交后我再提交就会报冲突的错误。&lt;br /&gt;
发生冲突，在 IDE 里面一般都是对比本地文件和远程分支的文件，然后把远程分支上文件的内容手工修改到本地文件，然后再提交冲突的文件使其保证与远程分支的文件一致，这样才会消除冲突，然后再提交自己修改的部分。&lt;br /&gt;
​	发生冲突，也可以使用命令：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通过 git stash 命令，把工作区的修改提交到栈区，目的是保存工作区的修改；&lt;/li&gt;
&lt;li&gt;通过 git pull 命令，拉取远程分支上的代码并合并到本地分支，目的是消除冲突；&lt;/li&gt;
&lt;li&gt;通过 git stash pop 命令，把保存在栈区的修改部分合并到最新的工作空间中；&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;git-如何撤销-commit-git-commit-提交之后如何取消本次提交&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#git-如何撤销-commit-git-commit-提交之后如何取消本次提交&#34;&gt;#&lt;/a&gt; git 如何撤销 commit、git commit 提交之后如何取消本次提交？&lt;/h3&gt;
&lt;p&gt;可以先用 git reflog 查看历史提交记录&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;软撤销 --soft&lt;/strong&gt;&lt;br /&gt;
 本地代码不会变化，只是 git 转改会恢复为 commit 之前的状态&lt;/p&gt;
&lt;p&gt;不删除工作空间改动代码，撤销 commit，不撤销 git add .&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git reset --soft HEAD~1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;表示撤销最后一次的 commit ，1 可以换成其他更早的数字&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;硬撤销&lt;/strong&gt;&lt;br /&gt;
本地代码会直接变更为指定的提交版本，慎用&lt;/p&gt;
&lt;p&gt;删除工作空间改动代码，撤销 commit，撤销 git add .&lt;/p&gt;
&lt;p&gt;注意完成这个操作后，就恢复到了上一次的 commit 状态。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git reset --hard HEAD~1
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;使用过git-cherry-pick有什么作用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#使用过git-cherry-pick有什么作用&#34;&gt;#&lt;/a&gt; 使用过 git cherry-pick，有什么作用？&lt;/h3&gt;
&lt;p&gt;​	命令 git cherry-pick 可以把 branch A 的 commit 复制到 branch B 上。&lt;/p&gt;
&lt;p&gt;​	在 branch B 上进行命令操作：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git cherry-pick commitId
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;git-与svn的区别&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#git-与svn的区别&#34;&gt;#&lt;/a&gt; Git 与 SVN 的区别？&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTE1MTk2MC9hcnRpY2xlL2RldGFpbHMvMTA0NzIwNjU0&#34;&gt;(2 条消息) SVN 和 Git 介绍，区别，优缺点以及适用范围_想养一只！的博客 - CSDN 博客_svn 和 git&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;前端杂项篇&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#前端杂项篇&#34;&gt;#&lt;/a&gt; 前端杂项篇&lt;/h2&gt;
&lt;h3 id=&#34;常见的浏览器内核有哪些&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#常见的浏览器内核有哪些&#34;&gt;#&lt;/a&gt; 常见的浏览器内核有哪些&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;浏览器内核主要分成两部分：渲染引擎 (layout engineer 或 Rendering Engine) 和 JS 引擎。
&lt;ul&gt;
&lt;li&gt;渲染引擎：负责取得网页的内容（HTML、XML、图像等等）、整理讯息（例如加入 CSS 等），以及计算网页的显示方式，然后会输出至显示器或打印机。浏览器的内核的不同对于网页的语法解释会有不同，所以渲染的效果也不相同。所有网页浏览器、电子邮件客户端以及其它需要编辑、显示网络内容的应用程序都需要内核。&lt;/li&gt;
&lt;li&gt;JS 引擎则：解析和执行 javascript 来实现网页的动态效果。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;常见内核：
&lt;ul&gt;
&lt;li&gt;Trident 内核：IE, MaxThon, TT, The World, 360, 搜狗浏览器等。[又称 MSHTML]&lt;/li&gt;
&lt;li&gt;Gecko 内核：FireFox&lt;/li&gt;
&lt;li&gt;Webkit 内核：Safari, Chrome 等。 [Chrome 的：Blink（WebKit 的分支）]&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;网页前端性能优化的方式有哪些&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#网页前端性能优化的方式有哪些&#34;&gt;#&lt;/a&gt; 网页前端性能优化的方式有哪些？&lt;/h3&gt;
&lt;p&gt;​	&lt;strong&gt;WEB 前端性能优化的方向有两个：一是从用户角度，优化能够让页面加载得更快，对用户的操作响应更快；二是从服务商角度，优化能够减少页面请求数或者减少请求所占带宽，节省资源&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;尽可能合并 css、js 文件，减少 http 请求次数 ；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;压缩 css, js 文件；&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211228135208.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;尽可能将 JS 文件与 CSS 文件放在 HTML 文档外部，这样浏览器会缓存相应文件，从而减小请求次数，使单页面更小，也能加快使用相应文件的页面加载速度，用户访问多个网页的话外部文件可以复用；如果是访问频率不高且 JS 文件与 CSS 文件不太大的情况也可以考虑将其放入页面本身；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果 JS 文件与 CSS 文件在文档内部的话，需要将样式表置顶、脚本置低（在 header 中通过 link 引入 css 文件）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;加载并发数是有上限的，js 和 css 混合放置，会导致 css 的延迟，会导致页面闪动，所以 js 要置底&lt;/li&gt;
&lt;li&gt;css 放在 header 中，阻塞页面的渲染，css 加载完，再加载 dom，放置页面样式跳变，从而保证渲染一步到位&lt;/li&gt;
&lt;li&gt;css 不会阻塞后面 js 并发加载，但会阻塞 js 的执行。如果 js 放在 header 中，会阻塞 html 的渲染。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;减少 cookie 体积，减少 HTTP 请求头的大小；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;浏览器缓存，减少 HTTP 请求；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;图片懒加载；&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211228134934.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;IntersectionObserver&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;优化图片大小，尽可能使用压缩图片；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;合并图片（雪碧图 / 精灵图）；&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211228135609.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;减少 dom 元素数量；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;预加载和延迟加载内容；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用 CDN&lt;/p&gt;
&lt;p&gt;内容分发网络（CDN）是位于不同地理位置的服务器组成的网络。每个服务器都拥有所有网站的文件副本。当用户请求文件和网页时，就可以直接从就近的网站服务器获取相应资源（也可以是从负载最小的服务器）。你可以使用&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2F3cy5hbWF6b24uY29tL2Nsb3VkZnJvbnQv&#34;&gt; Amazon cloud front &lt;/span&gt;或者&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cubWF4Y2RuLmNvbS8=&#34;&gt; MaxCDN&lt;/span&gt; 为网站开启 CDN 加速。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;避免使用 CSS 表达式；&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vcHV5b25nc29uZy9wLzU5Njg5MzUuaHRtbA==&#34;&gt;网站性能优化 - webNick - 博客园 (cnblogs.com)&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;sessionstorage-localstorage-和-cookie-之间的区别&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sessionstorage-localstorage-和-cookie-之间的区别&#34;&gt;#&lt;/a&gt; sessionStorage 、localStorage 和 cookie 之间的区别？&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;共同点：都是保存在浏览器端，且同源的。&lt;/li&gt;
&lt;li&gt;区别：
&lt;ol&gt;
&lt;li&gt;cookie 数据始终在同源的 http 请求中携带（即使不需要），即 cookie 在浏览器和服务器间来回传递。而 sessionStorage 和 localStorage 不会自动把数据发给服务器，仅在本地保存。&lt;/li&gt;
&lt;li&gt;存储大小限制也不同，cookie 数据不能超过 4k；sessionStorage 和 localStorage 虽然也有存储大小的限制，但比 cookie 大得多，可以达到 5M 或更大。&lt;/li&gt;
&lt;li&gt;数据有效期不同，sessionStorage：仅在当前浏览器窗口关闭前有效，自然也就不可能持久保持；localStorage：始终有效，窗口或浏览器关闭也一直保存，因此用作持久数据；cookie 只在设置的 cookie 过期时间之前一直有效，即使窗口或浏览器关闭。&lt;/li&gt;
&lt;li&gt;作用域不同，sessionStorage 不在不同的浏览器窗口中共享，即使是同一个页面；localStorage 在所有同源窗口中都是共享的；cookie 也是在所有同源窗口中都是共享的。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20220113221719.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;在cssjs代码上线之后开发人员经常会优化性能从用户刷新网页开始一次js请求一般情况下有哪些地方会有缓存处理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#在cssjs代码上线之后开发人员经常会优化性能从用户刷新网页开始一次js请求一般情况下有哪些地方会有缓存处理&#34;&gt;#&lt;/a&gt; 在 css/js 代码上线之后开发人员经常会优化性能，从用户刷新网页开始，一次 js 请求一般情况下有哪些地方会有缓存处理？&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;DNS 缓存&lt;/p&gt;
&lt;p&gt;全称 Domain Name System , 即域名系统&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CDN 缓存&lt;/p&gt;
&lt;p&gt;全称 Content Delivery Network, 即内容分发网络（缓存服务器）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;浏览器缓存&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;服务器缓存&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;网页从输入网址到渲染完成经历了哪些过程与协议&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#网页从输入网址到渲染完成经历了哪些过程与协议&#34;&gt;#&lt;/a&gt; 网页从输入网址到渲染完成经历了哪些过程与协议？&lt;/h3&gt;
&lt;p&gt;大致可以分为如下 7 步：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;输入网址；&lt;/li&gt;
&lt;li&gt;发送到 DNS 服务器，并获取域名对应的 web 服务器对应的真实 ip 地址；&lt;/li&gt;
&lt;li&gt;与 web 服务器建立 TCP 连接；&lt;/li&gt;
&lt;li&gt;浏览器向 web 服务器发送 http 请求；&lt;/li&gt;
&lt;li&gt;web 服务器响应请求，并返回指定 url 的数据（或错误信息，或重定向的新的 url 地址）；&lt;/li&gt;
&lt;li&gt;浏览器下载 web 服务器返回的数据及解析 html 源文件；&lt;/li&gt;
&lt;li&gt;生成 DOM 树，解析 css 和 js，渲染页面，直至显示完成；&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;DNS 域名解析协议；&lt;/li&gt;
&lt;li&gt;ip 地址与 TCP 连接使用了 IP 协议（IP 地址，数据切片成 IP 数据包，广播规则）；&lt;/li&gt;
&lt;li&gt;发送请求一般使用 HTTP 或 HTTPS 协议；&lt;/li&gt;
&lt;li&gt;ARP&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;浏览器的渲染原理和过程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#浏览器的渲染原理和过程&#34;&gt;#&lt;/a&gt; 浏览器的渲染原理和过程&lt;/h3&gt;
&lt;p&gt;浏览器渲染的过程主要包括以下五步：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;浏览器将获取的 HTML 文档解析成 DOM 树；&lt;/li&gt;
&lt;li&gt;处理 CSS 标记，构成层叠样式表模型 CSSOM (CSS Object Model)；&lt;/li&gt;
&lt;li&gt;将 DOM 和 CSSOM 合并为渲染树 ( &lt;code&gt;rendering tree&lt;/code&gt; )，代表一系列将被渲染的对象；&lt;/li&gt;
&lt;li&gt;渲染树的每个元素包含的内容都是计算过的，它被称之为布局 &lt;code&gt;layout&lt;/code&gt; 。浏览器使用一种流式处理的方法，只需要一次绘制操作就可以布局所有的元素；&lt;/li&gt;
&lt;li&gt;将渲染树的各个节点绘制到屏幕上，这一步被称为绘制 &lt;code&gt;painting&lt;/code&gt; 。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20220112195009.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;具体流程：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;构建 DOM 树：&lt;/p&gt;
&lt;p&gt;​	当浏览器接收到服务器响应来的 HTML 文档后，会遍历文档节点，生成 DOM 树。&lt;/p&gt;
&lt;p&gt;备注：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;DOM 树在构建的过程中可能会被 CSS 和 JS 的加载而执行阻塞&lt;/li&gt;
&lt;li&gt;&lt;code&gt;display:none&lt;/code&gt;  的元素也会在 DOM 树中&lt;/li&gt;
&lt;li&gt;注释也会在 DOM 树中&lt;/li&gt;
&lt;li&gt;&lt;code&gt;script&lt;/code&gt;  标签会在 DOM 树中&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;构建 CSSOM 规则树:&lt;/p&gt;
&lt;p&gt;​	浏览器解析 CSS 文件并生成 CSSOM，每个 CSS 文件都被分析成一个 StyleSheet 对象，每个对象都包含 CSS 规则。CSS 规则对象包含对应于 CSS 语法的选择器和声明对象以及其他对象。&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;CSS 解析可以与 DOM 解析同时进行。&lt;/li&gt;
&lt;li&gt;CSS 解析与 &lt;code&gt;script&lt;/code&gt;  的执行互斥 。&lt;/li&gt;
&lt;li&gt;在 Webkit 内核中进行了 &lt;code&gt;script&lt;/code&gt;  执行优化，只有在 JS 访问 CSS 时才会发生互斥。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;构建渲染树（Render Tree）:&lt;/p&gt;
&lt;p&gt;​	通过 DOM 树和 CSS 规则树，浏览器就可以通过它两构建渲染树了。浏览器会先从 DOM 树的根节点开始遍历每个可见节点，然后对每个可见节点找到适配的 CSS 样式规则并应用。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20220112195539.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;备注：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Render Tree 和 DOM Tree 不完全对应&lt;/li&gt;
&lt;li&gt;&lt;code&gt;display: none&lt;/code&gt;  的元素不在 Render Tree 中&lt;/li&gt;
&lt;li&gt;&lt;code&gt;visibility: hidden&lt;/code&gt;  的元素在 Render Tree 中&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;渲染树布局 (layout of the render tree):&lt;/p&gt;
&lt;p&gt;​	布局阶段会从渲染树的根节点开始遍历，由于渲染树的每个节点都是一个 Render Object 对象，包含宽高，位置，背景色等样式信息。所以浏览器就可以通过这些样式信息来确定每个节点对象在页面上的确切大小和位置，布局阶段的输出就是我们常说的盒子模型，它会精确地捕获每个元素在屏幕内的确切位置与大小。&lt;/p&gt;
&lt;p&gt;备注：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;float&lt;/code&gt;  元素， &lt;code&gt;absoulte&lt;/code&gt;  元素， &lt;code&gt;fixed&lt;/code&gt;  元素会发生位置偏移。&lt;/li&gt;
&lt;li&gt;我们常说的脱离文档流，其实就是脱离 Render Tree。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;更多请见：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC9lNjI1MmRjOWJlMzI=&#34;&gt;浏览器渲染原理与过程 - 简书 (jianshu.com)&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;cookie的设置以及在响应报文的位置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#cookie的设置以及在响应报文的位置&#34;&gt;#&lt;/a&gt; Cookie 的设置以及在响应报文的位置&lt;/h3&gt;
&lt;p&gt;cookie 信息位于 headers 的 set-cookie 字段。有多少个 cookie 信息加入就有多少个 set-cookie 字段。客户端接收到 cookie 后就将 cookie 存储在本地固定位置。&lt;/p&gt;
&lt;h3 id=&#34;浏览器缓存机制&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#浏览器缓存机制&#34;&gt;#&lt;/a&gt; 浏览器缓存机制&lt;/h3&gt;
&lt;p&gt;浏览器缓存机制有四个方面，它们按照获取资源时请求的优先级依次排列如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Memory Cache（Disk Cache）&lt;/li&gt;
&lt;li&gt;Service Worker Cache&lt;/li&gt;
&lt;li&gt;HTTP Cache&lt;/li&gt;
&lt;li&gt;Push Cache&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Memory Cache&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	MemoryCache，指的是存在内存中的缓存。从优先级上看，它是浏览器最先尝试去命中的一种缓存。从效率上看，它是响应速度最快的一种缓存。内存缓存是快的，也是 “短命” 的。它和渲染进程相关的，当进程结束后，也就是 tab 关闭以后，内存里的数据也将不复存在。&lt;/p&gt;
&lt;p&gt;​	Base64 格式的图片，几乎永远可以被塞进 memory cache，这可以视作浏览器为节省渲染开销的 “自保行为”；此外，体积不大的 JS、CSS 文件，也有较大地被写入内存几率 —— 相比之下，较大的 JS、CSS 文件就没有这个待遇了，内存资源是有限的，它们往往被直接甩进磁盘（Disk Cache）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Service Worker Cache&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	Service Worker 是一种独立于主线程之外的 JavaScript 线程。它脱离于浏览器窗体，因此无法直接访问 DOM。这样独立的个性使得 Service Worker 的 “个人行为” 无法干扰页面的性能，这个 “幕后工作者” 可以帮我们实现离线缓存、消息推送和网络代理等功能。我们借助 Service worker 实现的离线缓存就称为 Service Worker Cache。&lt;/p&gt;
&lt;p&gt;​	Service Worker 的生命周期包括 install、active、working 三个阶段。一旦 Service Worker 被 install，它将始终存在，只会在 active 与 working 之间切换，除非我们主动终止它。这是它可以用来实现离线存储的重要先决条件。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Push Cache&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Push Cache 是指 HTTP2 在 server push 阶段存在的缓存。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Push Cache 是缓存的最后一道防线。浏览器只有在 Memory Cache、HTTP Cache 和 Service Worker Cache 均为命中的情况下才会去询问 Push Cache。&lt;/li&gt;
&lt;li&gt;Push Cache 是一种存在于会话阶段的缓存，当 session 终止时，缓存也随之释放。&lt;/li&gt;
&lt;li&gt;不同的页面只要共享了同一个 HTTP2 连接，那么它们就可以共享同一个 Push Cache。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;HTTP Cache&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	浏览器缓存分为&lt;strong&gt;强缓存&lt;/strong&gt;和&lt;strong&gt;协商缓存&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;强制缓存：&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;​	代表在已缓存的资源未失效（未过期）的情况下，不会向服务器发送请求，会直接从资源池中读取资源。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;D:%5CMarkdown%5Clocal_image%5Cv2-ac020aa46a7afc9f7872dee288c8eee9_720w.png&#34; alt=&#34;img&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;缓存规则&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;​	对于强制缓存而言，响应头中有两个字段标明了它的缓存规则，一个是 Expires，另一个是 Cache - Control。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Expires&lt;/code&gt; ：Expires 的值包含具体的日期和时间，是服务器返回的资源到期时间，即在此时间之前，可以直接从资源池中读取资源，无需再次请求服务器。&lt;/p&gt;
&lt;figure class=&#34;highlight http&#34;&gt;&lt;figcaption data-lang=&#34;HTTP&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token header-name keyword&#34;&gt;Expires:&lt;/span&gt; Wed, 31 Jul 2019 02:58:24 GMT&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;code&gt;Cache-Control&lt;/code&gt; ：Cache-Control 可以被用于请求和响应头中，组合使用多种指令来指定缓存机制。下面列举了比较常用的指令：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;private：资源只可以被客户端缓存，Cache-Control 的默认值。&lt;/li&gt;
&lt;li&gt;public：资源可以被客户端和代理服务器缓存。&lt;/li&gt;
&lt;li&gt;max-age=t：客户端缓存的资源将在 t 秒后失效，但是会走协商缓存。&lt;/li&gt;
&lt;li&gt;no-cache：跳过强缓存，需要使用协商缓存来验证资源&lt;/li&gt;
&lt;li&gt;no-store：不缓存任何资源。&lt;/li&gt;
&lt;li&gt;s-maxAge：覆盖 &lt;code&gt;max-age&lt;/code&gt;  或者 &lt;code&gt;Expires&lt;/code&gt;  头，但是仅适用于共享缓存 (比如各个代理)，私有缓存会忽略它。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;强制缓存的弊端&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	强制缓存的判定标准，主要依据来自于是否超出某个时间或某个时间段，而不关心服务器端资源是否已经更新，这可能会导致加载的资源早已不是服务器最新的内容。&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;协商缓存&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;​	针对强制缓存的弊端，协商缓存需要进行资源对比判断是否可以使用缓存。客户端第一次请求资源时，服务器会将缓存标识与资源一起返回给客户端，客户端将二者备份至资源池中。当再次请求相同资源时（此时，强制缓存过期，缓存资源还在），客户端将备份的缓存标识发送给服务器，服务器根据缓存标识进行验证，如果验证结果为未更新，服务器会返回 304，通知客户端可以继续使用缓存资源。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;协商缓存的优先级低于强制缓存，因此只有在强制缓存失效后，客户端才会携带缓存标识向服务器发起请求。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;D:%5CMarkdown%5Clocal_image%5Cv2-1edb2c3182b87a54734bde62cd737e14_720w.png&#34; alt=&#34;img&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;缓存规则：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Last-Modified/If-Modified-Since&lt;/code&gt; ：当我们第一次发出请求时，Last-Modified 由服务器返回，通知客户端，该资源的最后修改时间。当我们再次请求该资源时，If-Modified-Since 由客户端发送，其保存了 Last-Modified 的值。服务器收到请求后，将 If-Modified-Since 的值与被请求资源的最后修改时间进行比对。若资源的最后修改时间大于 If-Modified-Since 的值，说明资源被修改过，则返回状态码 200 以及最新资源；若资源的最后修改时间小于或等于 If-Modified-Since 的值，说明资源无修改，则返回状态码 304，通知客户端继续使用缓存资源。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ETag/If-None-Match&lt;/code&gt; ：当我们第一次发出请求时，ETag 由服务器返回，其值为该资源的标签。当我们再次请求该资源时，If-None-Match 由客户端发送，其保存了 ETag 的值。服务器收到请求后，将 If-None-Match 的值与被请求资源的标签进行比对。若资源的标签不等于 If-None-Match 的值，说明资源被修改过，则返回状态码 200 以及最新资源；若资源的标签等于 If-None-Match 的值，说明资源无修改，则返回状态码 304，通知客户端继续使用缓存资源。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ETag / If-None-Match 组合的优先级高于 Last-Modified / If-Modified-Since 组合。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;ETag 会出现的原因：&lt;/p&gt;
&lt;p&gt;​	因为 Last-Modified 标注的最后修改只能精确到秒级，如果某些文件在 1 秒钟以内被多次修改的话，它将不能准确标注文件的修改时间。也要考虑到，一些文件也许会周期性的更改，但是它的内容并不改变，仅仅改变的修改时间，这时候用 Last-Modified/If-Modified-Since 就不是很合适了。** 但是注意，大厂一般都不怎么用 Etag。** 因为大厂多使用负载分担的方式来调度 HTTP 请求。因此，同一个客户端对同一个页面的多次请求，很可能被分配到不同的服务器来响应，而根据 ETag 的计算原理，不同的服务器，有可能在资源内容没有变化的情况下，计算出不一样的 Etag，而使得缓存失效。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;备注：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;当用户 Ctrl + F5 强制刷新网页时，浏览器直接从服务器加载，跳过强缓存和协商缓存&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;当用户仅仅敲击 F5 刷新网页时，跳过强缓存，但是仍然会进行协商缓存过程&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果该资源文件被强制缓存起来了，并且缓存时间还未过期时，如何判断该文件是否已经被修改了呢？也就是此时的文件是否是最新的我们不得而知。在 HTTP 规范里面并没有解决这个问题的方案。&lt;/p&gt;
&lt;p&gt;答：通过不缓存 html，为静态文件添加 MD5 或者 hash 标识，解决浏览器无法跳过缓存过期时间主动感知文件变化的问题。因为加上了 hash 标识，使得每次请求时的路径名不完全相等，也就不能够直接拿本地缓存了，进而去找协商缓存，从而访问服务器。当然加 hash 标识这一步，现在可以用打包工具来实现。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;其它杂项&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#其它杂项&#34;&gt;#&lt;/a&gt; 其它杂项&lt;/h2&gt;
&lt;h3 id=&#34;线程与进程的联系与区别&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#线程与进程的联系与区别&#34;&gt;#&lt;/a&gt; 线程与进程的联系与区别？&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;进程：程序在执行过程中分配和管理资源的基本单位，是资源分配的最小单位，并拥有自己的独立地址空间；&lt;/li&gt;
&lt;li&gt;线程：线程是进程中执行运算的最小单位，是进程中的一个实体，是被系统独立调度和分派的基本单位，线程自己不拥有系统资源，只拥有一点在运行中必不可少的资源，但它可与同属一个进程的其它线程共享进程所拥有的全部资源。一个线程可以创建和撤消另一个线程，同一进程中的多个线程之间可以并发执行；&lt;/li&gt;
&lt;li&gt;进程和线程的关系：
&lt;ul&gt;
&lt;li&gt;一个线程只能属于一个进程，而一个进程可以有多个线程，但至少有一个线程。&lt;/li&gt;
&lt;li&gt;资源分配给进程，同一进程的所有线程共享该进程的所有资源。&lt;/li&gt;
&lt;li&gt;处理机分给线程，即真正在处理机上运行的是线程。&lt;/li&gt;
&lt;li&gt;线程在执行过程中，需要协作同步。不同进程的线程间要利用消息通信的办法实现同步。线程是指进程内的一个执行单元，也是进程内的可调度实体.&lt;/li&gt;
&lt;li&gt;线程作为调度和分配的基本单位，进程作为拥有资源的基本单位&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;什么是关系型数据库&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#什么是关系型数据库&#34;&gt;#&lt;/a&gt; 什么是关系型数据库？&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;关系型数据库是依据关系模型来创建的数据库；&lt;/li&gt;
&lt;li&gt;所谓关系模型就是 “一对一、一对多、多对多” 等关系模型，关系模型就是指二维表格模型，因而一个关系型数据库就是由二维表及其之间的联系组成的一个数据组织；&lt;/li&gt;
&lt;li&gt;关系型数据可以很好地存储一些关系模型的数据，比如多个老师对应多个学生的数据（“多对多”），一本书对应多个作者（“一对多”），一本书对应一个出版日期（“一对一”）；&lt;/li&gt;
&lt;li&gt;关系模型包括数据结构（数据存储的问题，二维表）、操作指令集合（SQL 语句）、完整性约束 (表内数据约束、表与表之间的约束)；&lt;/li&gt;
&lt;li&gt;容易理解（建立在关系模型上），但不节省空间（因为建立在关系模型上，就要遵循某些规则，好比数据中某字段值即使为空仍要分配空间）；&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;什么是事务事务四大特性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#什么是事务事务四大特性&#34;&gt;#&lt;/a&gt; 什么是事务？事务四大特性？&lt;/h3&gt;
&lt;p&gt;​	事务是对数据库中一系列操作进行统一的回滚或者提交的操作，主要用来保证数据的完整性和一致性。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;原子性（Atomicity）:&lt;/strong&gt;&lt;br /&gt;
 原子性是指事务包含的所有操作要么全部成功，要么全部失败回滚，因此事务的操作如果成功就必须要完全应用到数据库，如果操作失败则不能对数据库有任何影响。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;一致性（Consistency）:&lt;/strong&gt;&lt;br /&gt;
 事务开始前和结束后，数据库的完整性约束没有被破坏。比如 A 向 B 转账，不可能 A 扣了钱，B 却没收到。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;隔离性（Isolation）:&lt;/strong&gt;&lt;br /&gt;
 隔离性是当多个用户并发访问数据库时，比如操作同一张表时，数据库为每一个用户开启的事务，不能被其他事务的操作所干扰，多个并发事务之间要相互隔离。同一时间，只允许一个事务请求同一数据，不同的事务之间彼此没有任何干扰。比如 A 正在从一张银行卡中取钱，在 A 取钱的过程结束前，B 不能向这张卡转账。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;持久性（Durability）:&lt;/strong&gt;&lt;br /&gt;
 持久性是指一个事务一旦被提交了，那么对数据库中的数据的改变就是永久性的，即便是在数据库系统遇到故障的情况下也不会丢失提交事务的操作。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;事务的并发问题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#事务的并发问题&#34;&gt;#&lt;/a&gt; 事务的并发问题？&lt;/h3&gt;
&lt;h3 id=&#34;数据库语言&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据库语言&#34;&gt;#&lt;/a&gt; 数据库语言&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;SQL 语言共分为四大类：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;数据查询语言 DQL&lt;/li&gt;
&lt;li&gt;数据操纵语言 DML&lt;/li&gt;
&lt;li&gt;数据定义语言 DDL&lt;/li&gt;
&lt;li&gt;数据控制语言 DCL。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;1. 数据查询语言 DQL&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;数据查询语言 DQL 基本结构是由 SELECT 子句，FROM 子句，WHERE 子句组成的查询块：&lt;/p&gt;
&lt;p&gt;SELECT&lt;br /&gt;
FROM&lt;br /&gt;
WHERE&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2 . 数据操纵语言 DML&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;数据操纵语言 DML 主要有三种形式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;插入：INSERT&lt;/li&gt;
&lt;li&gt;更新：UPDATE&lt;/li&gt;
&lt;li&gt;删除：DELETE&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;3. 数据定义语言 DDL&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;数据定义语言 DDL 用来创建数据库中的各种对象 ----- 表、视图、索引、同义词、聚簇等如：&lt;br /&gt;
CREATE TABLE/VIEW/INDEX/SYN/CLUSTER&lt;/p&gt;
&lt;p&gt;表 视图 索引 同义词 簇&lt;/p&gt;
&lt;p&gt;DDL 操作是隐性提交的！不能 rollback&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. 数据控制语言 DCL&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;数据控制语言 DCL 用来授予或回收访问数据库的某种特权，并控制数据库操纵事务发生的时间及效果，对数据库实行监视等。如：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;GRANT：授权。&lt;/li&gt;
&lt;li&gt;ROLLBACK [WORK] TO [SAVEPOINT]：回退到某一点。回滚 ---ROLLBACK；回滚命令使数据库状态回到上次最后提交的状态。其格式为：&lt;br /&gt;
SQL&amp;gt;ROLLBACK;&lt;/li&gt;
&lt;li&gt;COMMIT [WORK]：提交。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;事务的隔离级别&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#事务的隔离级别&#34;&gt;#&lt;/a&gt; 事务的隔离级别&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;第一种隔离级别：Read uncommitted (读未提交)&lt;/strong&gt;&lt;br /&gt;
 如果一个事务已经开始写数据，则另外一个事务不允许同时进行写操作，但允许其他事务读此行数据。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;解决了更新丢失，但还是可能会出现脏读&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;第二种隔离级别：Read committed (读提交)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	如果是一个读事务 (线程)，则允许其他事务读写，如果是写事务将会禁止其他事务访问该行数据。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;解决了更新丢失和脏读问题&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;第三种隔离级别：Repeatable read (可重复读取)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	可重复读取是指在一个事务内，多次读同一个数据，在这个事务还没结束时，其他事务不能访问该数据 (包括了读写)，这样就可以在同一个事务内两次读到的数据是一样的，因此称为是可重复读隔离级别，读取数据的事务将会禁止写事务 (但允许读事务)，写事务则禁止任何其他事务 (包括了读写)。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;解决了更新丢失、脏读、不可重复读、但是还会出现幻读&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;第四种隔离级别：Serializable (可序化)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	提供严格的事务隔离，它要求事务序列化执行，事务只能一个接着一个地执行，但不能并发执行。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;解决了更新丢失、脏读、不可重复读、幻读 (虚读)&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211228170325.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;事务的并发问题&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;**1、脏读：** 事务 A 读取了事务 B 更新的数据，然后 B 回滚操作，那么 A 读取到的数据是脏数据&lt;/p&gt;
&lt;p&gt;**2、不可重复读：** 事务 A 多次读取同一数据，事务 B 在事务 A 多次读取的过程中，对数据作了更新并提交，导致事务 A 多次读取同一数据时，结果因此本事务先后两次读到的数据结果会不一致。&lt;/p&gt;
&lt;p&gt;**3、幻读：** 幻读解决了不重复读，保证了同一个事务里，查询的结果都是事务开始时的状态（一致性）。&lt;/p&gt;
&lt;p&gt;例如：事务 T1 对一个表中所有的行的某个数据项做了从 “1” 修改为 “2” 的操作 这时事务 T2 又对这个表中插入了一行数据项，而这个数据项的数值还是为 “1” 并且提交给数据库。 而操作事务 T1 的用户如果再查看刚刚修改的数据，会发现还有跟没有修改一样，其实这行是从事务 T2 中添加的，就好像产生幻觉一样，这就是发生了幻读。&lt;/p&gt;
&lt;h3 id=&#34;什么是死锁&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#什么是死锁&#34;&gt;#&lt;/a&gt; 什么是死锁？&lt;/h3&gt;
&lt;p&gt;​	死锁是指两个或两个以上的进程在执行过程中，由于竞争资源或者由于彼此通信而造成的一种阻塞的现象，若无外力作用，它们都将无法推进下去。此时称系统处于死锁状态或系统产生了死锁，这些永远在互相等待的进程称为死锁进程。&lt;/p&gt;
&lt;p&gt;产生死锁的四个必要条件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;互斥条件：一个资源每次只能被一个进程使用。&lt;/li&gt;
&lt;li&gt;请求与保持条件：一个进程因请求资源而阻塞时，对已获得的资源保持不放。&lt;/li&gt;
&lt;li&gt;不剥夺条件：进程已获得的资源，在末使用完之前，不能强行剥夺。&lt;/li&gt;
&lt;li&gt;循环等待条件：若干进程之间形成一种头尾相接的循环等待资源关系。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;手写题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#手写题&#34;&gt;#&lt;/a&gt; 手写题&lt;/h2&gt;
&lt;h3 id=&#34;如何从url中获取参数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#如何从url中获取参数&#34;&gt;#&lt;/a&gt; 如何从 Url 中获取参数？&lt;/h3&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;url &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;http://www.jianshu.com/search?q=js&amp;amp;page=1&amp;amp;type=note&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//split 拆分法&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;getUrl&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; n &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; url&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;indexOf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;?&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;n &lt;span class=&#34;token operator&#34;&gt;===&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;没有参数&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; str &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; url&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;slice&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;n &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; ary &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; str&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&amp;amp;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; arg &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    ary&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;forEach&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;item&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; arr &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; item&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;=&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        arg&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;arr&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; arr&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; arg&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 正则表达式法&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;regUrl&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;url&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;indexOf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;?&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;===&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;没有参数&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; regArg &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token regex&#34;&gt;&lt;span class=&#34;token regex-delimiter&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token regex-source language-regex&#34;&gt;\w+=\w+&lt;/span&gt;&lt;span class=&#34;token regex-delimiter&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token regex-flags&#34;&gt;g&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; aryValue &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; url&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;match&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;regArg&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    aryValue &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; aryValue&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;item&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; item&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;=&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; result &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; aryValue&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; i&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        result&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;aryValue&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; aryValue&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; result&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getUrl&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;url&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;regUrl&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;url&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;手写call-apply-bind&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#手写call-apply-bind&#34;&gt;#&lt;/a&gt; 手写 call、apply、bind&lt;/h3&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;person&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; c&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; d&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; c&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; d&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; egg &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; name&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;sakura&#39;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//call&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;Function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;prototype&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function-variable function&#34;&gt;newCall&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;obj&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;arr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; obj &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; obj &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; window&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    obj&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;p &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; result &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; obj&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;arr&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;delete&lt;/span&gt; obj&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;p&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; result&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;person&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;newCall&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;egg&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;mu&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;zi&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;chuang&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;ye&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//apply&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;Function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;prototype&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function-variable function&#34;&gt;newApply&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;obj&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; ary&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; obj &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; obj &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; window&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    obj&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;p &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; result&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;ary&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        result &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; obj&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;typeof&lt;/span&gt; ary &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Object&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        result &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; obj&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ary&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        result &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; obj&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;ary&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;delete&lt;/span&gt; obj&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;p&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; result&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;person&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;newApply&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;egg&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;mu&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;zi&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;chuang&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;ye&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//bind (待完成)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// Function.prototype.newBind = function (obj) &amp;#123; &amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// person.newBind(egg, &#39;mu&#39;, &#39;zi&#39;, &#39;chuang&#39;, &#39;ye&#39;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;数组去重&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数组去重&#34;&gt;#&lt;/a&gt; 数组去重&lt;/h3&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; ary &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;23&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;25&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;23&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;25&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;14&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// SET(es6)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; arr1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Set&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ary&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;arr1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//filter&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; arr2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; ary&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;filter&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;element&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; index&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; self&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;indexOf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;element&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;===&lt;/span&gt; index&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;arr2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//object&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; arr3 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;ary&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; obj &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; arr3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; i&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; item &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; arr3&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;typeof&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;obj&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;item&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;!==&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;undefined&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        arr3&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; arr3&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;arr3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        i&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        arr3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        obj&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;item&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; item&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;arr3&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 正则&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; arr4 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;ary&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;arr4&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sort&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;a&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; b&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;arr4 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; arr4&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;,&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;,&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; reg &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token regex&#34;&gt;&lt;span class=&#34;token regex-delimiter&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token regex-source language-regex&#34;&gt;(\d+,)\1*&lt;/span&gt;&lt;span class=&#34;token regex-delimiter&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token regex-flags&#34;&gt;g&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; arr44 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;arr4&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;reg&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;val&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; group&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    arr44&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;parseFloat&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;group&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;arr44&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;深拷贝与浅拷贝&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#深拷贝与浅拷贝&#34;&gt;#&lt;/a&gt; 深拷贝与浅拷贝&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;浅拷贝是拷贝一层，属性为对象时，浅拷贝是复制，两个对象指向同一个地址&lt;/li&gt;
&lt;li&gt;深拷贝是递归拷贝深层次，属性为对象时，深拷贝是新开栈，两个对象指向不同的地址&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 浅拷贝&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;浅拷贝&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; obj1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    a&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    b&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    c&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; d&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//way1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; obj2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; key &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; obj1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;obj1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;hasOwnProperty&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;key&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;break&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    obj2&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;key&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; obj1&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;key&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//way2 (推荐)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; obj3 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;obj1 &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//way3&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; obj33 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Object&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;assign&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; obj1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;obj1&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;b&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;obj2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;obj3&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;obj33&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//slice 与 concat 方法也可以浅拷贝字符串和数组&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 深拷贝&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;深拷贝&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//way1 (不能复制方法)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; obj4 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;JSON&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;parse&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;JSON&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;stringify&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;obj2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;obj2&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;b&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;obj4&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//way2&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; obj5 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    a&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    b&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    c&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        c1&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        c2&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function-variable function&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;a &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    e&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token regex&#34;&gt;&lt;span class=&#34;token regex-delimiter&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token regex-source language-regex&#34;&gt;^\d+$&lt;/span&gt;&lt;span class=&#34;token regex-delimiter&#34;&gt;/&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    f&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;deepClone&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;obj&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;obj &lt;span class=&#34;token operator&#34;&gt;===&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;obj &lt;span class=&#34;token keyword&#34;&gt;instanceof&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Date&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Date&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;obj&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;obj &lt;span class=&#34;token keyword&#34;&gt;instanceof&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;RegExp&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;RegExp&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;obj&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;typeof&lt;/span&gt; obj &lt;span class=&#34;token operator&#34;&gt;!==&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;object&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; obj&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 不直接创建空对象的目的：克隆的结果和之前保持相同的所有类&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;54&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; newObj &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;obj&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;constructor&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;55&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; key &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; obj&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;56&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;obj&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;hasOwnProperty&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;key&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;57&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            newObj&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;key&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;deepClone&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;obj&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;key&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;58&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;59&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;60&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; newObj&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;61&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;62&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; obj6 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;deepClone&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;obj5&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;63&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;obj5&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;b &lt;span class=&#34;token operator&#34;&gt;===&lt;/span&gt; obj6&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;64&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;obj5&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;c &lt;span class=&#34;token operator&#34;&gt;===&lt;/span&gt; obj6&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;c&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;65&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;obj5&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;d &lt;span class=&#34;token operator&#34;&gt;===&lt;/span&gt; obj6&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;d&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;66&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;obj5&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;e &lt;span class=&#34;token operator&#34;&gt;===&lt;/span&gt; obj6&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;e&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;67&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;obj5&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;f &lt;span class=&#34;token operator&#34;&gt;===&lt;/span&gt; obj6&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;f&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;防抖与节流&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#防抖与节流&#34;&gt;#&lt;/a&gt; 防抖与节流&lt;/h3&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;DOCTYPE&lt;/span&gt; html&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;html lang&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;zh-CN&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;head&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;meta charset&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;UTF-8&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;meta http&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;equiv&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;X-UA-Compatible&#34;&lt;/span&gt; content&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;IE=edge&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;meta name&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;viewport&#34;&lt;/span&gt; content&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;width=device-width, initial-scale=1.0&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;title&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;Document&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;title&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;head&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;body&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;input type&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;button&#34;&lt;/span&gt; value&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;剁手&#34;&lt;/span&gt; id&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;button&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;body&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;script&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; button &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; document&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getElementById&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;button&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;payMoney&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;已剁&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 防抖&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;debounce&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;func&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; delay&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; timer&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; context &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; args &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; arguments&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token function&#34;&gt;clearTimeout&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;timer&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            timer &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;setTimeout&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token function&#34;&gt;func&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;call&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;context&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; arguments&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; delay&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 节流&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;throttle&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;func&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; delay&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; pre &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; context &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; args &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; arguments&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; now &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Date&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;now &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; pre &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; delay&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token function&#34;&gt;func&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;apply&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;context&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                pre &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; now&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// button.addEventListener(&#39;click&#39;, debounce(payMoney, 1000))&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    button&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;addEventListener&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;click&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;throttle&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;payMoney&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// button.addEventListener(&#39;click&#39;, payMoney)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;script&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;html&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;函数柯里化&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#函数柯里化&#34;&gt;#&lt;/a&gt; 函数柯里化&lt;/h3&gt;
&lt;p&gt;​	计算机科学中，柯里化（Currying）是把接受多个参数的函数变换成接受一个单一参数 (最初函数的第一个参数) 的函数，并且返回接受余下的参数且返回结果的新函数的技术。这个技术以逻辑学家 Haskell Curry 命名的。&lt;/p&gt;
&lt;p&gt;​	柯里化的目的在于避免频繁调用具有相同参数函数的同时，又能够轻松的重用。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 函数柯里化例子&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;token function-variable function&#34;&gt;curryingAdd&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;z&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; x &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; y &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; z&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 调用&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;curryingAdd&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 即&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; fn &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;curryingAdd&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; fn1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;fn&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;fn1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 假设我们有一个求长方形面积的函数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;getArea&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;width&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; height&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; width &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; height&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 如果我们碰到的长方形的宽老是 10&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; area1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;getArea&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; area2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;getArea&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; area3 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;getArea&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;40&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 我们可以使用闭包柯里化这个计算面积的函数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;getArea&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token parameter&#34;&gt;height&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; width &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; height&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; getTenWidthArea &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;getArea&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 之后碰到宽度为 10 的长方形就可以这样计算面积&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; area1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;getTenWidthArea&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 而且如果遇到宽度偶尔变化也可以轻松复用&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; getTwentyWidthArea &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;getArea&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;七大排序&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#七大排序&#34;&gt;#&lt;/a&gt; 七大排序&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;排序方法&lt;/th&gt;
&lt;th&gt;平均时间复杂度&lt;/th&gt;
&lt;th&gt;最坏时间复杂度&lt;/th&gt;
&lt;th&gt;最好时间复杂度&lt;/th&gt;
&lt;th&gt;空间复杂度&lt;/th&gt;
&lt;th&gt;稳定性&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;直接插入排序&lt;/td&gt;
&lt;td&gt;O(n^2)&lt;/td&gt;
&lt;td&gt;O(n^2)&lt;/td&gt;
&lt;td&gt;O(n)&lt;/td&gt;
&lt;td&gt;O(1)&lt;/td&gt;
&lt;td&gt;稳定&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;希尔排序&lt;/td&gt;
&lt;td&gt;O(n^1.3)&lt;/td&gt;
&lt;td&gt;O(n^2)&lt;/td&gt;
&lt;td&gt;O(n)&lt;/td&gt;
&lt;td&gt;O(1)&lt;/td&gt;
&lt;td&gt;不稳定&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;冒泡排序&lt;/td&gt;
&lt;td&gt;O(n^2)&lt;/td&gt;
&lt;td&gt;O(n^2)&lt;/td&gt;
&lt;td&gt;O(n)&lt;/td&gt;
&lt;td&gt;O(1)&lt;/td&gt;
&lt;td&gt;稳定&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;快速排序&lt;/td&gt;
&lt;td&gt;O(n&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;msub&gt;&lt;mi&gt;g&lt;/mi&gt;&lt;mrow&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;log_{}{n}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8888799999999999em;vertical-align:-0.19444em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.01968em;&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:-0.15em;&#34;&gt;&lt;span style=&#34;top:-1.85em;margin-left:-0.03588em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;)&lt;/td&gt;
&lt;td&gt;O(n^2)&lt;/td&gt;
&lt;td&gt;O(n&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;msub&gt;&lt;mi&gt;g&lt;/mi&gt;&lt;mrow&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;log_{}{n}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8888799999999999em;vertical-align:-0.19444em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.01968em;&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:-0.15em;&#34;&gt;&lt;span style=&#34;top:-1.85em;margin-left:-0.03588em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;)&lt;/td&gt;
&lt;td&gt;O(&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;msub&gt;&lt;mi&gt;g&lt;/mi&gt;&lt;mrow&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;log_{}{n}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8888799999999999em;vertical-align:-0.19444em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.01968em;&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:-0.15em;&#34;&gt;&lt;span style=&#34;top:-1.85em;margin-left:-0.03588em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;)&lt;/td&gt;
&lt;td&gt;不稳定&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;直接选择排序&lt;/td&gt;
&lt;td&gt;O(n^2)&lt;/td&gt;
&lt;td&gt;O(n^2)&lt;/td&gt;
&lt;td&gt;O(n^2)&lt;/td&gt;
&lt;td&gt;O(1)&lt;/td&gt;
&lt;td&gt;不稳定&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;堆排序&lt;/td&gt;
&lt;td&gt;O(n&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;msub&gt;&lt;mi&gt;g&lt;/mi&gt;&lt;mrow&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;log_{}{n}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8888799999999999em;vertical-align:-0.19444em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.01968em;&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:-0.15em;&#34;&gt;&lt;span style=&#34;top:-1.85em;margin-left:-0.03588em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;)&lt;/td&gt;
&lt;td&gt;O(n&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;msub&gt;&lt;mi&gt;g&lt;/mi&gt;&lt;mrow&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;log_{}{n}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8888799999999999em;vertical-align:-0.19444em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.01968em;&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:-0.15em;&#34;&gt;&lt;span style=&#34;top:-1.85em;margin-left:-0.03588em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;)&lt;/td&gt;
&lt;td&gt;O(n&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;msub&gt;&lt;mi&gt;g&lt;/mi&gt;&lt;mrow&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;log_{}{n}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8888799999999999em;vertical-align:-0.19444em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.01968em;&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:-0.15em;&#34;&gt;&lt;span style=&#34;top:-1.85em;margin-left:-0.03588em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;)&lt;/td&gt;
&lt;td&gt;O(1)&lt;/td&gt;
&lt;td&gt;不稳定&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;归并排序&lt;/td&gt;
&lt;td&gt;O(n&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;msub&gt;&lt;mi&gt;g&lt;/mi&gt;&lt;mrow&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;log_{}{n}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8888799999999999em;vertical-align:-0.19444em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.01968em;&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:-0.15em;&#34;&gt;&lt;span style=&#34;top:-1.85em;margin-left:-0.03588em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;)&lt;/td&gt;
&lt;td&gt;O(n&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;msub&gt;&lt;mi&gt;g&lt;/mi&gt;&lt;mrow&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;log_{}{n}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8888799999999999em;vertical-align:-0.19444em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.01968em;&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:-0.15em;&#34;&gt;&lt;span style=&#34;top:-1.85em;margin-left:-0.03588em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;)&lt;/td&gt;
&lt;td&gt;O(n&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;msub&gt;&lt;mi&gt;g&lt;/mi&gt;&lt;mrow&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;log_{}{n}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8888799999999999em;vertical-align:-0.19444em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.01968em;&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:-0.15em;&#34;&gt;&lt;span style=&#34;top:-1.85em;margin-left:-0.03588em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;)&lt;/td&gt;
&lt;td&gt;O(n)&lt;/td&gt;
&lt;td&gt;稳定&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;img data-src=&#34;D:%5CMarkdown%5Clocal_image%5C20220706140450-16570876426776.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h4 id=&#34;选择排序&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#选择排序&#34;&gt;#&lt;/a&gt; 选择排序&lt;/h4&gt;
&lt;p&gt;** 思路分析：** 第一趟从 n 个元素的数据序列中选出关键字最小 / 大的元素并放在最前 / 后位置，下一趟从 n-1 个元素中选出最小 / 大的元素并放在最前 / 后位置。以此类推，经过 n-1 趟完成排序。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; aryMake &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;./aryMake.js&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 选择排序&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;selectSort&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;ary&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; ary&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; i&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; min &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; i&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;j &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; j &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; ary&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; j&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ary&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;j&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; ary&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;min&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                min &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; j&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;ary&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; ary&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;min&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;ary&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;min&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; ary&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; ary&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; arr &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;ary&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;selectSort&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;arr&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//O (n^2) 不稳定&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;​		直接选择排序的最好时间复杂度号最坏时间复杂度都是 O (n^2)，因为即使数组一开始就是正序的，也需要将两重循环进行完，平均时间复杂度也是 O (n^2)，最好的时间复杂度为 O (n^2)，空间复杂度为 O (1)，因为不占用多余的空间。直接选择排序是一种原地排序并且不稳定的排序算法.&lt;/p&gt;
&lt;h4 id=&#34;冒泡排序&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#冒泡排序&#34;&gt;#&lt;/a&gt; 冒泡排序&lt;/h4&gt;
&lt;p&gt;思路分析：&lt;/p&gt;
&lt;p&gt;①比较相邻的元素。如果第一个比第二个大，就交换他们两个。&lt;/p&gt;
&lt;p&gt;②对每一对相邻元素做同样的工作，从开始第一对到结尾的最后一对。在这一点，最后的元素应该会是最大的数。&lt;/p&gt;
&lt;p&gt;③针对所有的元素重复以上的步骤，除了最后一个。&lt;/p&gt;
&lt;p&gt;④持续每次对越来越少的元素重复上面的步骤，直到没有任何一对数字需要比较。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; ary &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;./aryMake.js&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 冒泡排序&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;bubbleSort&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;ary&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; ary&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; i&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; flag &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; ii &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; ii &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; ary&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; ii&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ary&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;ii&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; ary&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;ii &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;ary&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;ii&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; ary&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;ii &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;ary&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;ii &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; ary&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;ii&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                flag &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;false&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 本次排序都没有发生交换，说明已经有序了&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;flag&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;break&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; ary&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; ary1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;ary&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;bubbleSort&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ary1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//O (n^2) 稳定&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;总结：冒泡排序算法最坏的情况和平均复杂度是 O (n^2)，最好时间复杂度为 O (n)，空间复杂度为 O (1)，排序算法稳定。&lt;/p&gt;
&lt;h4 id=&#34;插入排序&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#插入排序&#34;&gt;#&lt;/a&gt; 插入排序&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;思路分析：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;①在长度为 N 的数组，将数组中第 i [1~（N-1) ] 个元素，插入到数组 [0~i] 适当的位置上。&lt;/p&gt;
&lt;p&gt;②在排序的过程中当前元素之前的数组元素已经是有序的了。&lt;/p&gt;
&lt;p&gt;③在插入的过程中，有序的数组元素，需要向右移动为更小的元素腾出空间，直到为当前元素找到合适的位置。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; aryMake &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;./aryMake.js&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 插入排序&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;insertSort&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;ary&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; ary&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; i&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; j &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; i&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; insert &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; ary&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;j&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;j &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;insert &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; ary&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;j &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            ary&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;j&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; ary&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;j &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            j &lt;span class=&#34;token operator&#34;&gt;-=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        ary&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;j&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; insert&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; ary&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; arr &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; aryMake&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;ary&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;insertSort&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;arr&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//O (n^2) 稳定&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;总结：时间复杂度平均为 O (n^2)，最坏为 O (n^2)，最好为 O (n)，空间复杂度为 O (1)，排序算法稳定。&lt;/p&gt;
&lt;h4 id=&#34;希尔排序&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#希尔排序&#34;&gt;#&lt;/a&gt; 希尔排序&lt;/h4&gt;
&lt;p&gt;希尔排序是对插入排序最坏的情况的改进，主要是减少数据移动次数，增加算法的效率。&lt;/p&gt;
&lt;p&gt;思路分析：&lt;/p&gt;
&lt;p&gt;先比较距离远的元素，而不是像简单交换排序算法那样先比较相邻的元素，这样可以快速减少大量的无序情况，从而减轻后续的工作。被比较的元素之间的距离逐步减少，直到减少为 1，这时的排序变成了相邻元素的互换。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; aryMake &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;./aryMake.js&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 希尔排序&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;shellSort&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;ary&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; gap &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;gap &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; ary&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        gap &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; gap &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;gap&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; gap &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; gap &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Math&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;floor&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;gap &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; gap&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; ary&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; i&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; j &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; gap&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; ary&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;j&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; ary&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;j &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; gap&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; j &lt;span class=&#34;token operator&#34;&gt;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; j &lt;span class=&#34;token operator&#34;&gt;-=&lt;/span&gt; gap&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;ary&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;j&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; ary&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;j &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; gap&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;ary&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;j &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; gap&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; ary&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;j&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; ary&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; arr &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; aryMake&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;ary&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;arr&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;shellSort&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;arr&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;总结：希尔排序通过将比较的全部元素分为几个区域来提升插入排序的性能。这样让一个元素可以一次性的朝最终的位置前进一大步。然后算法再取越来越小的步长进行排序，算法最后一步就是普通的插入排序，但是到了这步，需要排序的数据几乎接近有序了（此时插入排序较快），时间复杂度平均为 O (nlogn)，最坏为 O (nlogn)，空间复杂度为 O (1)，排序算法不稳定。&lt;/p&gt;
&lt;h4 id=&#34;归并排序&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#归并排序&#34;&gt;#&lt;/a&gt; 归并排序&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;思路分析：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;当一个数组左边有序，右边也有序，那合并这两个有序数组就完成了排序。如何让左右两边有序了？用递归！这样&lt;strong&gt;递归下去，合并上来&lt;/strong&gt;就是归并排序。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; aryMake &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;./aryMake.js&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 归并排序&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;mergeSort&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;ary&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; len &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; ary&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;len &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; ary &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; lenL &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Math&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;floor&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;len &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; ary &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;merge&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;mergeSort&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ary&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;slice&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; lenL&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;mergeSort&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ary&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;slice&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;lenL&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;merge&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;aryLeft&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; aryRight&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; aryMerge &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;aryLeft&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; aryRight&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        aryMerge&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;aryLeft&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; aryRight&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt; aryLeft&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;shift&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; aryRight&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;shift&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; aryMerge&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;concat&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;aryLeft&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;concat&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;aryRight&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; arr &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;ary&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;mergeSort&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;arr&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//O (n*log2n) 稳定&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;总结：平均和最坏、最好时间复杂度为 O (nlogn)，空间复杂度 O (n)，排序算法稳定。&lt;/p&gt;
&lt;h4 id=&#34;快速排序&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#快速排序&#34;&gt;#&lt;/a&gt; 快速排序&lt;/h4&gt;
&lt;p&gt;本质上快速排序把数据划分成几份，所以快速排序通过选取一个关键数据，再根据它的大小，把原数组分成两个子数组：第一个数组里的数都比这个主元数据小或等于，而另一个数组里的数都比这个主元数据要大或等于。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; aryMake &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;./sort/aryMake.js&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; insertSort &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;./sort/insertSort.js&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;quickSort&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;ary&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; len &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; ary&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 小区间优化&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;len &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;insertSort&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ary&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 三数取中法&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; mid &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Math&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;floor&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;len &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ary&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; ary&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;mid&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;ary&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; ary&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;mid&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;ary&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;mid&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; ary&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ary&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;mid&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; ary&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;len &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;ary&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;mid&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; ary&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;len &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;ary&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;len &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; ary&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;mid&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 左右指针&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; left &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; right &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; len &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; key &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; ary&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;mid&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;left &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; right&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ary&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;left&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; key &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; left &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; right&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; left&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ary&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;right&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&gt;=&lt;/span&gt; key &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; left &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; right&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; right&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;left &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; right&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;ary&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;left&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; ary&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;right&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;ary&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;right&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; ary&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;left&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ary&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;left&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; key&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; left&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;quickSort&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ary&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;slice&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; left&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;concat&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;quickSort&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ary&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;slice&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;left&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; ary0 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; aryMake&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;ary&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;40&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;quickSort&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ary0&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;总结：平均时间复杂度为 O (n&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;msub&gt;&lt;mi&gt;g&lt;/mi&gt;&lt;mrow&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;log_{}{n}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8888799999999999em;vertical-align:-0.19444em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.01968em;&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:-0.15em;&#34;&gt;&lt;span style=&#34;top:-1.85em;margin-left:-0.03588em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;)，最坏时间复杂度为 O (n^2)，空间复杂度为 O (n&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;msub&gt;&lt;mi&gt;g&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msub&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;log_{2}{n}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8888799999999999em;vertical-align:-0.19444em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.01968em;&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.30110799999999993em;&#34;&gt;&lt;span style=&#34;top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;），排序算法不稳定。&lt;/p&gt;
&lt;h4 id=&#34;堆排序&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#堆排序&#34;&gt;#&lt;/a&gt; 堆排序&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;思路分析：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;①将长度为 n 的待排序的数组进行堆有序化 (从最后一个具有子节点的父节点开始 &lt;code&gt;Math.floor(ary.length / 2) - 1&lt;/code&gt; ) 构造成一个大顶堆；&lt;/p&gt;
&lt;p&gt;②将根节点与尾节点交换并输出此时的尾节点；&lt;/p&gt;
&lt;p&gt;③将剩余的 n -1 个节点重新进行堆有序化；&lt;/p&gt;
&lt;p&gt;④重复步骤 2 与将根节点进行堆有序化直至构造成一个有序序列；&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; aryMake &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;./aryMake.js&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 堆排序&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;heapSort&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;ary&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Math&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;floor&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ary&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; i&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// console.log(ary)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token function&#34;&gt;heap&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ary&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; i&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; ary&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; j &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; ary&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; j &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; j&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;ary&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; ary&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;j&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;ary&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;j&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; ary&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token function&#34;&gt;heap&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ary&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; j&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; ary&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;heap&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;ary&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; i&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; len&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; k &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; k &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; len&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; k &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; k &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;k &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; len &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; ary&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;k &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; ary&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;k&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; k &lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ary&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;k&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; ary&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;ary&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; ary&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;k&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;ary&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;k&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; ary&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            i &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; k&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;break&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; arr &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; aryMake&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;ary&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;heapSort&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;arr&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;​		堆排序的最好和最差情况时间复杂度都为 O (n&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;msub&gt;&lt;mi&gt;g&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msub&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;log_{2}{n}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8888799999999999em;vertical-align:-0.19444em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.01968em;&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.30110799999999993em;&#34;&gt;&lt;span style=&#34;top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;)，平均时间复杂度为 O (n&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;msub&gt;&lt;mi&gt;g&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msub&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;log_{2}{n}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8888799999999999em;vertical-align:-0.19444em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.01968em;&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.30110799999999993em;&#34;&gt;&lt;span style=&#34;top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;)，空间复杂度为 O (1)，排序算法不稳定，无需使用多余的空间帮助排序。优点是占用空间较小，时间复杂度较低，缺点是实现较为复杂，并且当待排序序列发生改动时，哪怕是特别小的改动，都需要调整整个堆来维护堆的性质，维护开销较大。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://nc3021.github.io/2021/12/23/front-end/Vue/</guid>
            <title>Vue学习</title>
            <link>https://nc3021.github.io/2021/12/23/front-end/Vue/</link>
            <category term="前端" scheme="https://nc3021.github.io/categories/front-end/" />
            <category term="前端" scheme="https://nc3021.github.io/tags/%E5%89%8D%E7%AB%AF/" />
            <pubDate>Thu, 23 Dec 2021 01:07:34 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;vue&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vue&#34;&gt;#&lt;/a&gt; Vue&lt;/h1&gt;
&lt;h2 id=&#34;认识vue&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#认识vue&#34;&gt;#&lt;/a&gt; 认识 Vue&lt;/h2&gt;
&lt;h3 id=&#34;基本认识&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基本认识&#34;&gt;#&lt;/a&gt; 基本认识&lt;/h3&gt;
&lt;p&gt;​	Vue 是一种渐进式 JavaScript 框架，用来动态构建用户界面。&lt;/p&gt;
&lt;p&gt;​	&lt;strong&gt;开发者&lt;/strong&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211217175501.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;基本特点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基本特点&#34;&gt;#&lt;/a&gt; 基本特点&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;遵循 MVVM 模式&lt;/li&gt;
&lt;li&gt;编码简洁，体积小，运行效率高，适合 移动 / PC 端开发&lt;/li&gt;
&lt;li&gt;它本身只关注 UI，可以轻松引入 vue 插件或其它第三方库开发项目&lt;/li&gt;
&lt;li&gt;采用组件化模式，提高代码复用率、且让代码更好维护&lt;/li&gt;
&lt;li&gt;声明式编码，让编码人员无需直接操作 DOM，提高开发效率&lt;/li&gt;
&lt;li&gt;使用虚拟 DOM 和 Diff 算法，尽量复用 DOM 节点&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;与其它前端 JS 框架的关联：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;借鉴 angular 的 &lt;strong&gt;模板&lt;/strong&gt; 和 &lt;strong&gt;数据绑定&lt;/strong&gt; 技术&lt;/li&gt;
&lt;li&gt;借鉴 react 的 &lt;strong&gt;组件化&lt;/strong&gt; 和 &lt;strong&gt;虚拟 DOM&lt;/strong&gt; 技术&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;vue的使用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vue的使用&#34;&gt;#&lt;/a&gt; Vue 的使用&lt;/h3&gt;
&lt;h4 id=&#34;引入vuejs&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#引入vuejs&#34;&gt;#&lt;/a&gt; 引入 Vue.js&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;本地引入&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;../js/vue.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CDN 引入&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;创建vue对象&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#创建vue对象&#34;&gt;#&lt;/a&gt; 创建 Vue 对象&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;想让 Vue 工作，就必须创建一个 Vue 实例，且要传入一个配置对象；&lt;/li&gt;
&lt;li&gt;root 容器里的代码依然符合 html 规范，只不过混入了一些特殊的 Vue 语法；&lt;/li&gt;
&lt;li&gt;root 容器里的代码被称为【Vue 模板】；&lt;/li&gt;
&lt;li&gt;Vue 实例和容器是一一对应的；&lt;/li&gt;
&lt;li&gt;真实开发中只有一个 Vue 实例，并且会配合着组件一起使用；&lt;/li&gt;
&lt;li&gt;
中的xxx要写js表达式，且xxx可以自动读取到data中的所有属性；
&lt;/li&gt;
&lt;li&gt;一旦 data 中的数据发生改变，那么页面中用到该数据的地方也会自动更新；&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Vue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    el&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;#root&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;//&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    data&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        name&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Sakura&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        address&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;chengdu&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;​	由 Vue 管理的函数，一定不要写箭头函数，一旦写了箭头函数，this 就不再是 Vue 实例了。&lt;/p&gt;
&lt;h4 id=&#34;el与data&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#el与data&#34;&gt;#&lt;/a&gt; el 与 data&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;el&lt;/code&gt; ：用于指定当前 Vue 实例为哪个容器服务，值通常为 CSS 选择器字符串；&lt;/p&gt;
&lt;p&gt;&lt;code&gt;data&lt;/code&gt; ：用于存储数据，数据供 el 所指定的容器去使用；&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;el 的两种写法&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;new Vue 的时候配置 el 属性&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; v &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Vue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	el&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;#root&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	data&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		name&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Sakura&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;先创建 Vue 实例，再通过 v.$mount (xxx) 指定 el 的值&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; v &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Vue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	data&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		name&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Sakura&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;v&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;$mount&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;root&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;data 的两种写法&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;对象式&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;data&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	name&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;sakura&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;函数式&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;@@@&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		name&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;sakura&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;mvvm模型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#mvvm模型&#34;&gt;#&lt;/a&gt; MVVM 模型&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211217220326.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;M&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;模型 (Model) ：data 中的数据&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;V&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;视图 (View) ：模板代码（不是静态页面） （两个语法：指令，大括号表达式）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;VM&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;viewModel: 视图模型（Vue 的实例）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Dom Listeners （Dom 监听）&lt;/li&gt;
&lt;li&gt;Data Bindings （数据绑定）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;MVVM&lt;/strong&gt;&lt;br /&gt;
MVVM 本质上是 MVC （Model-View- Controller）的改进版。即模型 - 视图 - 视图模型。&lt;/p&gt;
&lt;p&gt;​	模型 model 指的是后端传递的数据，视图 view 指的是所看到的页面。&lt;/p&gt;
&lt;p&gt;​	视图模型 viewModel 是 mvvm 模式的核心，它是连接 view 和 model 的桥梁。它有两个方向：&lt;/p&gt;
&lt;p&gt;​	将模型转化成视图，即将后端传递的数据转化成所看到的页面。实现的方式是：数据绑定&lt;br /&gt;
​	将视图转化成模型，即将所看到的页面转化成后端的数据。实现的方式是：DOM 事件监听&lt;/p&gt;
&lt;p&gt;​	这两个方向都实现的，我们称之为数据的双向绑定&lt;/p&gt;
&lt;h2 id=&#34;模板语法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#模板语法&#34;&gt;#&lt;/a&gt; 模板语法&lt;/h2&gt;
&lt;h3 id=&#34;插值语法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#插值语法&#34;&gt;#&lt;/a&gt; 插值语法&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;语法： &lt;code&gt;&amp;#123;&amp;#123;XXX&amp;#125;&amp;#125;&lt;/code&gt;   xxx 是 js 表达式，可以直接读取到 data 中的所有属性；&lt;/li&gt;
&lt;li&gt;功能：用于解析标签体内容，向页面输出数据&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;指令语法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#指令语法&#34;&gt;#&lt;/a&gt; 指令语法&lt;/h3&gt;
&lt;h4 id=&#34;v-bind&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#v-bind&#34;&gt;#&lt;/a&gt; v-bind&lt;/h4&gt;
&lt;p&gt;功能：强制数据绑定（单向绑定）&lt;/p&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;v-bind:xxx=&#39;yyy&#39;   //yyy会作为表达式解析执行
:xxx=&#39;yyy&#39;        //简写
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;特点：数据只能从 data 流向页面&lt;/p&gt;
&lt;h4 id=&#34;v-model&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#v-model&#34;&gt;#&lt;/a&gt; v-model&lt;/h4&gt;
&lt;p&gt;功能：强制数据绑定（双向绑定）&lt;/p&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;v-model:value=&#39;xxx&#39;    
v-model=&#39;xxx&#39;        //简写
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;原理：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;input type:&#39;text&#39; :value=&#39;msg&#39; @input=&amp;#123;msg=$event.target.value&amp;#125; /&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;特点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;数据不仅能从 data 流向页面，还能从页面流向 data；&lt;/li&gt;
&lt;li&gt;不仅可用于表单类元素，还可用作父子组件数据的同步；&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;v-on&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#v-on&#34;&gt;#&lt;/a&gt; v-on&lt;/h4&gt;
&lt;p&gt;功能：绑定指定事件名的回调函数&lt;/p&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;v-on:click=&#39;xxx&#39;
v-on:click=&#39;xxx($event，参数)&#39;  //获得参数与点击事件
@keyup=&#39;xxx&#39;          //按钮抬起时触发
@keydown=&#39;xxx&#39;        //按钮敲下时触发
@click=&#39;xxx&#39;          //简写
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;v-show&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#v-show&#34;&gt;#&lt;/a&gt; v-show&lt;/h4&gt;
&lt;p&gt;功能：条件渲染；&lt;/p&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;div v-show=&#39;xxx&#39;&amp;gt;&amp;lt;/div&amp;gt;   
//xxx表达式的值为ture或false
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;适用于：切换频率较高的场景；&lt;/p&gt;
&lt;p&gt;特点：不展示的 DOM 元素未被移除，只是被隐藏掉&lt;/p&gt;
&lt;h4 id=&#34;v-if&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#v-if&#34;&gt;#&lt;/a&gt; v-if&lt;/h4&gt;
&lt;p&gt;功能：条件渲染；&lt;/p&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;div v-if=&#39;xxx&#39;&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;div v-else-if=&#39;xxx&#39;&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;div v-else&amp;gt;&amp;lt;/div&amp;gt;
//xxx表达式的值为true或false
&amp;lt;template v-if=&#39;xxx&#39;&amp;gt;
	&amp;lt;h2&amp;gt;&amp;lt;/h2&amp;gt;
	&amp;lt;h2&amp;gt;&amp;lt;/h2&amp;gt;
	&amp;lt;h2&amp;gt;&amp;lt;/h2&amp;gt;
&amp;lt;/template&amp;gt;//不影响结构的使用方法
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;适用于：切换频率较低的场景&lt;/p&gt;
&lt;p&gt;特点：不展示的 DOM 元素直接被移除&lt;/p&gt;
&lt;p&gt;注意：v-if 可以和 v-else-if、v-else 一起使用，但要求结构不能被 “打断”；&lt;/p&gt;
&lt;h4 id=&#34;v-for&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#v-for&#34;&gt;#&lt;/a&gt; v-for&lt;/h4&gt;
&lt;p&gt;功能：用于展示列表数据，可遍历数组、对象、字符串、指定次数&lt;/p&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;v-for=&#39;(item.index) in xxx&#39; :key=&#39;yyy&#39;
//xxx为数组或对象
v-for=&#39;(item.index) of xxx&#39; :key=&#39;yyy&#39;
//xxx为字符串或数字（用的比较少）
//in与of的使用没有区别
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;数组: (item, index)&lt;/li&gt;
&lt;li&gt;对象: (value, key)&lt;/li&gt;
&lt;li&gt;字符串：(char, index)&lt;/li&gt;
&lt;li&gt;数字：(number, index)&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;key的原理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#key的原理&#34;&gt;#&lt;/a&gt; key 的原理&lt;/h5&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211222204421.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;虚拟 DOM 中 key 的作用：&lt;/p&gt;
&lt;p&gt;key 是虚拟 DOM 对象的标识，当数据发生变化时，Vue 会根据【新数据】生成【新的虚拟 DOM】, 随后 Vue 进行【新虚拟 DOM】与【旧虚拟 DOM】的差异比较，比较规则如下：&lt;/p&gt;
&lt;p&gt;对比规则：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;旧虚拟 DOM 中找到了与新虚拟 DOM 相同的 key：&lt;br /&gt;
①若虚拟 DOM 中内容没变，直接使用之前的真实 DOM；&lt;br /&gt;
②若虚拟 DOM 中内容变了，则生成新的真实 DOM，随后替换掉页面中之前的真实 DOM；&lt;/li&gt;
&lt;li&gt;旧虚拟 DOM 中未找到与新虚拟 DOM 相同的 key 创建新的真实 DOM，随后渲染到到页面。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;用 index 作为 key 可能会引发的问题：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;若对数据进行：逆序添加、逆序删除等破坏顺序操作：会产生没有必要的真实 DOM 更新 ==&amp;gt; 界面效果没问题，但效率低；&lt;/li&gt;
&lt;li&gt;如果结构中还包含输入类的 DOM： 会产生错误 DOM 更新 ==&amp;gt; 界面有问题&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;开发中如何选择 key:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;最好使用每条数据的唯一标识作为 key, 比如 id、手机号、身份证号、学号等唯一值。&lt;/li&gt;
&lt;li&gt;如果不存在对数据的逆序添加、逆序删除等破坏顺序操作，仅用于渲染列表用于展示，使用 index 作为 key 是没有问题的。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;v-text&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#v-text&#34;&gt;#&lt;/a&gt; v-text&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;作用：向其所在的节点中渲染文本内容。&lt;/li&gt;
&lt;li&gt;与插值语法的区别： &lt;code&gt;v-text&lt;/code&gt;  会替换掉节点中的内容， &lt;code&gt;&amp;#123;&amp;#123;xx&amp;#125;&amp;#125;&lt;/code&gt;  则不会。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;v-html&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#v-html&#34;&gt;#&lt;/a&gt; v-html&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;作用：向指定节点中渲染包含 html 结构的内容。&lt;/li&gt;
&lt;li&gt;与插值语法的区别：
&lt;ul&gt;
&lt;li&gt;v-html 会替换掉节点中所有的内容，则不会&lt;/li&gt;
&lt;li&gt;v-html 可以识别 html 结构。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;严重注意：v-html 有安全性问题！！！！
&lt;ul&gt;
&lt;li&gt;在网站上动态渲染任意 HTML 是非常危险的，容易导致 XSS 攻击。&lt;/li&gt;
&lt;li&gt;一定要在可信的内容上使用 v-html，永不要用在用户提交的内容上！&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;v-clock&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#v-clock&#34;&gt;#&lt;/a&gt; v-clock&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;本质是一个特殊属性（没有值），Vue 实例创建完毕并接管容器后会删掉 c-clock 属性；&lt;/li&gt;
&lt;li&gt;使用 CSS（即通过属性选择器 &lt;code&gt;[v-cloak] &amp;#123; display: none &amp;#125;&lt;/code&gt; ）配合 v-clock 可以解决网速慢时页面展示出的问题。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;v-once&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#v-once&#34;&gt;#&lt;/a&gt; v-once&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;v-once 所在节点在初次动态渲染后，就视为静态内容了。&lt;/li&gt;
&lt;li&gt;以后数据的改变不会引起 v-once 所在结构的更新，可以用于优化性能。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;v-pre&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#v-pre&#34;&gt;#&lt;/a&gt; v-pre&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;跳过其所在节点的编译过程。&lt;/li&gt;
&lt;li&gt;可利用它跳过：没有使用指令语法、没有使用插值语法的节点，会加快编译。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;自定义指令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#自定义指令&#34;&gt;#&lt;/a&gt; 自定义指令&lt;/h3&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;局部指令&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;//对象式
new Vue(&amp;#123;
	dirextives:&amp;#123;
		指令名:&amp;#123;
			配置对象1()&amp;#123;xxx&amp;#125;,
			配置对象2()&amp;#123;xxx&amp;#125;,
				&amp;#125;&amp;#125;
		&amp;#125;)
//函数式
new Vue(&amp;#123;
	directives()&amp;#123;&amp;#125;
&amp;#125;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;全局指令&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;//对象式
Vue.dirctive(指令名，&amp;#123;
	配置对象1()&amp;#123;&amp;#125;,
	配置对象2()&amp;#123;&amp;#125;,
&amp;#125;)
//函数式
Vue.directive(指令名,回调函数)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;配置对象中的三个常用回调：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.bind&lt;/code&gt; ：指令与元素成功绑定时调用；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.inserted&lt;/code&gt; ：指令所在元素被插入页面时调用；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;update&lt;/code&gt; ：指令所在模板结构被重新解析时调用。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;注意事项：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;指令定义时不加 &lt;code&gt;v-&lt;/code&gt; ，但使用时要加 &lt;code&gt;v-&lt;/code&gt; ;&lt;/li&gt;
&lt;li&gt;指令名如果是多个单词时，要使用 xxx-yyy 的命名方式。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;代码实例：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
	&amp;lt;head&amp;gt;
		&amp;lt;meta charset=&amp;quot;UTF-8&amp;quot; /&amp;gt;
		&amp;lt;title&amp;gt;自定义指令&amp;lt;/title&amp;gt;
		&amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;../js/vue.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
	&amp;lt;/head&amp;gt;
	&amp;lt;body&amp;gt;
		&amp;lt;!-- 准备好一个容器--&amp;gt;
		&amp;lt;div id=&amp;quot;root&amp;quot;&amp;gt;
			&amp;lt;h2&amp;gt;&amp;#123;&amp;#123;name&amp;#125;&amp;#125;&amp;lt;/h2&amp;gt;
			&amp;lt;h2&amp;gt;当前的n值是：&amp;lt;span v-text=&amp;quot;n&amp;quot;&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;/h2&amp;gt;
			&amp;lt;!-- &amp;lt;h2&amp;gt;放大10倍后的n值是：&amp;lt;span v-big-number=&amp;quot;n&amp;quot;&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;/h2&amp;gt; --&amp;gt;
			&amp;lt;h2&amp;gt;放大10倍后的n值是：&amp;lt;span v-big=&amp;quot;n&amp;quot;&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;/h2&amp;gt;
			&amp;lt;button @click=&amp;quot;n++&amp;quot;&amp;gt;点我n+1&amp;lt;/button&amp;gt;
			&amp;lt;hr/&amp;gt;
			&amp;lt;input type=&amp;quot;text&amp;quot; v-fbind:value=&amp;quot;n&amp;quot;&amp;gt;
		&amp;lt;/div&amp;gt;
	&amp;lt;/body&amp;gt;
	
	&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;
		Vue.config.productionTip = false

		//定义全局指令
		/* Vue.directive(&#39;fbind&#39;,&amp;#123;
			//指令与元素成功绑定时（一上来）
			bind(element,binding)&amp;#123;
				element.value = binding.value
			&amp;#125;,
			//指令所在元素被插入页面时
			inserted(element,binding)&amp;#123;
				element.focus()
			&amp;#125;,
			//指令所在的模板被重新解析时
			update(element,binding)&amp;#123;
				element.value = binding.value
			&amp;#125;
		&amp;#125;) */

		new Vue(&amp;#123;
			el:&#39;#root&#39;,
			data:&amp;#123;
				name:&#39;Sakura&#39;,
				n:1
			&amp;#125;,
			directives:&amp;#123;
				//big函数何时会被调用？1.指令与元素成功绑定时（一上来）。2.指令所在的模板被重新解析时。
				/* &#39;big-number&#39;(element,binding)&amp;#123;
					// console.log(&#39;big&#39;)
					element.innerText = binding.value * 10
				&amp;#125;, */
				big(element,binding)&amp;#123;
					console.log(&#39;big&#39;,this) //注意此处的this是window
					// console.log(&#39;big&#39;)
					element.innerText = binding.value * 10
				&amp;#125;,
				fbind:&amp;#123;
					//指令与元素成功绑定时（一上来）
					bind(element,binding)&amp;#123;
						element.value = binding.value
					&amp;#125;,
					//指令所在元素被插入页面时
					inserted(element,binding)&amp;#123;
						element.focus()
					&amp;#125;,
					//指令所在的模板被重新解析时
					update(element,binding)&amp;#123;
						element.value = binding.value
					&amp;#125;
				&amp;#125;
			&amp;#125;
		&amp;#125;)
		
	&amp;lt;/script&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;事件处理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#事件处理&#34;&gt;#&lt;/a&gt; 事件处理&lt;/h2&gt;
&lt;h3 id=&#34;绑定监听&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#绑定监听&#34;&gt;#&lt;/a&gt; 绑定监听&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;使用 v-on:xxx 或 @xxx 绑定事件 xxx；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;事件的回调方法配置在 Vue 的 methods 对象中，最终会在 vm 上（methods 中配置的方法不能用箭头函数，否则 this 指向 windows）；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;事件对象&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;默认事件形参： &lt;code&gt;event&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;隐含属性对象： &lt;code&gt;$event&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$event&lt;/code&gt;  就是当前触发事件的元素，即使不传  &lt;code&gt;$event&lt;/code&gt; ，在回调函数中也可以使用  &lt;code&gt;event&lt;/code&gt;  这个参数。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;event 方法：&lt;/p&gt;
&lt;p&gt;event.target.value：获得当前元素的值&lt;/p&gt;
&lt;p&gt;event.key：获得按键的名&lt;/p&gt;
&lt;p&gt;event.keyCode：获得按键的编码&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;事件修饰符&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#事件修饰符&#34;&gt;#&lt;/a&gt; 事件修饰符&lt;/h3&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在 methods 上：&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211222133416.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;@click.xxx=&#39;yyy&#39;
@click.xx1.xx2=&#39;yyy&#39;     //可以同时使用多个修饰符，按左右顺序执行
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;prevent&lt;/strong&gt;: 阻止默认事件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;stop&lt;/strong&gt;: 阻止事件冒泡&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;once&lt;/strong&gt;：事件只触发一次&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;capture&lt;/strong&gt;：使用事件的捕获模式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;self&lt;/strong&gt;：只有 event.target 是当前操作的元素才触发事件；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;passive&lt;/strong&gt;：事件的默认行为立即执行，无需等待事件回调执行完毕；&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;键盘修饰符&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#键盘修饰符&#34;&gt;#&lt;/a&gt; 键盘修饰符&lt;/h3&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@keyup.xxx=&#39;yyy&#39;        //xxx为键盘修饰符
@keydown.xx1.xx2=&#39;yyy&#39;     //可以同时使用多个修饰符，常用于系统修饰键
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Vue 提供的按键别名&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;回车&lt;/strong&gt;：enter&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;删除&lt;/strong&gt;：delete&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;退出&lt;/strong&gt;：esc&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;空格&lt;/strong&gt;：space&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;换行&lt;/strong&gt;：tab（特殊，必须配合 keydown 去使用）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;上&lt;/strong&gt;：up&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;下&lt;/strong&gt;：down&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;左&lt;/strong&gt;：left&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;右&lt;/strong&gt;：right&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Vue 未提供的按键别名&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;可以通过 event.key 获得按键的名（若名称为两个单词则转换为小写短横线命名）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;系统修饰键（ctrl、alt、shift、meta）&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用 keyup：按下修饰键的同时，再按下其他键，随后释放其他键，事件才被触发；&lt;/li&gt;
&lt;li&gt;使用 keydown：正常触发事件&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;计算属性与监听属性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#计算属性与监听属性&#34;&gt;#&lt;/a&gt; 计算属性与监听属性&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;computed 和 watch 之间的区别：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;computed 能完成的功能，watch 都可以完成；&lt;/li&gt;
&lt;li&gt;watch 能完成的功能，computed 不一定能完成，例如：watch 可以进行异步操作。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;两个重要的小原则：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;所被 Vue 管理的函数，最好写成普通函数，这样 this 的指向才是 vm 或组件实例对象；&lt;/li&gt;
&lt;li&gt;所有不被 Vue 所管理的函数（定时器的回调函数、ajax 的回调函数等、Promise 的回调函数），最好写成箭头函数，这样 this 的指向才是 vm 或组件实例对象。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;计算属性computed&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#计算属性computed&#34;&gt;#&lt;/a&gt; 计算属性 computed&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;方法：在 computed 属性对象中定义计算属性的方法；&lt;/li&gt;
&lt;li&gt;使用：在页面中使用来显示计算结果；&lt;/li&gt;
&lt;li&gt;定义：通过已有属性计算得到所需要的属性；&lt;/li&gt;
&lt;li&gt;原理：底层借助了 &lt;code&gt;Objcet.defineproperty&lt;/code&gt;  方法提供的 &lt;code&gt;getter&lt;/code&gt;  和 &lt;code&gt;setter&lt;/code&gt; ；&lt;/li&gt;
&lt;li&gt;优势：与 methods 实现相比，内部有缓存机制（复用），效率更高，调试方便；&lt;/li&gt;
&lt;li&gt;计算属性最终会出现在 vm 上，直接读取即可&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;**get ()** 的执行：&lt;/p&gt;
&lt;p&gt;初次读取时会执行一次，当依赖的数据（已定义的属性）发生改变时会再次被调用；&lt;/p&gt;
&lt;p&gt;**set ()** 的执行：&lt;/p&gt;
&lt;p&gt;计算属性被修改时被调用，用于引起计算时所依赖的数据发生改变；&lt;/p&gt;
&lt;p&gt;代码实例：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;body&amp;gt;
    &amp;lt;div id=&amp;quot;root&amp;quot;&amp;gt;
        姓:&amp;lt;input type=&amp;quot;text&amp;quot; v-model=&amp;quot;firstname&amp;quot;&amp;gt;&amp;lt;br&amp;gt;
        名:&amp;lt;input type=&amp;quot;text&amp;quot; v-model=&#39;lastname&#39;&amp;gt;&amp;lt;br&amp;gt;
        姓名：&amp;lt;span&amp;gt;&amp;#123;&amp;#123;fullname&amp;#125;&amp;#125;&amp;lt;/span&amp;gt;
    &amp;lt;/div&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;script&amp;gt;
    const vm = new Vue(&amp;#123;
        el: &#39;#root&#39;,
        data: &amp;#123;
            firstname: &#39;张&#39;,
            lastname: &#39;三&#39;,
        &amp;#125;,
        //完整写法
        computed: &amp;#123;
            fullname: &amp;#123;
                get() &amp;#123;
                    return this.firstname.slice(0, 2) + &#39;-&#39; + this.lastname
                &amp;#125;,
                set(value) &amp;#123;
                    console.log(&#39;set&#39;, value)
                    const arr = value.split(&#39;-&#39;)
                    this.firstname = arr[0]
                    this.lastname = arr[1]
                &amp;#125;
            &amp;#125;
        &amp;#125;,
    &amp;#125;)
&amp;lt;/script&amp;gt;
//简写(省略set)
fullName()&amp;#123;
	console.log(&#39;get被调用了&#39;)
	return this.firstName + &#39;-&#39; + this.lastName
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;监视属性watch&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#监视属性watch&#34;&gt;#&lt;/a&gt; 监视属性 watch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;使用方法：通过 vm 对象的 &lt;code&gt;$watch()&lt;/code&gt;  或 &lt;code&gt;watch&lt;/code&gt;  属性配置来监视指定的属性；&lt;/li&gt;
&lt;li&gt;功能：当被监视的属性变化时，回调函数自动调用，进行相关操作；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;深度监视&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Vue 中的 watch 默认不监测对象内部值的改变（一层）。&lt;/li&gt;
&lt;li&gt;配置 deep:true 可以监测对象内部值改变（多层）。&lt;/li&gt;
&lt;li&gt;备注：&lt;/li&gt;
&lt;li&gt;(1). Vue 自身可以监测对象内部值的改变，但 Vue 提供的 watch 默认不可以！&lt;/li&gt;
&lt;li&gt;(2). 使用 watch 时根据数据的具体结构，决定是否采用深度监视。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;代码实例：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;//watch属性配置
watch:&amp;#123;
	isHot:&amp;#123;
		immediate:true, //初始化时让handler调用一下
		handler(newValue,oldValue)&amp;#123;
			console.log(&#39;isHot被修改了&#39;,newValue,oldValue)
		&amp;#125;，
  	
	&amp;#125;
&amp;#125;
//$watch()方法配置
vm.$watch(&#39;isHot&#39;,&amp;#123;
	immediate:true, //初始化时让handler调用一下
	handler(newValue,oldValue)&amp;#123;
		console.log(&#39;isHot被修了&#39;,newValue,oldValue)
	&amp;#125;
&amp;#125;)
//深度监视
numbers:&amp;#123;
	deep:true,
	handler()&amp;#123;
		console.log(&#39;numbers改变了&#39;)
	&amp;#125;
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;watch 属性的简写&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;当 watch 属性的配置项只有 handler 的时候&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;//正常写法
//第一种
isHot:&amp;#123;
	// immediate:true, //初始化时让handler调用一下
	// deep:true,//深度监视
	handler(newValue,oldValue)&amp;#123;
		console.log(&#39;isHot被修改了&#39;,newValue,oldValue)
	&amp;#125;
&amp;#125;
//第二种
vm.$watch(&#39;isHot&#39;,&amp;#123;
	immediate:true, //初始化时让handler调用一下
	handler(newValue,oldValue)&amp;#123;
		console.log(&#39;isHot被修了&#39;,newValue,oldValue)
	&amp;#125;
&amp;#125;)

//简写
//第一种
isHot(newValue,oldValue)&amp;#123;
	console.log(&#39;isHot被修改了&#39;,newValue,oldValue,this)
&amp;#125; 
//第二种
vm.$watch(&#39;isHot&#39;，function(newValue,oldValue)&amp;#123;
	console.log(&#39;isHot被修了&#39;,newValue,oldValue)
&amp;#125;)
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;列表过滤与排序&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#列表过滤与排序&#34;&gt;#&lt;/a&gt; 列表过滤与排序&lt;/h3&gt;
&lt;p&gt;一般采用计算属性更为简单方便&lt;/p&gt;
&lt;p&gt;代码实例：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;//关键字搜索列表
&amp;lt;body&amp;gt;
    &amp;lt;div id=&amp;quot;root&amp;quot;&amp;gt;
        &amp;lt;h2&amp;gt;人员列表&amp;lt;/h2&amp;gt;
        &amp;lt;input type=&amp;quot;text&amp;quot; v-model=&#39;keyWord&#39; placeholder=&amp;quot;请输入名字&amp;quot;&amp;gt;
        &amp;lt;ul&amp;gt;
            &amp;lt;li v-for=&amp;quot;(p,index) of filperson1&amp;quot; :key=&#39;id&#39;&amp;gt;
                &amp;#123;&amp;#123;p.name&amp;#125;&amp;#125;--&amp;#123;&amp;#123;p.age&amp;#125;&amp;#125;--&amp;#123;&amp;#123;p.sex&amp;#125;&amp;#125;
            &amp;lt;/li&amp;gt;
        &amp;lt;/ul&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;script&amp;gt;
    const vm = new Vue(&amp;#123;
        el: &#39;#root&#39;,
        data: &amp;#123;
            keyWord: &#39;&#39;,
            persons: [
                &amp;#123; id: &#39;001&#39;, name: &#39;马冬梅&#39;, age: 18, sex: &#39;女&#39; &amp;#125;,
                &amp;#123; id: &#39;002&#39;, name: &#39;周冬雨&#39;, age: 19, sex: &#39;女&#39; &amp;#125;,
                &amp;#123; id: &#39;003&#39;, name: &#39;周杰伦&#39;, age: 20, sex: &#39;男&#39; &amp;#125;,
                &amp;#123; id: &#39;004&#39;, name: &#39;温兆伦&#39;, age: 20, sex: &#39;男&#39; &amp;#125;,
            ],
        &amp;#125;,
        computed: &amp;#123;
            filperson1() &amp;#123;
                return this.persons.filter((p) =&amp;gt; &amp;#123;
                    return p.name.indexOf(this.keyWord) !== -1
                &amp;#125;)
            &amp;#125;
        &amp;#125;
    &amp;#125;)
&amp;lt;/script&amp;gt;

//列表过滤与排序
&amp;lt;body&amp;gt;
    &amp;lt;div id=&amp;quot;root&amp;quot;&amp;gt;
        &amp;lt;h2&amp;gt;人员列表&amp;lt;/h2&amp;gt;
        &amp;lt;input type=&amp;quot;text&amp;quot; v-model=&#39;keyWord&#39; placeholder=&amp;quot;请输入名字&amp;quot;&amp;gt;
        &amp;lt;button @click=&#39;softType=2&#39;&amp;gt;年龄升序&amp;lt;/button&amp;gt;
        &amp;lt;button @click=&#39;softType=1&#39;&amp;gt;年龄降序&amp;lt;/button&amp;gt;
        &amp;lt;button @click=&#39;softType=0&#39;&amp;gt;原顺序&amp;lt;/button&amp;gt;
        &amp;lt;ul&amp;gt;
            &amp;lt;li v-for=&amp;quot;(p,index) of filperson1&amp;quot; :key=&#39;id&#39;&amp;gt;
                &amp;#123;&amp;#123;p.name&amp;#125;&amp;#125;--&amp;#123;&amp;#123;p.age&amp;#125;&amp;#125;--&amp;#123;&amp;#123;p.sex&amp;#125;&amp;#125;
            &amp;lt;/li&amp;gt;
        &amp;lt;/ul&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;script&amp;gt;
    const vm = new Vue(&amp;#123;
        el: &#39;#root&#39;,
        data: &amp;#123;
            keyWord: &#39;&#39;,
            softType: 0,
            persons: [
                &amp;#123; id: &#39;001&#39;, name: &#39;马冬梅&#39;, age: 30, sex: &#39;女&#39; &amp;#125;,
                &amp;#123; id: &#39;002&#39;, name: &#39;周冬雨&#39;, age: 19, sex: &#39;女&#39; &amp;#125;,
                &amp;#123; id: &#39;003&#39;, name: &#39;周杰伦&#39;, age: 20, sex: &#39;男&#39; &amp;#125;,
                &amp;#123; id: &#39;004&#39;, name: &#39;温兆伦&#39;, age: 15, sex: &#39;男&#39; &amp;#125;,
            ],
        &amp;#125;,
        computed: &amp;#123;
            filperson1() &amp;#123;
                const arr = this.persons.filter((p) =&amp;gt; &amp;#123;
                    return p.name.indexOf(this.keyWord) !== -1
                &amp;#125;)
                if (this.softType) &amp;#123;
                    arr.sort((p1, p2) =&amp;gt; &amp;#123;
                        return this.softType === 1 ? p2.age - p1.age : p1.age - p2.age
                    &amp;#125;)
                &amp;#125;
                return arr
            &amp;#125;,

        &amp;#125;
    &amp;#125;)
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;vue监视数据的原理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vue监视数据的原理&#34;&gt;#&lt;/a&gt; Vue 监视数据的原理&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Vue 会监视 data 中所有层次的数据；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如何检测对象中的数据？&lt;/p&gt;
&lt;p&gt;通过 setter 实现监视，且要做 new Vue 时就传入要检测的数据。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;对象中后追加的属性，Vue 默认不做响应式处理；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如需给后添加的属性做响应式，请使用如下 API：&lt;/p&gt;
&lt;p&gt;Vue.set (target,propertyName/index,value) 或&lt;/p&gt;
&lt;p&gt;vm.$set(target,propertyName/index,value)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如何检测数组中的数据？&lt;/p&gt;
&lt;p&gt;通过包裹数组更新元素的方法实现，本质就是做了两件事：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;调用原生对应的方法对数组进行了更新；&lt;/li&gt;
&lt;li&gt;重新解析模板，进而更新页面&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 Vue 修改数组中的某个元素时一定要用如下方法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;改变原数组：&lt;/p&gt;
&lt;p&gt;push()  pop()  shift()  unshift()  splice()  sort()  reverse()  Vue.set()  vm.$set()&lt;/p&gt;
&lt;p&gt;(使用 Vue.set () 与 vm.$set () 时不能给 vm 或 vm 的跟数据对象添加属性)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;替换数组：&lt;/p&gt;
&lt;p&gt;filter()  concat()  slice()&lt;/p&gt;
&lt;p&gt;(它们不会变更原数组，而总是返回一个新数组，当使用非变更方法时，可以使用新数组替换旧数组)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;代码实例：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
	&amp;lt;head&amp;gt;
		&amp;lt;meta charset=&amp;quot;UTF-8&amp;quot; /&amp;gt;
		&amp;lt;title&amp;gt;总结数据监视&amp;lt;/title&amp;gt;
		&amp;lt;style&amp;gt;
			button&amp;#123;
				margin-top: 10px;
			&amp;#125;
		&amp;lt;/style&amp;gt;
		&amp;lt;!-- 引入Vue --&amp;gt;
		&amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;../js/vue.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
	&amp;lt;/head&amp;gt;
	&amp;lt;body&amp;gt;
		&amp;lt;!--
 
		--&amp;gt;
		&amp;lt;!-- 准备好一个容器--&amp;gt;
		&amp;lt;div id=&amp;quot;root&amp;quot;&amp;gt;
			&amp;lt;h1&amp;gt;学生信息&amp;lt;/h1&amp;gt;
			&amp;lt;button @click=&amp;quot;student.age++&amp;quot;&amp;gt;年龄+1岁&amp;lt;/button&amp;gt; &amp;lt;br/&amp;gt;
			&amp;lt;button @click=&amp;quot;addSex&amp;quot;&amp;gt;添加性别属性，默认值：男&amp;lt;/button&amp;gt; &amp;lt;br/&amp;gt;
			&amp;lt;button @click=&amp;quot;student.sex = &#39;未知&#39; &amp;quot;&amp;gt;修改性别&amp;lt;/button&amp;gt; &amp;lt;br/&amp;gt;
			&amp;lt;button @click=&amp;quot;addFriend&amp;quot;&amp;gt;在列表首位添加一个朋友&amp;lt;/button&amp;gt; &amp;lt;br/&amp;gt;
			&amp;lt;button @click=&amp;quot;updateFirstFriendName&amp;quot;&amp;gt;修改第一个朋友的名字为：张三&amp;lt;/button&amp;gt; &amp;lt;br/&amp;gt;
			&amp;lt;button @click=&amp;quot;addHobby&amp;quot;&amp;gt;添加一个爱好&amp;lt;/button&amp;gt; &amp;lt;br/&amp;gt;
			&amp;lt;button @click=&amp;quot;updateHobby&amp;quot;&amp;gt;修改第一个爱好为：开车&amp;lt;/button&amp;gt; &amp;lt;br/&amp;gt;
			&amp;lt;button @click=&amp;quot;removeSmoke&amp;quot;&amp;gt;过滤掉爱好中的抽烟&amp;lt;/button&amp;gt; &amp;lt;br/&amp;gt;
			&amp;lt;h3&amp;gt;姓名：&amp;#123;&amp;#123;student.name&amp;#125;&amp;#125;&amp;lt;/h3&amp;gt;
			&amp;lt;h3&amp;gt;年龄：&amp;#123;&amp;#123;student.age&amp;#125;&amp;#125;&amp;lt;/h3&amp;gt;
			&amp;lt;h3 v-if=&amp;quot;student.sex&amp;quot;&amp;gt;性别：&amp;#123;&amp;#123;student.sex&amp;#125;&amp;#125;&amp;lt;/h3&amp;gt;
			&amp;lt;h3&amp;gt;爱好：&amp;lt;/h3&amp;gt;
			&amp;lt;ul&amp;gt;
				&amp;lt;li v-for=&amp;quot;(h,index) in student.hobby&amp;quot; :key=&amp;quot;index&amp;quot;&amp;gt;
					&amp;#123;&amp;#123;h&amp;#125;&amp;#125;
				&amp;lt;/li&amp;gt;
			&amp;lt;/ul&amp;gt;
			&amp;lt;h3&amp;gt;朋友们：&amp;lt;/h3&amp;gt;
			&amp;lt;ul&amp;gt;
				&amp;lt;li v-for=&amp;quot;(f,index) in student.friends&amp;quot; :key=&amp;quot;index&amp;quot;&amp;gt;
					&amp;#123;&amp;#123;f.name&amp;#125;&amp;#125;--&amp;#123;&amp;#123;f.age&amp;#125;&amp;#125;
				&amp;lt;/li&amp;gt;
			&amp;lt;/ul&amp;gt;
		&amp;lt;/div&amp;gt;
	&amp;lt;/body&amp;gt;

	&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;
		Vue.config.productionTip = false //阻止 vue 在启动时生成生产提示。

		const vm = new Vue(&amp;#123; 
			el:&#39;#root&#39;,
			data:&amp;#123;
				student:&amp;#123;
					name:&#39;tom&#39;,
					age:18,
					hobby:[&#39;抽烟&#39;,&#39;喝酒&#39;,&#39;烫头&#39;],
					friends:[
						&amp;#123;name:&#39;jerry&#39;,age:35&amp;#125;,
						&amp;#123;name:&#39;tony&#39;,age:36&amp;#125;
					]
				&amp;#125;
			&amp;#125;,
			methods: &amp;#123;
				addSex()&amp;#123;
					// Vue.set(this.student,&#39;sex&#39;,&#39;男&#39;)
					this.$set(this.student,&#39;sex&#39;,&#39;男&#39;)
				&amp;#125;,
				addFriend()&amp;#123;
					this.student.friends.unshift(&amp;#123;name:&#39;jack&#39;,age:70&amp;#125;)
				&amp;#125;,
				updateFirstFriendName()&amp;#123;
					this.student.friends[0].name = &#39;张三&#39;
				&amp;#125;,
				addHobby()&amp;#123;
					this.student.hobby.push(&#39;学习&#39;)
				&amp;#125;,
				updateHobby()&amp;#123;
					// this.student.hobby.splice(0,1,&#39;开车&#39;)
					// Vue.set(this.student.hobby,0,&#39;开车&#39;)
					this.$set(this.student.hobby,0,&#39;开车&#39;)
				&amp;#125;,
				removeSmoke()&amp;#123;
					this.student.hobby = this.student.hobby.filter((h)=&amp;gt;&amp;#123;
						return h !== &#39;抽烟&#39;
					&amp;#125;)
				&amp;#125;
			&amp;#125;
		&amp;#125;)
	&amp;lt;/script&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;样式绑定&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#样式绑定&#34;&gt;#&lt;/a&gt; 样式绑定&lt;/h2&gt;
&lt;h3 id=&#34;class绑定&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#class绑定&#34;&gt;#&lt;/a&gt; class 绑定&lt;/h3&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;:class=&#39;xxx&#39;  //xxx可以是字符串、数组或对象
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;字符串写法&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;div class=&amp;quot;basic&amp;quot; :class=&#39;mood&#39; @click=&#39;changemood&#39;&amp;gt;&amp;#123;&amp;#123;name&amp;#125;&amp;#125;&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;适用于：样式的类名不确定，要动态获取；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;数组写法&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;div class=&amp;quot;basic&amp;quot; :class=&#39;classArr&#39; @click=&#39;changemood&#39;&amp;gt;&amp;#123;&amp;#123;name&amp;#125;&amp;#125;&amp;lt;/div&amp;gt;
//classArr是个数组，可以包含多个样式类名
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;适用于：要绑定多个样式，个数不确定，名字也不确定；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;对象写法&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;div class=&amp;quot;basic&amp;quot; :class=&amp;quot;classObj&amp;quot;&amp;gt;&amp;#123;&amp;#123;name&amp;#125;&amp;#125;&amp;lt;/div&amp;gt; 
//classObj是个对象，对象的key为样式类名，其对应的值为ture或false
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;适用于：要绑定多个样式，个数确定，名字也确定，但不确定用不用；&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;style绑定&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#style绑定&#34;&gt;#&lt;/a&gt; style 绑定&lt;/h3&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;:style=&#39;xxx&#39;  //xxx可以是对象或数组
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;对象写法&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;div class=&amp;quot;basic&amp;quot; :style=&amp;quot;styleObj&amp;quot;&amp;gt;&amp;#123;&amp;#123;name&amp;#125;&amp;#125;&amp;lt;/div&amp;gt; 
//styleObj是个对象，对象的key为style属性值，其值为具体数额
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;数组写法&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;div class=&amp;quot;basic&amp;quot; :style=&amp;quot;styleArr&amp;quot;&amp;gt;&amp;#123;&amp;#123;name&amp;#125;&amp;#125;&amp;lt;/div&amp;gt; 
//styleArr是个数组，数组包含多个样式对象(即对象写法)
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;vue的数组方法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vue的数组方法&#34;&gt;#&lt;/a&gt; Vue 的数组方法&lt;/h2&gt;
&lt;h3 id=&#34;filter&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#filter&#34;&gt;#&lt;/a&gt; filter()&lt;/h3&gt;
&lt;p&gt;​	filter () 方法创建一个新的数组，新数组中的元素是通过检查指定数组中符合条件的所有元素。&lt;/p&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; arr&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;33&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;40&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; arr1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; arr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;filter&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;item&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; item &lt;span class=&#34;token operator&#34;&gt;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;18&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;arr1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// [32, 33, 40]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;map&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#map&#34;&gt;#&lt;/a&gt; map()&lt;/h3&gt;
&lt;p&gt;​	map () 方法返回一个新数组，数组中的元素为原始数组元素调用函数处理后的值。&lt;/p&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; arr&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;25&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; arr1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; arr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;item&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; item&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;arr1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// [6, 11, 18, 27]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;foreach&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#foreach&#34;&gt;#&lt;/a&gt; forEach()&lt;/h3&gt;
&lt;p&gt;​	forEach () 方法用于调用数组的每个元素，并将元素传递给回调函数。（对空数组是不会执行回调函数的）&lt;/p&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; arr&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;25&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; arr1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;arr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;forEach&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;item&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; arr1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;item&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;arr1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// [4, 9, 16, 25]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;find&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#find&#34;&gt;#&lt;/a&gt; find()&lt;/h3&gt;
&lt;p&gt;​	find () 方法返回通过测试（函数内判断）的数组的第一个元素的值，之后的值不会再调用执行函数，如果没有符合条件的元素返回 undefined。（对于空数组，函数是不会执行的）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;findIndex()&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	findIndex () 方法返回传入一个测试条件（函数）符合条件的数组第一个元素位置，之后的值不会再调用执行函数，如果没有符合条件的元素返回 - 1.（对于空数组，函数是不会执行的）&lt;/p&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//find()&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; arr&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;25&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; b1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; arr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;find&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;item&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; item&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; c1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; arr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;find&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;item&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; item&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;b1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 16&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;c1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// undefined&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//findIndex()&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; b2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; arr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;findIndex&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;item&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; item&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; c2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; arr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;findIndex&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;item&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; item&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;b2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 2&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;c2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// -1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;someevery&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#someevery&#34;&gt;#&lt;/a&gt; some()&amp;amp;every()&lt;/h3&gt;
&lt;p&gt;​	some () 方法用于&lt;strong&gt;依次&lt;/strong&gt;检测数组中的元素是否满足指定条件（函数提供）。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果有一个元素满足条件，则表达式返回 true , 剩余的元素不会再执行检测。&lt;/li&gt;
&lt;li&gt;如果没有满足条件的元素，则返回 false。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;every () 方法用于检测数组&lt;strong&gt;所有&lt;/strong&gt;元素是否都符合指定条件（通过函数提供）。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果数组中检测到有一个元素不满足，则整个表达式返回 false ，且剩余的元素不会再进行检测。&lt;/li&gt;
&lt;li&gt;如果所有元素都满足条件，则返回 true。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;​	两者均不会对空数组进行检测，且不会改变原始数组。&lt;/p&gt;
&lt;h3 id=&#34;fill&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#fill&#34;&gt;#&lt;/a&gt; fill()&lt;/h3&gt;
&lt;p&gt;​	fill () 方法用于将一个固定值替换数组的元素.&lt;/p&gt;
&lt;p&gt;该方法会改变原始数组，但不会对空数组进行填充。&lt;/p&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; arr1&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;25&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; b &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; arr1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;fill&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; arr2&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;25&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; c &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; arr2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;fill&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 2 为开始填充的起始位置，4 为结束位置（不包含）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; arr3&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; d &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; arr3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;fill&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;arr1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;   &lt;span class=&#34;token comment&#34;&gt;// [100, 100, 100, 100]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// [100, 100, 100, 100]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;arr2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// [4, 9, 100, 100]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;c&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// [4, 9, 100, 100]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;arr3&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// []&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;d&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// []&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;表单数据收集&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#表单数据收集&#34;&gt;#&lt;/a&gt; 表单数据收集&lt;/h2&gt;
&lt;p&gt;​	Vue 的表单数据收集一般使用 v-model (双向数据绑定) 自动收集数据。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;v-model 的三个修饰符：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;lazy&lt;/code&gt; ：失去焦点后再收集数据；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;number&lt;/code&gt; ：输入字符串转为有效的数字；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;trim&lt;/code&gt; ：输入的首尾空格将被过滤；&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;输入栏&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#输入栏&#34;&gt;#&lt;/a&gt; 输入栏&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;text&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;text&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;v-model&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;xxx&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211223144637.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;password&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;input type=&#39;password&#39; v-model=&#39;xxx&#39;/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211223144732.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;number&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;input type=&#39;number&#39; v-model.number=&#39;xxx&#39;/&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;​	需配合 v-model 的 &lt;code&gt;.number&lt;/code&gt;  修饰符使用，将输入的字符串转为有效的数字；&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211223144841.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;radio&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;男&amp;lt;input type=&amp;quot;radio&amp;quot; name=&#39;sex&#39; v-model=&#39;userinfo.sex&#39; value=&amp;quot;man&amp;quot;&amp;gt;
女&amp;lt;input type=&amp;quot;radio&amp;quot; name=&#39;sex&#39; v-model=&#39;userinfo.sex&#39; value=&amp;quot;woman&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;ol&gt;
&lt;li&gt;如果需要多选一，则需要配置 name 属性；&lt;/li&gt;
&lt;li&gt;v-model 收集的 value 值，故一定需要给标签配置 value 值；&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211223145454.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;checkbox&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;input type=&amp;quot;checkbox&amp;quot; v-model=&#39;userinfo.hobby&#39; value=&amp;quot;stydy&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;ol&gt;
&lt;li&gt;如果没有配置其 value 属性，则收集的为 checked（勾选 or 未勾选，布尔值）；&lt;/li&gt;
&lt;li&gt;如果配置了其 value 属性，还需要将 v-model 的初始值设为数组，这样才能收集 value 组成的数组，否则收集的还是 checked；&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211223150622.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;select&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;所属校区
&amp;lt;select v-model=&#39;userinfo.school&#39;&amp;gt;                 		&amp;lt;option value=&amp;quot;&amp;quot;&amp;gt;请选择校区&amp;lt;/option&amp;gt;
    &amp;lt;option value=&amp;quot;shahe&amp;quot;&amp;gt;沙河&amp;lt;/option&amp;gt;            	&amp;lt;option value=&amp;quot;qingshuihe&amp;quot;&amp;gt;清水河&amp;lt;/option&amp;gt;
&amp;lt;/select&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211223150858.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;textarea&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;textarea v-model.lazy=&#39;userinfo.other&#39;&amp;gt;&amp;lt;/textarea&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;​	一般配合 v-model 的 &lt;code&gt;.lazy&lt;/code&gt;  修饰符使用，来减少无效开销；&lt;/p&gt;
&lt;h3 id=&#34;表单代码实例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#表单代码实例&#34;&gt;#&lt;/a&gt; 表单代码实例&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;quot;zh-cn&amp;quot;&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta charset=&amp;quot;UTF-8&amp;quot;&amp;gt;
    &amp;lt;meta http-equiv=&amp;quot;X-UA-Compatible&amp;quot; content=&amp;quot;IE=edge&amp;quot;&amp;gt;
    &amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=device-width, initial-scale=1.0&amp;quot;&amp;gt;
    &amp;lt;title&amp;gt;收集表单数据&amp;lt;/title&amp;gt;
    &amp;lt;script src=&amp;quot;../js/vue.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;/head&amp;gt;

&amp;lt;body&amp;gt;
    &amp;lt;div id=&amp;quot;root&amp;quot;&amp;gt;
        &amp;lt;form @submit.prevent=&#39;demo&#39;&amp;gt;
            账号:&amp;lt;input type=&amp;quot;text&amp;quot; v-model.trim=&#39;userinfo.account&#39;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;
            密码:&amp;lt;input type=&amp;quot;password&amp;quot; v-model=&#39;userinfo.password&#39;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;
            年龄:&amp;lt;input type=&amp;quot;number&amp;quot; v-model.number=&#39;userinfo.age&#39;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;
            性别:
            男&amp;lt;input type=&amp;quot;radio&amp;quot; name=&#39;sex&#39; v-model=&#39;userinfo.sex&#39; value=&amp;quot;man&amp;quot;&amp;gt;
            女&amp;lt;input type=&amp;quot;radio&amp;quot; name=&#39;sex&#39; v-model=&#39;userinfo.sex&#39; value=&amp;quot;woman&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;
            爱好:
            学习&amp;lt;input type=&amp;quot;checkbox&amp;quot; v-model=&#39;userinfo.hobby&#39; value=&amp;quot;stydy&amp;quot;&amp;gt;
            打游戏&amp;lt;input type=&amp;quot;checkbox&amp;quot; v-model=&#39;userinfo.hobby&#39; value=&amp;quot;game&amp;quot;&amp;gt;
            吃饭&amp;lt;input type=&amp;quot;checkbox&amp;quot; v-model=&#39;userinfo.hobby&#39; value=&amp;quot;eat&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;
            所属校区
            &amp;lt;select v-model=&#39;userinfo.school&#39;&amp;gt;
                &amp;lt;option value=&amp;quot;&amp;quot;&amp;gt;请选择校区&amp;lt;/option&amp;gt;
                &amp;lt;option value=&amp;quot;shahe&amp;quot;&amp;gt;沙河&amp;lt;/option&amp;gt;
                &amp;lt;option value=&amp;quot;qingshuihe&amp;quot;&amp;gt;清水河&amp;lt;/option&amp;gt;
            &amp;lt;/select&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;
            其它信息:
            &amp;lt;textarea v-model.lazy=&#39;userinfo.other&#39;&amp;gt;&amp;lt;/textarea&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;
            &amp;lt;input type=&amp;quot;checkbox&amp;quot; v-model=&#39;userinfo.agree&#39;&amp;gt; 阅读并接收&amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;《用户协议》&amp;lt;/a&amp;gt;
            &amp;lt;button&amp;gt;提交&amp;lt;/button&amp;gt;
        &amp;lt;/form&amp;gt;
    &amp;lt;/div&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;script&amp;gt;
    new Vue(&amp;#123;
        el: &#39;#root&#39;,
        data: &amp;#123;
            userinfo: &amp;#123;
                account: &#39;&#39;,
                password: &#39;&#39;,
                age: 18,
                sex: &#39;man&#39;,
                hobby: [],
                school: &#39;&#39;,
                other: &#39;&#39;,
                agree: &#39;&#39;,
            &amp;#125;
        &amp;#125;,
        methods: &amp;#123;
            demo() &amp;#123;
                console.log(JSON.stringify(this.userinfo))
            &amp;#125;
        &amp;#125;,
    &amp;#125;)
&amp;lt;/script&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;生命周期&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#生命周期&#34;&gt;#&lt;/a&gt; 生命周期&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;官方生命周期图：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211223202830.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;细节解释&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211223203006.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;常用的生命周期方法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#常用的生命周期方法&#34;&gt;#&lt;/a&gt; 常用的生命周期方法&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;mounted()&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	【初始化操作】&lt;/p&gt;
&lt;p&gt;​	发送 ajax 请求，启动定时器、绑定自定义事件、订阅消息等异步任务；&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;beforeDestory()&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	【收尾工作】&lt;/p&gt;
&lt;p&gt;​	清除定时器、解绑自定义事件、取消订阅消息等收尾工作；&lt;/p&gt;
&lt;h2 id=&#34;vue组件的使用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vue组件的使用&#34;&gt;#&lt;/a&gt; Vue 组件的使用&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;组件的定义：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	实现应用中局部功能代码和资源的集合。&lt;/p&gt;
&lt;h3 id=&#34;非单文件组件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#非单文件组件&#34;&gt;#&lt;/a&gt; 非单文件组件&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;使用组件的三大步骤：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;#extend&#34;&gt;定义组件（创建组件）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#component&#34;&gt;注册组件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#template&#34;&gt;使用组件（编写组件结构）&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;span id=&#39;extend&#39;&gt;&lt;strong&gt;定义组件&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;​	使用 &lt;code&gt;Vue.extend(options)&lt;/code&gt;  创建，其中 &lt;code&gt;options&lt;/code&gt;  和 &lt;code&gt;new Vue（options)&lt;/code&gt;  时传入的那个 &lt;code&gt;options&lt;/code&gt;  几乎一样，但有以下区别:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;不要写 &lt;code&gt;el&lt;/code&gt; —— 最终所有的组件都要经过一个 vm 的管理，由 vm 中的 &lt;code&gt;el&lt;/code&gt;  决定服务哪个容器；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;data&lt;/code&gt;  必须写成函数 —— 避免组件被复用时，数据存在引用关系；&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;span id=&#39;component&#39;&gt;&lt;strong&gt;注册组件&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;局部注册： &lt;code&gt;new Vue&lt;/code&gt;  的时候传入 &lt;code&gt;components&lt;/code&gt;  选项&lt;/li&gt;
&lt;li&gt;全局注册： &lt;code&gt;Vue.component&lt;/code&gt;  (‘组件名’, 组件)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;span id=&#39;template&#39;&gt;&lt;strong&gt;使用组件&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;使用 Vue 的 template 属性创建组件结构，用两个顿号（`）包裹结构。&lt;/p&gt;
&lt;p&gt;非单文件代码实例：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;

&amp;lt;head&amp;gt;
  &amp;lt;meta charset=&amp;quot;UTF-8&amp;quot; /&amp;gt;
  &amp;lt;title&amp;gt;几个注意点&amp;lt;/title&amp;gt;
  &amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;../js/vue.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;/head&amp;gt;

&amp;lt;body&amp;gt;
  &amp;lt;!-- 准备好一个容器--&amp;gt;
  &amp;lt;div id=&amp;quot;root&amp;quot;&amp;gt;
    &amp;lt;h1&amp;gt;&amp;#123;&amp;#123;msg&amp;#125;&amp;#125;&amp;lt;/h1&amp;gt;
    &amp;lt;school&amp;gt;&amp;lt;/school&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;

&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;
  Vue.config.productionTip = false

  //定义组件
  const s = Vue.extend(&amp;#123;
    name: &#39;atguigu&#39;,
    template: `
				&amp;lt;div&amp;gt;
					&amp;lt;h2&amp;gt;学校名称：&amp;#123;&amp;#123;name&amp;#125;&amp;#125;&amp;lt;/h2&amp;gt;	
					&amp;lt;h2&amp;gt;学校地址：&amp;#123;&amp;#123;address&amp;#125;&amp;#125;&amp;lt;/h2&amp;gt;	
				&amp;lt;/div&amp;gt;
			`,
    data() &amp;#123;
      return &amp;#123;
        name: &#39;尚硅谷&#39;,
        address: &#39;北京&#39;
      &amp;#125;
    &amp;#125;
  &amp;#125;)

  new Vue(&amp;#123;
    el: &#39;#root&#39;,
    data: &amp;#123;
      msg: &#39;欢迎学习Vue!&#39;
    &amp;#125;,
    components: &amp;#123;
      school: s
    &amp;#125;
  &amp;#125;)
&amp;lt;/script&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;注意项&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#注意项&#34;&gt;#&lt;/a&gt; 注意项&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;关于组件名&lt;/strong&gt;&lt;br /&gt;
一个单词组成：&lt;br /&gt;
第一种写法（首字母小写）：school&lt;br /&gt;
 第二种写法（首字母大写）：School&lt;/p&gt;
&lt;p&gt;多个单词组成：&lt;br /&gt;
第一种写法（kebab-case 命名）：my-school&lt;br /&gt;
 第二种写法（CamelCase 命名）：MySchool（需要 Vue 脚手架支持）&lt;/p&gt;
&lt;p&gt;备注&lt;br /&gt;
① 组件名尽可能回避 HTML 中已有的元素名称，例如 h2、H2；&lt;br /&gt;
② 可以使用 name 配置项指定组件在开发者工具中呈现的名字；&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;关于组件标签&lt;/strong&gt;&lt;br /&gt;
第一种写法：&lt;school&gt;&lt;/school&gt;&lt;br /&gt;
第二种写法：&lt;school/&gt; (不使用脚手架会导致后续组件不能渲染)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;简写方式&lt;/strong&gt;&lt;br /&gt;
 &lt;code&gt;const school = Vue.extend(options) &lt;/code&gt; 可以简写成 &lt;code&gt;const school = options&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;vuecomponent&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vuecomponent&#34;&gt;#&lt;/a&gt; VueComponent&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;app 组件本质是一个名为 VueComponent 的构造函数，且不是程序员定义的，是 Vue.extend 生成的；&lt;/li&gt;
&lt;li&gt;我们只需要写&lt;app/&gt;或&lt;app&gt;&lt;/app&gt;，Vue 解析时会帮我们创建 app 组件的实例对象，即 Vue 帮我们执行 new VueComponent (options);&lt;/li&gt;
&lt;li&gt;特别注意：每次调用 Vue.extend，返回的都是一个全新的 VueComponent;&lt;/li&gt;
&lt;li&gt;关于 this 指向&lt;br /&gt;
① 组件配置中：data 函数、methods 中的函数、watch 中的函数、computed 中的函数 它们的 this 均是【VueComponent 实例对象】&lt;br /&gt;
② new Vue (options) 配置中：data 函数、methods 中的函数、watch 中的函数、computed 中的函数 它们的 this 均是【Vue 实例对象】;&lt;/li&gt;
&lt;li&gt;VueComponent 的实例对象，以后简称 vc（也可称之为：组件实例对象）;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;一个重要的内置关系&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;VueComponent.prototype.__proto__ === Vue.prototype
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这样组件实例对象 vc 就可以访问到 Vue 原型上的属性和方法。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211224144834.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;单文件组件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#单文件组件&#34;&gt;#&lt;/a&gt; 单文件组件&lt;/h3&gt;
&lt;p&gt;主要由三部分组成：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;#vue&#34;&gt;Vue 组件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#main&#34;&gt;main.js 文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#index&#34;&gt;index.html 文件&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;span id=&#39;vue&#39;&gt;&lt;strong&gt;Vue 组件&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;普通组件的组成&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;模板页面&lt;/li&gt;
&lt;li&gt;JS 模块对象&lt;/li&gt;
&lt;li&gt;样式&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;代码实例：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;//模板页面
&amp;lt;template&amp;gt;
  &amp;lt;div class=&amp;quot;demo&amp;quot;&amp;gt;
    &amp;lt;h2&amp;gt;学生名称:&amp;#123;&amp;#123; name &amp;#125;&amp;#125;&amp;lt;/h2&amp;gt;
    &amp;lt;h2&amp;gt;学生地址:&amp;#123;&amp;#123; address &amp;#125;&amp;#125;&amp;lt;/h2&amp;gt;
    &amp;lt;button @click=&amp;quot;showName&amp;quot;&amp;gt;&amp;lt;/button&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/template&amp;gt;

//JS模块对象
&amp;lt;script&amp;gt;
export default &amp;#123;
  name: &amp;quot;school&amp;quot;,
  data() &amp;#123;
    return &amp;#123;
      name: &amp;quot;Sakura&amp;quot;,
      address: &amp;quot;成都&amp;quot;,
    &amp;#125;;
  &amp;#125;,
  methods: &amp;#123;
    showName() &amp;#123;
      alert(this.name);
    &amp;#125;,
  &amp;#125;,
&amp;#125;;
&amp;lt;/script&amp;gt;

//样式
&amp;lt;style&amp;gt;
.demo &amp;#123;
  background: orange;
&amp;#125;
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;App.vue&lt;/p&gt;
&lt;p&gt;所有组件的父组件，用于调控和使用其它组件。&lt;/p&gt;
&lt;p&gt;代码实例：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;template&amp;gt;
  &amp;lt;div&amp;gt;
    &amp;lt;School&amp;gt;&amp;lt;/School&amp;gt;
    &amp;lt;Student&amp;gt;&amp;lt;/Student&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/template&amp;gt;

&amp;lt;script&amp;gt;
import School from &amp;quot;./School&amp;quot;;
import Student from &amp;quot;./Student.vue&amp;quot;;
export default &amp;#123;
  name: &amp;quot;App&amp;quot;,
  component: &amp;#123;
    School,
    Student,
  &amp;#125;,
&amp;#125;;
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;span id=&#39;main&#39;&gt;&lt;strong&gt;main.js 文件&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;代码实例：&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; App &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;./App.vue&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Vue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    el&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;#root&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    template&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token template-string&#34;&gt;&lt;span class=&#34;token template-punctuation string&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&amp;lt;App&gt;&amp;lt;/App&gt;&lt;/span&gt;&lt;span class=&#34;token template-punctuation string&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    component&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; App &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;span id=&#39;index&#39;&gt;&lt;strong&gt;index.html 文件&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;代码实例：&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token doctype&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;!&lt;/span&gt;&lt;span class=&#34;token doctype-tag&#34;&gt;DOCTYPE&lt;/span&gt; &lt;span class=&#34;token name&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;html&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;lang&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;zh-cn&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;head&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;meta&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;charset&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;UTF-8&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;meta&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;http-equiv&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;X-UA-Compatible&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;IE=edge&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;meta&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;viewport&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;width=device-width, initial-scale=1.0&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;单文件组件&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;head&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;root&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- &amp;lt;App&gt;&amp;lt;/App&gt; --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;../js/vue.js&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token script&#34;&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;./main.js&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token script&#34;&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;vue-cli&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vue-cli&#34;&gt;#&lt;/a&gt; Vue CLI&lt;/h2&gt;
&lt;h3 id=&#34;脚手架的安装&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#脚手架的安装&#34;&gt;#&lt;/a&gt; 脚手架的安装&lt;/h3&gt;
&lt;p&gt;暂略&lt;/p&gt;
&lt;h3 id=&#34;脚手架文件结构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#脚手架文件结构&#34;&gt;#&lt;/a&gt; 脚手架文件结构&lt;/h3&gt;
&lt;p&gt;├── node_modules&lt;br /&gt;
├── public&lt;br /&gt;
│   ├── favicon.ico: 页签图标&lt;br /&gt;
│   └── index.html: 主页面&lt;br /&gt;
├── src&lt;br /&gt;
│   ├── assets: 存放静态资源&lt;br /&gt;
│   │   └── logo.png&lt;br /&gt;
│   │── component: 存放组件&lt;br /&gt;
│   │   └── HelloWorld.vue&lt;br /&gt;
│   │── App.vue: 汇总所有组件&lt;br /&gt;
│   │── main.js: 入口文件&lt;br /&gt;
├── .gitignore: git 版本管制忽略的配置&lt;br /&gt;
├── babel.config.js: babel 的配置文件&lt;br /&gt;
├── package.json: 应用包配置文件&lt;br /&gt;
├── &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL1JFQURNRS5tZA==&#34;&gt;README.md&lt;/span&gt;: 应用描述文件&lt;br /&gt;
├── package-lock.json：包版本控制文件&lt;/p&gt;
&lt;h3 id=&#34;render&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#render&#34;&gt;#&lt;/a&gt; render()&lt;/h3&gt;
&lt;p&gt;vue.js 与 vue.runtime.xxx.js 的区别：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;vue.js 是完整版的 Vue，包含：核心功能 + 模板解析器。&lt;/li&gt;
&lt;li&gt;vue.runtime.xxx.js 是运行版的 Vue，只包含：核心功能；没有模板解析器。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;因为 vue.runtime.xxx.js 没有模板解析器，所以不能使用 template 这个配置项，需要使用 render 函数接收到的 createElement 函数去指定具体内容。&lt;/p&gt;
&lt;p&gt;代码实例：&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Vue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function-variable function&#34;&gt;render&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token parameter&#34;&gt;h&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;App&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;$mount&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;#app&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;个性化配置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#个性化配置&#34;&gt;#&lt;/a&gt; 个性化配置&lt;/h3&gt;
&lt;p&gt;​	先创建 vue.config.js 文件，再参考&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jbGkudnVlanMub3JnL3poL2NvbmZpZy8=&#34;&gt;配置参考 | Vue CLI (vuejs.org)&lt;/span&gt; 后将需要修改的部分写入文件。&lt;/p&gt;
&lt;h2 id=&#34;vue高级知识&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vue高级知识&#34;&gt;#&lt;/a&gt; Vue 高级知识&lt;/h2&gt;
&lt;h3 id=&#34;ref属性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ref属性&#34;&gt;#&lt;/a&gt; ref 属性&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;功能：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	被用来给元素或子组件注册引用信息（id 的替代者）。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;应用在 html 标签上获取的是真实 DOM 元素；&lt;/li&gt;
&lt;li&gt;应用在组件标签上获取的是组件实例对象（vc）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;使用方式：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;打标识：&amp;lt;h1 ref=&amp;quot;xxx&amp;quot;&amp;gt;.....&amp;lt;/h1 &amp;gt; 或 &amp;lt;School ref=&amp;quot;xxx&amp;quot;&amp;gt;&amp;lt;/School&amp;gt;&lt;/li&gt;
&lt;li&gt;获取：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3RoaXMuJHJlZnMueHh4&#34;&gt;this.$refs.xxx&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;代码实例：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;template&amp;gt;
  &amp;lt;div&amp;gt;
    &amp;lt;h1 v-text=&amp;quot;msg&amp;quot; ref=&amp;quot;title&amp;quot;&amp;gt;&amp;lt;/h1&amp;gt;
    &amp;lt;button @click=&amp;quot;showDOM&amp;quot; ref=&amp;quot;btn&amp;quot;&amp;gt;输出上方的DOM元素&amp;lt;/button&amp;gt;
    &amp;lt;School ref=&amp;quot;sch&amp;quot; /&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/template&amp;gt;

&amp;lt;script&amp;gt;
import School from &amp;quot;./components/School.vue&amp;quot;;
export default &amp;#123;
  name: &amp;quot;App&amp;quot;,
  components: &amp;#123;
    School,
  &amp;#125;,
  data() &amp;#123;
    return &amp;#123;
      msg: &amp;quot;Vue&amp;quot;,
    &amp;#125;;
  &amp;#125;,
  methods: &amp;#123;
    showDOM() &amp;#123;
      console.log(this.$refs.title);
      console.log(this.$refs.btn);
      console.log(this.$refs.sch);
    &amp;#125;,
  &amp;#125;,
&amp;#125;;
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;props属性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#props属性&#34;&gt;#&lt;/a&gt; props 属性&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;功能：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	让组件接收外部传过来的数据；&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用方式：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;传送数据： &lt;code&gt;&amp;lt;Demo name=&amp;quot;xxx&amp;quot;/&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;接收数据：&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;第一种方式（只接收）： &lt;code&gt;props:[&#39;name&#39;]&lt;/code&gt; ；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;第二种方式（限制类型）： &lt;code&gt;props:&amp;#123;name:String&amp;#125;&lt;/code&gt; ；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;第三种方式（限制类型、限制必要性、指定默认值）：&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;props&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	name&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	type&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;String&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 类型&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	required&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 必要性&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;老王&#39;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 默认值&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;** 备注：**props 是只读的，Vue 底层会监测你对 props 的修改，如果进行了修改，就会发出警告，若业务需求确实需要修改，那么请复制 props 的内容到 data 中一份，然后去修改 data 中的数据。&lt;/p&gt;
&lt;p&gt;代码实例：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;template&amp;gt;
  &amp;lt;div class=&amp;quot;student&amp;quot;&amp;gt;
    &amp;lt;h2&amp;gt;学生名称:&amp;#123;&amp;#123; name &amp;#125;&amp;#125;&amp;lt;/h2&amp;gt;
    &amp;lt;h2&amp;gt;学生地址:&amp;#123;&amp;#123; address &amp;#125;&amp;#125;&amp;lt;/h2&amp;gt;
    &amp;lt;h2&amp;gt;学生年龄:&amp;#123;&amp;#123; age + 1 &amp;#125;&amp;#125;&amp;lt;/h2&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/template&amp;gt;

&amp;lt;script&amp;gt;
export default &amp;#123;
  name: &amp;quot;Student&amp;quot;,
  data() &amp;#123;
    return &amp;#123;
      maName: this.name,
      myAge: this.age,
    &amp;#125;;
  &amp;#125;,
  //简单接收
  // props: [&amp;quot;name&amp;quot;, &amp;quot;address&amp;quot;, &amp;quot;age&amp;quot;],
  //
  //类型限制的接收
  // props: &amp;#123;
  //   name: String,
  //   age: Number,
  //   sex: String,
  // &amp;#125;,
  //类型的限制、默认值的限定、必要性的限定
  props: &amp;#123;
    name: &amp;#123;
      type: String,
      required: true,
    &amp;#125;,
    age: &amp;#123;
      type: Number,
      default: 10,
    &amp;#125;,
    sex: &amp;#123;
      type: String,
      required: true,
    &amp;#125;,
  &amp;#125;,
&amp;#125;;
&amp;lt;/script&amp;gt;

&amp;lt;style&amp;gt;
.student &amp;#123;
  background-color: grey;
&amp;#125;
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;mixin属性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#mixin属性&#34;&gt;#&lt;/a&gt; mixin 属性&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;功能：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	可以把多个组件共用的配置提取成一个混入对象；&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用方式：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;第一步：定义混入（js 文件）：&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    methods&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;第二步：使用混入&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;全局混入：在 mian.js 中  &lt;code&gt;Vue.mixin(xxx)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;局部混入：在 Vue 组件中  &lt;code&gt;mixins:[&#39;xxx&#39;]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;代码实例：&lt;/p&gt;
&lt;p&gt;mixin.js:&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; hunhe &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  methods&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;showName&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token function&#34;&gt;alert&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function&#34;&gt;mounted&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;你好啊！&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; hunhe2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      x&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      y&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;vue自定义插件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vue自定义插件&#34;&gt;#&lt;/a&gt; Vue 自定义插件&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;功能：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	用于增强 Vue；&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用方式：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;定义插件&lt;/p&gt;
&lt;p&gt;本质：包含 install 方法的一个对象，install 的第一个参数是 Vue，第二个以后的参数是插件使用者传递的数据。&lt;/p&gt;
&lt;p&gt;代码实例：&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;default&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;Vue&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; x&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; y&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; z&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; y&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; z&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 定义混入&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    Vue&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;mixin&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token function&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          x&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          y&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 给 Vue 原型上添加一个方法（vm 和 vc 就都能用了）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;Vue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;prototype&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function-variable function&#34;&gt;hello&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token function&#34;&gt;alert&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;你好啊&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用插件： &lt;code&gt;Vue.use()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;代码实例：&lt;/p&gt;
&lt;p&gt;main.js:&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 引入 Vue&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Vue &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;vue&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 引入 App&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; App &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;./App.vue&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 引入插件&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; plugins &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;./plugins&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 应用（使用）插件&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Vue&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;use&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;plugins&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 创建 vm&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Vue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  el&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;#app&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function-variable function&#34;&gt;render&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;App&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;scoped样式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#scoped样式&#34;&gt;#&lt;/a&gt; scoped 样式&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;作用：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	让样式在局部生效，防止冲突；&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;写法：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;`&amp;lt;style scoped&amp;gt; &amp;lt;/style&amp;gt;`
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;children&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#children&#34;&gt;#&lt;/a&gt; &lt;strong&gt; &lt;code&gt;$children&lt;/code&gt; &lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;​	 &lt;code&gt;this.$children&lt;/code&gt; ：可以获得当前组件下的所有子组件（数组形式）；&lt;/p&gt;
&lt;h3 id=&#34;parent&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#parent&#34;&gt;#&lt;/a&gt; &lt;strong&gt; &lt;code&gt;$parent&lt;/code&gt; &lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;​	 &lt;code&gt;this.$parent&lt;/code&gt; ：可以获得当前组件的父组件；&lt;/p&gt;
&lt;h2 id=&#34;slot插槽&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#slot插槽&#34;&gt;#&lt;/a&gt; slot 插槽&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;功能：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	让父组件可以向子组件指定位置插入 html 结构，也是一种组件间通信的方式，适用于 &lt;strong&gt;父组件 ===&amp;gt; 子组件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;默认插槽&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;父组件：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;Category&amp;gt;
   &amp;lt;div&amp;gt;html结构1&amp;lt;/div&amp;gt;
&amp;lt;/Category&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;子组件（ &lt;code&gt;Category.vue&lt;/code&gt; ）&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;template&amp;gt;
    &amp;lt;div&amp;gt;
       &amp;lt;!-- 定义插槽 --&amp;gt;
       &amp;lt;slot&amp;gt;插槽默认内容...&amp;lt;/slot&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/template&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;具名插槽&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;父组件：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;Category&amp;gt;
    &amp;lt;template slot=&amp;quot;center&amp;quot;&amp;gt;
      &amp;lt;div&amp;gt;html结构1&amp;lt;/div&amp;gt;
    &amp;lt;/template&amp;gt;

    &amp;lt;template v-slot:footer&amp;gt;
       &amp;lt;div&amp;gt;html结构2&amp;lt;/div&amp;gt;
    &amp;lt;/template&amp;gt;
&amp;lt;/Category&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;子组件（ &lt;code&gt;Category.vue&lt;/code&gt; ）&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;template&amp;gt;
    &amp;lt;div&amp;gt;
       &amp;lt;!-- 定义插槽 --&amp;gt;
       &amp;lt;slot name=&amp;quot;center&amp;quot;&amp;gt;插槽默认内容...&amp;lt;/slot&amp;gt;
       &amp;lt;slot name=&amp;quot;footer&amp;quot;&amp;gt;插槽默认内容...&amp;lt;/slot&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/template&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;作用域插槽&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;理解：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	数据在组件的自身，但根据数据生成的结构需要组件的使用者来决定。（games 数据在 Category 组件中，但使用数据所遍历出来的结构由 App 组件决定）&lt;/p&gt;
&lt;p&gt;父组件&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;Category&amp;gt;
	&amp;lt;template scope=&amp;quot;scopeData&amp;quot;&amp;gt;
		&amp;lt;!-- 生成的是ul列表 --&amp;gt;
		&amp;lt;ul&amp;gt;
			&amp;lt;li v-for=&amp;quot;g in scopeData.games&amp;quot; :key=&amp;quot;g&amp;quot;&amp;gt;&amp;#123;&amp;#123;g&amp;#125;&amp;#125;&amp;lt;/li&amp;gt;
		&amp;lt;/ul&amp;gt;
	&amp;lt;/template&amp;gt;
&amp;lt;/Category&amp;gt;

&amp;lt;Category&amp;gt;
	&amp;lt;template slot-scope=&amp;quot;scopeData&amp;quot;&amp;gt;
		&amp;lt;!-- 生成的是h4标题 --&amp;gt;
		&amp;lt;h4 v-for=&amp;quot;g in scopeData.games&amp;quot; :key=&amp;quot;g&amp;quot;&amp;gt;&amp;#123;&amp;#123;g&amp;#125;&amp;#125;&amp;lt;/h4&amp;gt;
	&amp;lt;/template&amp;gt;
&amp;lt;/Category&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;子组件（ &lt;code&gt;Category.vue&lt;/code&gt; ）&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;template&amp;gt;
    &amp;lt;div&amp;gt;
        &amp;lt;slot :games=&amp;quot;games&amp;quot;&amp;gt;&amp;lt;/slot&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/template&amp;gt;

&amp;lt;script&amp;gt;
    export default &amp;#123;
        name:&#39;Category&#39;,
        props:[&#39;title&#39;],
        //数据在子组件自身
        data() &amp;#123;
            return &amp;#123;
                games:[&#39;红色警戒&#39;,&#39;穿越火线&#39;,&#39;劲舞团&#39;,&#39;超级玛丽&#39;]
            &amp;#125;
        &amp;#125;,
    &amp;#125;
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;vuex&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vuex&#34;&gt;#&lt;/a&gt; Vuex&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/vuex.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;概念：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	在 Vue 中实现集中式状态（数据）管理的一个 Vue 插件，对 vue 应用中多个组件的共享状态进行集中式的管理（读 / 写数据或方法），也是一种组件间通信的方式，且适用于任意组件间通信。&lt;/p&gt;
&lt;h3 id=&#34;搭建vuex环境&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#搭建vuex环境&#34;&gt;#&lt;/a&gt; 搭建 Vuex 环境&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;创建文件： &lt;code&gt;src/store/index.js&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 引入 Vue 核心库&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Vue &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;vue&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 引入 Vuex&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Vuex &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;vuex&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 应用 Vuex 插件&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Vue&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;use&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;Vuex&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 准备 actions 对象 —— 响应组件中用户的动作&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; actions &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 准备 mutations 对象 —— 修改 state 中的数据&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; mutations &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 准备 state 对象 —— 保存具体的数据&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; state &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 创建并暴露 store&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;default&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Vuex&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Store&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	actions&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	mutations&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	state&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 &lt;code&gt;main.js&lt;/code&gt;  中创建 vm 时传入 &lt;code&gt;store&lt;/code&gt;  配置项&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 引入 store&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; store &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;./store&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 创建 vm&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Vue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	el&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;#app&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token function-variable function&#34;&gt;render&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token parameter&#34;&gt;h&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;App&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	store&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;基本使用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基本使用&#34;&gt;#&lt;/a&gt; 基本使用&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;初始化数据、配置 &lt;code&gt;actions&lt;/code&gt; 、配置 &lt;code&gt;mutation&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;组件中读取 vuex 中的数据： &lt;code&gt;$store.state.sum&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;组件中修改 vuex 中的数据： &lt;code&gt;$store.dispatch(&#39;action中的方法名&#39;,数据)&lt;/code&gt;  或  &lt;code&gt;$store.commit(&#39;mutations中的方法名&#39;,数据)&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;备注：若没有网络请求或其他业务逻辑，组件中也可以越过 actions，即不写 &lt;code&gt;dispatch&lt;/code&gt; ，直接编写 &lt;code&gt;commit&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;getters&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#getters&#34;&gt;#&lt;/a&gt; getters&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;概念：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	当 state 中的数据需要经过加工后再使用时，可以使用 getters 加工。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用方法：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在 &lt;code&gt;store.js&lt;/code&gt;  中追加 &lt;code&gt;getters&lt;/code&gt;  配置&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; getters &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token function&#34;&gt;bigSum&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; state&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sum &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 创建并暴露 store&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;default&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Vuex&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Store&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	getters&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;组件中读取数据： &lt;code&gt;$store.getters.bigSum&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;四个map方法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#四个map方法&#34;&gt;#&lt;/a&gt; 四个 Map 方法&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;mapState 方法：&lt;/strong&gt;用于帮助我们映射 &lt;code&gt;state&lt;/code&gt;  中的数据为计算属性；&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;computed&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 借助 mapState 生成计算属性：sum、school、subject（对象写法）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     &lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;mapState&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;sum&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;sum&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;school&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;school&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;subject&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;subject&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;         &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 借助 mapState 生成计算属性：sum、school、subject（数组写法）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;mapState&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;sum&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;school&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;subject&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;mapGetters 方法：&lt;/strong&gt;用于帮助我们映射 &lt;code&gt;getters&lt;/code&gt;  中的数据为计算属性；&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;computed&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 借助 mapGetters 生成计算属性：bigSum（对象写法）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;mapGetters&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;bigSum&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;bigSum&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 借助 mapGetters 生成计算属性：bigSum（数组写法）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;mapGetters&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;bigSum&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;mapActions 方法：&lt;/strong&gt;用于帮助我们生成与 &lt;code&gt;actions&lt;/code&gt;  对话的方法，即：包含 &lt;code&gt;$store.dispatch(xxx)&lt;/code&gt;  的函数；&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;methods&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 靠 mapActions 生成：incrementOdd、incrementWait（对象形式）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;mapActions&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;incrementOdd&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;jiaOdd&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;incrementWait&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;jiaWait&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 靠 mapActions 生成：incrementOdd、incrementWait（数组形式）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;mapActions&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;jiaOdd&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;jiaWait&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;mapMutations 方法：&lt;/strong&gt;用于帮助我们生成与 &lt;code&gt;mutations&lt;/code&gt;  对话的方法，即：包含 &lt;code&gt;$store.commit(xxx)&lt;/code&gt;  的函数；&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;methods&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 靠 mapActions 生成：increment、decrement（对象形式）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;mapMutations&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;increment&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;JIA&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;decrement&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;JIAN&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 靠 mapMutations 生成：JIA、JIAN（对象形式）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;mapMutations&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;JIA&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;JIAN&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;备注：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;4 个 Map () 方法使用前需要先引用 &lt;code&gt;import &amp;#123;xxx&amp;#125; from &#39;vuex&#39;&lt;/code&gt;  (xxx 为 Map 方法名)&lt;/li&gt;
&lt;li&gt;mapActions 与 mapMutations 使用时，若需要传递参数需要：在模板中绑定事件时传递好参数，否则参数是事件对象。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;模块化&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#模块化&#34;&gt;#&lt;/a&gt; 模块化&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;功能：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	让代码更好维护，让多种数据分类更加明确。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用方法：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;开启命名空间；&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; countAbout &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  namespaced&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 开启命名空间&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  state&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;x&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  mutations&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  actions&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  getters&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;bigSum&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;       &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; state&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sum &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; personAbout &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  namespaced&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 开启命名空间&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  state&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  mutations&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  actions&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; store &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Vuex&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Store&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  modules&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    countAbout&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    personAbout&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;开启命名空间后，组件中读取 state 数据；&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 方式一：自己直接读取&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;$store&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;state&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;personAbout&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;list&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 方式二：借助 mapState 读取：&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;mapState&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;countAbout&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;sum&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;school&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;subject&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;开启命名空间后，组件中读取 getters 数据；&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 方式一：自己直接读取&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;$store&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;getters&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;personAbout/firstPersonName&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 方式二：借助 mapGetters 读取：&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;mapGetters&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;countAbout&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;bigSum&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;开启命名空间后，组件中调用 dispatch；&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 方式一：自己直接 dispatch&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;$store&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;dispatch&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;personAbout/addPersonWang&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;person&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 方式二：借助 mapActions：&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;mapActions&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;countAbout&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;incrementOdd&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;jiaOdd&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;incrementWait&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;jiaWait&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;开启命名空间后，组件中调用 commit；&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 方式一：自己直接 commit&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;$store&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;commit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;personAbout/ADD_PERSON&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;person&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 方式二：借助 mapMutations：&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;mapMutations&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;countAbout&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;increment&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;JIA&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;decrement&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;JIAN&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;路由&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#路由&#34;&gt;#&lt;/a&gt; 路由&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;原理：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	 一个路由（route）就是一组映射关系（key - value），多个路由需要路由器（router）进行管理。&lt;/p&gt;
&lt;h3 id=&#34;基本使用-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基本使用-2&#34;&gt;#&lt;/a&gt; 基本使用&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;安装 vue-router，命令： &lt;code&gt;npm i vue-router&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;应用插件： &lt;code&gt;Vue.use(VueRouter)&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;编写 router 配置项:&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 引入 VueRouter&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; VueRouter &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;vue-router&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 引入 Luyou 组件&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; About &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;../components/About&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Home &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;../components/Home&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 创建 router 实例对象，去管理一组一组的路由规则&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; router &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;VueRouter&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	routes&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			path&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/about&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			component&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;About&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			path&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/home&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			component&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;Home&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 暴露 router&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;default&lt;/span&gt; router&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;实现切换（active-class 可配置高亮样式）；&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;router-link active-class=&amp;quot;active&amp;quot; to=&amp;quot;/about&amp;quot;&amp;gt;About&amp;lt;/router-link&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;指定展示位置；&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;router-view&amp;gt;&amp;lt;/router-view&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;备注：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;路由组件通常存放在 &lt;code&gt;pages&lt;/code&gt;  文件夹，一般组件通常存放在 &lt;code&gt;components&lt;/code&gt;  文件夹；&lt;/li&gt;
&lt;li&gt;通过切换，“隐藏” 了的路由组件，默认是被销毁掉的，需要的时候再去挂载；&lt;/li&gt;
&lt;li&gt;每个组件都有自己的 &lt;code&gt;$route&lt;/code&gt;  属性，里面存储着自己的路由信息；&lt;/li&gt;
&lt;li&gt;配置路由的时候可以给路由的 &lt;code&gt;$route&lt;/code&gt;  添加（配置）路由元信息 &lt;code&gt;meta&lt;/code&gt; ；&lt;/li&gt;
&lt;li&gt;整个应用只有一个 router，可以通过组件的 &lt;code&gt;$router&lt;/code&gt;  属性获取到；&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;路由的参数传递&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#路由的参数传递&#34;&gt;#&lt;/a&gt; 路由的参数传递&lt;/h3&gt;
&lt;h4 id=&#34;query传参数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#query传参数&#34;&gt;#&lt;/a&gt; query 传参数&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;传递参数：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;!-- 跳转并携带query参数，to的字符串写法 --&amp;gt;
&amp;lt;router-link :to=&amp;quot;/home/message/detail?id=666&amp;amp;title=你好&amp;quot;&amp;gt;跳转&amp;lt;/router-link&amp;gt;
&amp;lt;script&amp;gt;
	goSearch() &amp;#123;
            this.$router.push(&amp;quot;/search&amp;quot;+&amp;quot;?k=&amp;quot;+this.keyword);
        &amp;#125;,
&amp;lt;/script&amp;gt;

				
&amp;lt;!-- 跳转并携带query参数，to的对象写法 --&amp;gt;
&amp;lt;router-link 
	:to=&amp;quot;&amp;#123;
		path:&#39;/home/message/detail&#39;,
		query:&amp;#123;
		   id:666,
            title:&#39;你好&#39;
		&amp;#125;
	&amp;#125;&amp;quot;
&amp;gt;跳转&amp;lt;/router-link&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;接收参数：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;$route.query.id
$route.query.title
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;params传参数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#params传参数&#34;&gt;#&lt;/a&gt; params 传参数&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;配置路由，声明接收 params 参数:&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	path&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/home&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	component&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;Home&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	children&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			path&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;news&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			component&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;News&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			component&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;Message&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			children&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;					name&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;xiangqing&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;					path&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;detail/:id/:title&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 使用占位符声明接收 params 参数 (如果在占位符声明后加上？，则可以实现可传可不不 chuan)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;					component&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;Detail&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;传递参数：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;!-- 跳转并携带params参数，to的字符串写法 --&amp;gt;
&amp;lt;router-link :to=&amp;quot;/home/message/detail/666/你好&amp;quot;&amp;gt;跳转&amp;lt;/router-link&amp;gt;

&amp;lt;script&amp;gt;
	goSearch() &amp;#123;
     this.$router.push(&amp;quot;/search&amp;quot;&amp;quot;+this.keyword);
        &amp;#125;,
&amp;lt;/script&amp;gt;

&amp;lt;!-- 跳转并携带params参数，to的对象写法 --&amp;gt;
&amp;lt;router-link 
	:to=&amp;quot;&amp;#123;
		name:&#39;xiangqing&#39;,
		params:&amp;#123;
		   id:666,
            title:&#39;你好&#39;
		&amp;#125;
	&amp;#125;&amp;quot;
&amp;gt;跳转&amp;lt;/router-link&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;备注：路由携带 params 参数时，若使用 to 的对象写法，则不能使用 path 配置项，必须使用 name 配置！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;接收参数：&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;$route&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;params&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;id&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;$route&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;params&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;title&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;props配置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#props配置&#34;&gt;#&lt;/a&gt; props 配置&lt;/h4&gt;
&lt;p&gt;** 作用：** 让路由组件更方便的收到参数&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	name&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;xiangqing&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	path&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;detail/:id&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	component&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;Detail&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token comment&#34;&gt;// 第一种写法：props 值为对象，该对象中所有的 key-value 的组合最终都会通过 props 传给 Detail 组件&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token comment&#34;&gt;// props:&amp;#123;a:900&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token comment&#34;&gt;// 第二种写法：props 值为布尔值，布尔值为 true，则把路由收到的所有 params 参数通过 props 传给 Detail 组件&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token comment&#34;&gt;// props:true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token comment&#34;&gt;// 第三种写法：props 值为函数，该函数返回的对象中每一组 key-value 都会通过 props 传给 Detail 组件&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token function&#34;&gt;props&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			id&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;route&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;query&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;id&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			title&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;route&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;query&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;title&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;路由跳转&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#路由跳转&#34;&gt;#&lt;/a&gt; 路由跳转&lt;/h3&gt;
&lt;h4 id=&#34;通过标签跳转&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#通过标签跳转&#34;&gt;#&lt;/a&gt; 通过标签跳转&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;基本方式&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;配置路由规则，使用 children 配置项：&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;routes&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		path&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/about&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		component&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;About&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		path&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/home&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		component&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;Home&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		children&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 通过 children 配置子级路由&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				path&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;news&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 此处一定不要写：/news&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				component&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;News&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				path&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;message&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				component&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;Message&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;跳转（要写完整路径）：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;router-link to=&amp;quot;/home/news&amp;quot;&amp;gt;News&amp;lt;/router-link&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;命名路由&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;给路由命名：&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	path&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/demo&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	component&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;Demo&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	children&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			path&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;test&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			component&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;Test&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			children&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                      name&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;hello&#39;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 给路由命名&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;					path&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;welcome&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;					component&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;Hello&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;简化跳转：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;!--简化后，直接通过名字跳转 --&amp;gt;
&amp;lt;router-link :to=&amp;quot;&amp;#123;name:&#39;hello&#39;&amp;#125;&amp;quot;&amp;gt;跳转&amp;lt;/router-link&amp;gt;

&amp;lt;!--简化写法配合传递参数 --&amp;gt;
&amp;lt;router-link 
	:to=&amp;quot;&amp;#123;
		name:&#39;hello&#39;,
		query:&amp;#123;
		   id:666,
            title:&#39;你好&#39;
		&amp;#125;
	&amp;#125;&amp;quot;
&amp;gt;跳转&amp;lt;/router-link&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;编程式路由导航&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#编程式路由导航&#34;&gt;#&lt;/a&gt; 编程式路由导航&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;作用：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	不借助 &lt;code&gt;&amp;lt;router-link&amp;gt; &lt;/code&gt; 实现路由跳转，让路由跳转更加灵活；&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;代码实例：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在组件的 methods 中定义方法再输入以下操作方法&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//$router 的两个 API&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;$router&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	name&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;xiangqing&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		params&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			id&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;xxx&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			title&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;xxx&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;$router&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	name&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;xiangqing&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		params&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			id&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;xxx&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			title&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;xxx&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;$router&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;forward&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 前进&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;$router&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;back&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 后退&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;$router&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;go&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 可前进也可后退&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;路由守卫&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#路由守卫&#34;&gt;#&lt;/a&gt; 路由守卫&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;作用：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	对路由进行权限控制。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;全局守卫&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 在此之前需要对路由的 meta 属性进行设置，创新新对象的 key &amp;#123;isAuth&amp;#125;，值为 true or false&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 全局前置守卫：初始化时执行、每次路由切换前执行&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;router&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;beforeEach&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;to&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;from&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;next&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;beforeEach&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;to&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;from&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;to&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;meta&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;isAuth&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 判断当前路由是否需要进行权限控制&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;localStorage&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getItem&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;school&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;===&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;atguigu&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 权限控制的具体规则&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token function&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 放行&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token function&#34;&gt;alert&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;暂无权限查看&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token comment&#34;&gt;// next(&amp;#123;name:&#39;guanyu&#39;&amp;#125;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token function&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 放行&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 在此之前需要对路由的 meta 属性进行设置，创新新对象的 key，一般设置为 &amp;#123;title：&#39;xxx&#39;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 全局后置守卫：初始化时执行、每次路由切换后执行&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;router&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;afterEach&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;to&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;afterEach&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;to&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;from&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;to&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;meta&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;title&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		document&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;title &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; to&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;meta&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;title &lt;span class=&#34;token comment&#34;&gt;// 修改网页的 title&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		document&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;title &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;vue_test&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;独显守卫&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//beforeEnter 为路由的一个属性&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;beforeEnter&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;to&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;from&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;next&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;beforeEnter&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;to&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;from&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;to&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;meta&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;isAuth&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 判断当前路由是否需要进行权限控制&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;localStorage&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getItem&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;school&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;===&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;atguigu&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token function&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token function&#34;&gt;alert&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;暂无权限查看&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token comment&#34;&gt;// next(&amp;#123;name:&#39;guanyu&#39;&amp;#125;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token function&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;组件内守卫&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 进入守卫：通过路由规则，进入该组件时被调用&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;beforeRouteEnter&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;to&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; from&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; next&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 离开守卫：通过路由规则，离开该组件时被调用&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;beforeRouteLeave&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;to&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; from&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; next&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;完整的导航解析流程&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;导航被触发。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在失活的组件里调用  &lt;code&gt;beforeRouteLeave &lt;/code&gt; 守卫。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;调用全局的  &lt;code&gt;beforeEach &lt;/code&gt; 守卫。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在重用的组件里调用  &lt;code&gt;beforeRouteUpdate &lt;/code&gt; 守卫 (2.2+)。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在路由配置里调用  &lt;code&gt;beforeEnter&lt;/code&gt; 。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;解析异步路由组件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在被激活的组件里调用  &lt;code&gt;beforeRouteEnter&lt;/code&gt; 。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;调用全局的  &lt;code&gt;beforeResolve &lt;/code&gt; 守卫 (2.5+)。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;导航被确认。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;调用全局的  &lt;code&gt;afterEach &lt;/code&gt; 钩子。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;触发 DOM 更新。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;调用  &lt;code&gt;beforeRouteEnter &lt;/code&gt; 守卫中传给 next 的回调函数，创建好的组件实例会作为回调函数的参数传入。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;缓存路由组件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#缓存路由组件&#34;&gt;#&lt;/a&gt; 缓存路由组件&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;作用：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	让不展示的路由组件保持挂载，不被销毁。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;代码实例：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;//XXX为组件名；XXX也可以为数组，包含多个组件名
&amp;lt;keep-alive include=&amp;quot;XXX&amp;quot;&amp;gt; 
    &amp;lt;router-view&amp;gt;&amp;lt;/router-view&amp;gt;
&amp;lt;/keep-alive&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;路由独有的钩子&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#路由独有的钩子&#34;&gt;#&lt;/a&gt; 路由独有的钩子&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;activated&lt;/code&gt;  路由组件被激活时触发。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;deactivated&lt;/code&gt;  路由组件失活时触发。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;使用方式与其它生命周期的使用方式一样。&lt;/p&gt;
&lt;h3 id=&#34;replace属性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#replace属性&#34;&gt;#&lt;/a&gt; replace 属性&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;作用：控制路由跳转时操作浏览器历史记录的模式&lt;/li&gt;
&lt;li&gt;浏览器的历史记录有两种写入方式：分别为 &lt;code&gt;push&lt;/code&gt;  和 &lt;code&gt;replace&lt;/code&gt; ， &lt;code&gt;push&lt;/code&gt;  是追加历史记录， &lt;code&gt;replace&lt;/code&gt;  是替换当前记录。路由跳转时候默认为 &lt;code&gt;push&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;如何开启 &lt;code&gt;replace&lt;/code&gt;  模式： &lt;code&gt;&amp;lt;router-link replace .......&amp;gt;News&amp;lt;/router-link&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;路由的两种工作模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#路由的两种工作模式&#34;&gt;#&lt;/a&gt; 路由的两种工作模式&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;hash 模式&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;hash 值：# 及其后面的内容就是 hash 值，hash 值不会包含在 HTTP 请求中，即：hash 值不会带给服务器。&lt;/p&gt;
&lt;p&gt;特点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;地址中永远带着 #号，不美观 ；&lt;/li&gt;
&lt;li&gt;若以后将地址通过第三方手机 app 分享，若 app 校验严格，则地址会被标记为不合法；&lt;/li&gt;
&lt;li&gt;兼容性较好；&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;history 模式&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;特点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;地址干净，美观 。&lt;/li&gt;
&lt;li&gt;兼容性和 hash 模式相比略差。&lt;/li&gt;
&lt;li&gt;应用部署上线时需要后端人员支持，解决刷新页面服务端 404 的问题。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMzQ1MTA4L2FydGljbGUvZGV0YWlscy8xMjQxNDQwNDc=&#34;&gt;(3 条消息) 【面试】前端路由 hash 和 history 的区别_sqwu 的博客 - CSDN 博客_hash 和 history&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;webstorage&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#webstorage&#34;&gt;#&lt;/a&gt; webStorage&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;存储内容大小一般支持 5MB 左右（不同浏览器可能还不一样）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;浏览器端通过 Window.sessionStorage 和 Window.localStorage 属性来实现本地存储机制。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;相关 API：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;xxxxxStorage.setItem(&#39;key&#39;, &#39;value&#39;);&lt;/code&gt; &lt;br /&gt;
 该方法接受一个键和值作为参数，会把键值对添加到存储中，如果键名存在，则更新其对应的值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;xxxxxStorage.getItem(&#39;person&#39;);&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;​		该方法接受一个键名作为参数，返回键名对应的值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;xxxxxStorage.removeItem(&#39;key&#39;);&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;​		该方法接受一个键名作为参数，并把该键名从存储中删除。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt; xxxxxStorage.clear()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;​		该方法会清空存储中的所有数据。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;备注：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;SessionStorage 存储的内容会随着浏览器窗口关闭而消失。&lt;/li&gt;
&lt;li&gt;LocalStorage 存储的内容，需要手动清除才会消失。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;xxxxxStorage.getItem(xxx)&lt;/code&gt;  如果 xxx 对应的 value 获取不到，那么 getItem 的返回值是 null。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;JSON.parse(null)&lt;/code&gt;  的结果依然是 null。&lt;/li&gt;
&lt;li&gt;一般配合深度监视使用。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;组件的自定义事件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#组件的自定义事件&#34;&gt;#&lt;/a&gt; 组件的自定义事件&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;一种组件间通信的方式，适用于：&lt;strong style=&#34;color:red&#34;&gt;子组件 ===&amp;gt; 父组件&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用场景：A 是父组件，B 是子组件，B 想给 A 传数据，那么就要在 A 中给 B 绑定自定义事件（&lt;span style=&#34;color:red&#34;&gt;事件的回调在 A 中&lt;/span&gt;）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;绑定自定义事件：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;第一种方式，在父组件中： &lt;code&gt;&amp;lt;Demo @atguigu=&amp;quot;test&amp;quot;/&amp;gt;&lt;/code&gt;   或  &lt;code&gt;&amp;lt;Demo v-on:atguigu=&amp;quot;test&amp;quot;/&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;第二种方式，在父组件中：&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;Demo ref&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;demo&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;mounted&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;$refs&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;xxx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;$on&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;atguigu&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;test&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;若想让自定义事件只能触发一次，可以使用 &lt;code&gt;once&lt;/code&gt;  修饰符，或 &lt;code&gt;$once&lt;/code&gt;  方法。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;触发自定义事件： &lt;code&gt;this.$emit(&#39;atguigu&#39;,数据)&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;解绑自定义事件 &lt;code&gt;this.$off(&#39;atguigu&#39;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如果自定义事件有多个则参数部分放入一个数组；如果要解除所有自定义事件，还可以不传参数。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;组件上也可以绑定原生 DOM 事件，需要使用 &lt;code&gt;.native&lt;/code&gt;  修饰符。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;注意：通过 &lt;code&gt;this.$refs.xxx.$on(&#39;atguigu&#39;,回调)&lt;/code&gt;  绑定自定义事件时，回调&lt;span style=&#34;color:red&#34;&gt;要么配置在 methods 中&lt;/span&gt;，&lt;span style=&#34;color:red&#34;&gt;要么用箭头函数&lt;/span&gt;，否则 this 指向会出问题！&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;全局事件总线&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#全局事件总线&#34;&gt;#&lt;/a&gt; 全局事件总线&lt;/h2&gt;
&lt;p&gt;全局事件总线（GlobalEventBus）是一种组件间通信的方式，适用于&lt;span style=&#34;color:red&#34;&gt;任意组件间通信&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;全局事件总线的安装&lt;/strong&gt;：&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//main.js&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Vue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token function&#34;&gt;beforeCreate&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token class-name&#34;&gt;Vue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;prototype&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;$bus &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 安装全局事件总线，$bus 就是当前应用的 vm&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;使用事件总线&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;接收数据：A 组件想接收数据，则在 A 组件中给 $bus 绑定自定义事件，事件的&lt;span style=&#34;color:red&#34;&gt;回调留在 A 组件自身。&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;methods&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function&#34;&gt;demo&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;mounted&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;$bus&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;$on&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;xxxx&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;demo&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;提供数据： &lt;code&gt;this.$bus.$emit(&#39;xxxx&#39;,数据)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意事项&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;​	最好在 beforeDestroy 钩子中，用 $off 去解绑&lt;span style=&#34;color:red&#34;&gt;当前组件所用到的&lt;/span&gt;事件。&lt;/p&gt;
&lt;h2 id=&#34;todolist案例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#todolist案例&#34;&gt;#&lt;/a&gt; TodoList 案例&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;组件化编码流程：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;拆分静态组件：组件要按照功能点拆分，命名不要与 html 元素冲突；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;实现动态组件：考虑好数据的存放位置，数据是一个组件在用，还是一些组件在用：&lt;/p&gt;
&lt;p&gt;一个组件在用：放在组件自身即可；&lt;/p&gt;
&lt;p&gt;一些组件在用：放在他们共同的父组件上（&lt;span style=&#34;color:red&#34;&gt;状态提升&lt;/span&gt;）；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;实现交互：从绑定事件开始。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;props 适用于：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;父组件 ==&amp;gt; 子组件 通信&lt;/li&gt;
&lt;li&gt;子组件 ==&amp;gt; 父组件 通信（要求父先给子一个函数）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用 v-model 时要切记：v-model 绑定的值不能是 props 传过来的值，因为 props 是不可以修改的！&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;props 传过来的若是对象类型的值，修改对象中的属性时 Vue 不会报错，但不推荐这样做。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;组件间的通信规则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;父传子：使用 &lt;code&gt;props&lt;/code&gt; ；&lt;/li&gt;
&lt;li&gt;子传父：组件的自定义事件；&lt;/li&gt;
&lt;li&gt;兄弟间 / 爷孙间：全局事件总线；&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;输入框的焦点问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;失去焦点 &lt;code&gt;&amp;lt;input @blur=&#39;xxx()&#39; ref=&#39;yyy&#39;&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;获得焦点&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;xxx&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;$nextTick&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;$refs&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;inputTitle&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;focus&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;nextTick&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;语法： &lt;code&gt;this.$nextTick(回调函数)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;作用：在下一次 DOM 更新结束后执行其指定的回调，它也是声明周期的钩子之一。&lt;/li&gt;
&lt;li&gt;什么时候用：当改变数据后，要基于更新后的新 DOM 进行某些操作时，要在 nextTick 所指定的回调函数中执行。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;代码实例：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;App.vue&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;template&amp;gt;
  &amp;lt;div id=&amp;quot;root&amp;quot;&amp;gt;
    &amp;lt;div class=&amp;quot;todo-container&amp;quot;&amp;gt;
      &amp;lt;div class=&amp;quot;todo-wrap&amp;quot;&amp;gt;
        &amp;lt;MyHeader :receive=&amp;quot;receive&amp;quot; /&amp;gt;
        &amp;lt;MyList
          :todos=&amp;quot;todos&amp;quot;
          :checkTodo=&amp;quot;checkTodo&amp;quot;
          :deleteTodo=&amp;quot;deleteTode&amp;quot;
        /&amp;gt;
        &amp;lt;MyFooter
          :todos=&amp;quot;todos&amp;quot;
          :checkAllTodo=&amp;quot;checkAllTodo&amp;quot;
          :clearAllTodo=&amp;quot;clearAllTodo&amp;quot;
        /&amp;gt;
      &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/template&amp;gt;

&amp;lt;script&amp;gt;
import MyHeader from &amp;quot;./components/MyHeader.vue&amp;quot;;
import MyFooter from &amp;quot;./components/MyFooter.vue&amp;quot;;
import MyList from &amp;quot;./components/MyList.vue&amp;quot;;

export default &amp;#123;
  name: &amp;quot;App&amp;quot;,
  components: &amp;#123;
    MyHeader,
    MyFooter,
    MyList,
  &amp;#125;,
  //浏览器存储读取
  data() &amp;#123;
    return &amp;#123;
      todos: JSON.parse(localStorage.getItem(&amp;quot;todos&amp;quot;)) || [],
    &amp;#125;;
  &amp;#125;,
  //深度监视与浏览器存储
  watch: &amp;#123;
    todos: &amp;#123;
      deep: true,
      handler(value) &amp;#123;
        localStorage.setItem(&amp;quot;todos&amp;quot;, JSON.stringify(value));
      &amp;#125;,
    &amp;#125;,
  &amp;#125;,
  methods: &amp;#123;
    receive(todoObj) &amp;#123;
      this.todos.unshift(todoObj);
    &amp;#125;,
    checkTodo(id) &amp;#123;
      this.todos.forEach((todo) =&amp;gt; &amp;#123;
        if (todo.id === id) todo.done = !todo.done;
      &amp;#125;);
    &amp;#125;,
    deleteTode(id) &amp;#123;
      this.todos = this.todos.filter((todo) =&amp;gt; &amp;#123;
        return todo.id !== id;
      &amp;#125;);
    &amp;#125;,
    checkAllTodo(done) &amp;#123;
      this.todos.forEach((todo) =&amp;gt; (todo.done = done));
    &amp;#125;,
    clearAllTodo() &amp;#123;
      this.todos = this.todos.filter((todo) =&amp;gt; &amp;#123;
        return !todo.done;
      &amp;#125;);
    &amp;#125;,
  &amp;#125;,
&amp;#125;;
&amp;lt;/script&amp;gt;

&amp;lt;style&amp;gt;
/*base*/
body &amp;#123;
  background: #fff;
&amp;#125;

.btn &amp;#123;
  display: inline-block;
  padding: 4px 12px;
  margin-bottom: 0;
  font-size: 14px;
  line-height: 20px;
  text-align: center;
  vertical-align: middle;
  cursor: pointer;
  box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.2),
    0 1px 2px rgba(0, 0, 0, 0.05);
  border-radius: 4px;
&amp;#125;

.btn-danger &amp;#123;
  color: #fff;
  background-color: #da4f49;
  border: 1px solid #bd362f;
&amp;#125;

.btn-danger:hover &amp;#123;
  color: #fff;
  background-color: #bd362f;
&amp;#125;

.btn:focus &amp;#123;
  outline: none;
&amp;#125;

.todo-container &amp;#123;
  width: 600px;
  margin: 0 auto;
&amp;#125;
.todo-container .todo-wrap &amp;#123;
  padding: 10px;
  border: 1px solid #ddd;
  border-radius: 5px;
&amp;#125;
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;MyHeader.vue&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;template&amp;gt;
  &amp;lt;div class=&amp;quot;todo-header&amp;quot;&amp;gt;
    &amp;lt;input
      type=&amp;quot;text&amp;quot;
      placeholder=&amp;quot;请输入你的任务名称，按回车键确认&amp;quot;
      @keyup.enter=&amp;quot;add&amp;quot;
      v-model=&amp;quot;title&amp;quot;
    /&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/template&amp;gt;

&amp;lt;script&amp;gt;
import &amp;#123; nanoid &amp;#125; from &amp;quot;nanoid&amp;quot;;
export default &amp;#123;
  name: &amp;quot;MyHooter&amp;quot;,
  props: [&amp;quot;receive&amp;quot;],
  data() &amp;#123;
    return &amp;#123;
      title: &amp;quot;&amp;quot;,
    &amp;#125;;
  &amp;#125;,
  methods: &amp;#123;
    add() &amp;#123;
      if (!this.title.trim()) &amp;#123;
        return alert(&amp;quot;输入不能为空&amp;quot;);
      &amp;#125;
      const todoObj = &amp;#123;
        id: nanoid(),
        title: this.title,
        done: false,
      &amp;#125;;
      this.receive(todoObj);
      this.title = &amp;quot;&amp;quot;;
    &amp;#125;,
  &amp;#125;,
&amp;#125;;
&amp;lt;/script&amp;gt;

&amp;lt;style scoped&amp;gt;
/*header*/
.todo-header input &amp;#123;
  width: 560px;
  height: 28px;
  font-size: 14px;
  border: 1px solid #ccc;
  border-radius: 4px;
  padding: 4px 7px;
&amp;#125;

.todo-header input:focus &amp;#123;
  outline: none;
  border-color: rgba(82, 168, 236, 0.8);
  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075),
    0 0 8px rgba(82, 168, 236, 0.6);
&amp;#125;
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;MyList.vue&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;template&amp;gt;
  &amp;lt;ul class=&amp;quot;todo-main&amp;quot;&amp;gt;
    &amp;lt;MyItem
      v-for=&amp;quot;todoObj in todos&amp;quot;
      :key=&amp;quot;todoObj.id&amp;quot;
      :todo=&amp;quot;todoObj&amp;quot;
      :checkTodo=&amp;quot;checkTodo&amp;quot;
      :deleteTodo=&amp;quot;deleteTodo&amp;quot;
    /&amp;gt;
  &amp;lt;/ul&amp;gt;
&amp;lt;/template&amp;gt;

&amp;lt;script&amp;gt;
import MyItem from &amp;quot;./MyItem.vue&amp;quot;;
export default &amp;#123;
  name: &amp;quot;MyList&amp;quot;,
  components: &amp;#123;
    MyItem,
  &amp;#125;,
  props: [&amp;quot;todos&amp;quot;, &amp;quot;checkTodo&amp;quot;, &amp;quot;deleteTodo&amp;quot;],
&amp;#125;;
&amp;lt;/script&amp;gt;


&amp;lt;style scoped&amp;gt;
/*main*/
.todo-main &amp;#123;
  margin-left: 0px;
  border: 1px solid #ddd;
  border-radius: 2px;
  padding: 0px;
&amp;#125;

.todo-empty &amp;#123;
  height: 40px;
  line-height: 40px;
  border: 1px solid #ddd;
  border-radius: 2px;
  padding-left: 5px;
  margin-top: 10px;
&amp;#125;
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;MyItem.vue&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;template&amp;gt;
  &amp;lt;li&amp;gt;
    &amp;lt;label&amp;gt;
      &amp;lt;input
        type=&amp;quot;checkbox&amp;quot;
        :checked=&amp;quot;todo.done&amp;quot;
        @change=&amp;quot;handlecheck(todo.id)&amp;quot;
      /&amp;gt;
      &amp;lt;!-- 修改了props，违背了原则，但可以完成功能 --&amp;gt;
      &amp;lt;!-- &amp;lt;input type=&amp;quot;checkbox&amp;quot; v-model=&amp;quot;todo.done&amp;quot; /&amp;gt; --&amp;gt;
      &amp;lt;span&amp;gt;&amp;#123;&amp;#123; todo.title &amp;#125;&amp;#125;&amp;lt;/span&amp;gt;
    &amp;lt;/label&amp;gt;
    &amp;lt;button class=&amp;quot;btn btn-danger&amp;quot; @click=&amp;quot;del(todo.id)&amp;quot;&amp;gt;删除&amp;lt;/button&amp;gt;
  &amp;lt;/li&amp;gt;
&amp;lt;/template&amp;gt;

&amp;lt;script scoped&amp;gt;
export default &amp;#123;
  name: &amp;quot;MyItem&amp;quot;,
  props: [&amp;quot;todo&amp;quot;, &amp;quot;checkTodo&amp;quot;, &amp;quot;deleteTodo&amp;quot;],
  methods: &amp;#123;
    handlecheck(id) &amp;#123;
      this.checkTodo(id);
    &amp;#125;,
    del(id) &amp;#123;
      if (confirm(&amp;quot;确定删除吗&amp;quot;)) &amp;#123;
        this.deleteTodo(id);
      &amp;#125;
    &amp;#125;,
  &amp;#125;,
&amp;#125;;
&amp;lt;/script&amp;gt;

&amp;lt;style scoped&amp;gt;
/*item*/
li &amp;#123;
  list-style: none;
  height: 36px;
  line-height: 36px;
  padding: 0 5px;
  border-bottom: 1px solid #ddd;
&amp;#125;

li label &amp;#123;
  float: left;
  cursor: pointer;
&amp;#125;

li label li input &amp;#123;
  vertical-align: middle;
  margin-right: 6px;
  position: relative;
  top: -1px;
&amp;#125;

li button &amp;#123;
  float: right;
  display: none;
  margin-top: 3px;
&amp;#125;

li:before &amp;#123;
  content: initial;
&amp;#125;

li:last-child &amp;#123;
  border-bottom: none;
&amp;#125;
li:hover &amp;#123;
  background-color: #ddd;
&amp;#125;
li:hover button &amp;#123;
  display: block;
&amp;#125;
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;MyFooter.vue&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;template&amp;gt;
  &amp;lt;div class=&amp;quot;todo-footer&amp;quot; v-show=&amp;quot;todos.length&amp;quot;&amp;gt;
    &amp;lt;label&amp;gt;
      &amp;lt;input type=&amp;quot;checkbox&amp;quot; :checked=&amp;quot;isAll&amp;quot; @click=&amp;quot;checkAll&amp;quot; /&amp;gt;
      &amp;lt;!-- &amp;lt;input type=&amp;quot;checkbox&amp;quot; v-model=&amp;quot;isAll&amp;quot; /&amp;gt; --&amp;gt;
    &amp;lt;/label&amp;gt;
    &amp;lt;span&amp;gt;
      &amp;lt;span&amp;gt;已完成&amp;#123;&amp;#123; doneTatal &amp;#125;&amp;#125;&amp;lt;/span&amp;gt; / 全部&amp;#123;&amp;#123; todos.length &amp;#125;&amp;#125;
    &amp;lt;/span&amp;gt;
    &amp;lt;button class=&amp;quot;btn btn-danger&amp;quot; @click=&amp;quot;clearAll&amp;quot;&amp;gt;清除已完成任务&amp;lt;/button&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/template&amp;gt;

&amp;lt;script&amp;gt;
export default &amp;#123;
  name: &amp;quot;MyFooter&amp;quot;,
  props: [&amp;quot;todos&amp;quot;, &amp;quot;checkAllTodo&amp;quot;, &amp;quot;clearAllTodo&amp;quot;],
  computed: &amp;#123;
    doneTatal() &amp;#123;
      // this.todos.reduce((pre, currrnt) =&amp;gt; &amp;#123;
      //   return pre + (currrnt.done ? 1 : 0);
      // &amp;#125;, 0);
      //简写形式
      return this.todos.reduce(
        (pre, current) =&amp;gt; pre + (current.done ? 1 : 0),
        0
      );
    &amp;#125;,
    //v-model的回调方法（计算属性的完整写法）
    // isAll: &amp;#123;
    //   get() &amp;#123;
    //     return this.doneTatal === this.todos.length &amp;amp;&amp;amp; this.todos.length !== 0;
    //   &amp;#125;,
    //   set(value) &amp;#123;
    //     this.checkAllTodo(value);
    //   &amp;#125;,
    // &amp;#125;,
    isAll() &amp;#123;
      return this.doneTatal === this.todos.length &amp;amp;&amp;amp; this.todos.length !== 0;
    &amp;#125;,
  &amp;#125;,
  methods: &amp;#123;
    checkAll(e) &amp;#123;
      this.checkAllTodo(e.target.checked); //e.target.value也行
    &amp;#125;,
    clearAll() &amp;#123;
      this.clearAllTodo();
    &amp;#125;,
  &amp;#125;,
&amp;#125;;
&amp;lt;/script&amp;gt;

&amp;lt;style scoped&amp;gt;
/*footer*/
.todo-footer &amp;#123;
  height: 40px;
  line-height: 40px;
  padding-left: 6px;
  margin-top: 5px;
&amp;#125;

.todo-footer label &amp;#123;
  display: inline-block;
  margin-right: 20px;
  cursor: pointer;
&amp;#125;

.todo-footer label input &amp;#123;
  position: relative;
  top: -1px;
  vertical-align: middle;
  margin-right: 5px;
&amp;#125;

.todo-footer button &amp;#123;
  float: right;
  margin-top: 5px;
&amp;#125;
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;pubsub&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#pubsub&#34;&gt;#&lt;/a&gt; &lt;strong&gt;pubsub&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;​	消息的订阅与发布（pubsub）是一种组件间通信的方式，适用于&lt;span style=&#34;color:red&#34;&gt;任意组件间通信&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用步骤：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;安装 pubsub： &lt;code&gt;npm i pubsub-js&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;引入:  &lt;code&gt;import pubsub from &#39;pubsub-js&#39;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;接收数据：A 组件想接收数据，则在 A 组件中订阅消息，订阅的&lt;span style=&#34;color:red&#34;&gt;回调留在 A 组件自身；&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;methods&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function&#34;&gt;demo&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;mounted&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pid &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; pubsub&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;subscribe&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;xxx&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;demo&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 订阅消息&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;提供数据： &lt;code&gt;pubsub.publish(&#39;xxx&#39;,数据)&lt;/code&gt; ；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;最好在 beforeDestroy 钩子中，用 &lt;code&gt;PubSub.unsubscribe(pid)&lt;/code&gt;  去取消订阅。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;过渡与动画&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#过渡与动画&#34;&gt;#&lt;/a&gt; 过渡与动画&lt;/h2&gt;
&lt;h3 id=&#34;vue封装的过度与动画&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vue封装的过度与动画&#34;&gt;#&lt;/a&gt; Vue 封装的过度与动画&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;功能：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	在插入、更新或移除 DOM 元素时，在合适的时候给元素添加样式类名。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;写法：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;​	元素进入的样式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;v-enter：进入的起点&lt;/li&gt;
&lt;li&gt;v-enter-active：进入过程中&lt;/li&gt;
&lt;li&gt;v-enter-to：进入的终点&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;元素离开的样式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;v-leave：离开的起点&lt;/li&gt;
&lt;li&gt;v-leave-active：离开过程中&lt;/li&gt;
&lt;li&gt;v-leave-to：离开的终点&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;过渡代码实例：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;style scoped&amp;gt;
	h1&amp;#123;
		background-color: orange;
	&amp;#125;
	/* 进入的起点、离开的终点 */
	.hello-enter,.hello-leave-to&amp;#123;
		transform: translateX(-100%);
	&amp;#125;
	.hello-enter-active,.hello-leave-active&amp;#123;
		transition: 0.5s linear;
	&amp;#125;
	/* 进入的终点、离开的起点 */
	.hello-enter-to,.hello-leave&amp;#123;
		transform: translateX(0);
	&amp;#125;
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;动画代码实例：&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;bounce&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;enter&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;active &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    animation&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; bounce&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;.5&lt;/span&gt;s&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;bounce&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;leave&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;active &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    animation&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; bounce&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;.5&lt;/span&gt;s reverse&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;@keyframes bounce&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        transform&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;scale&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token number&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        transform&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;scale&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1.5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        transform&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;scale&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用 &lt;code&gt;&amp;lt;transition&amp;gt;&lt;/code&gt;  包裹要过度或动画的元素，并配置 name 属性：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;transition name=&amp;quot;hello&amp;quot;&amp;gt;
	&amp;lt;h1 v-show=&amp;quot;isShow&amp;quot;&amp;gt;你好啊！&amp;lt;/h1&amp;gt;
&amp;lt;/transition&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;备注：若有多个元素需要过度，则需要使用： &lt;code&gt;&amp;lt;transition-group&amp;gt;&lt;/code&gt; ，且每个元素都要指定 &lt;code&gt;key&lt;/code&gt;  值。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;第三方库的使用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第三方库的使用&#34;&gt;#&lt;/a&gt; 第三方库的使用&lt;/h3&gt;
&lt;p&gt;常用的第三方库动画的地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvYW5pbWF0ZS5jc3M=&#34;&gt;animate.css - npm (npmjs.com)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;代码实例：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;template&amp;gt;
	&amp;lt;div&amp;gt;
		&amp;lt;button @click=&amp;quot;isShow = !isShow&amp;quot;&amp;gt;显示/隐藏&amp;lt;/button&amp;gt;
		&amp;lt;transition-group 
			appear
			name=&amp;quot;animate__animated animate__bounce&amp;quot; 
			enter-active-class=&amp;quot;animate__swing&amp;quot;
			leave-active-class=&amp;quot;animate__backOutUp&amp;quot;
		&amp;gt;
			&amp;lt;h1 v-show=&amp;quot;!isShow&amp;quot; key=&amp;quot;1&amp;quot;&amp;gt;你好啊！&amp;lt;/h1&amp;gt;
			&amp;lt;h1 v-show=&amp;quot;isShow&amp;quot; key=&amp;quot;2&amp;quot;&amp;gt;尚硅谷！&amp;lt;/h1&amp;gt;
		&amp;lt;/transition-group&amp;gt;
	&amp;lt;/div&amp;gt;
&amp;lt;/template&amp;gt;

&amp;lt;script&amp;gt;
	import &#39;animate.css&#39;
	export default &amp;#123;
		name:&#39;Test&#39;,
		data() &amp;#123;
			return &amp;#123;
				isShow:true
			&amp;#125;
		&amp;#125;,
	&amp;#125;
&amp;lt;/script&amp;gt;

&amp;lt;style scoped&amp;gt;
	h1&amp;#123;
		background-color: orange;
	&amp;#125;
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;vue脚手架配置代理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vue脚手架配置代理&#34;&gt;#&lt;/a&gt; vue 脚手架配置代理&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;方法一&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	在 vue.config.js 中添加如下配置：&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;devServer&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  proxy&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;http://localhost:5000&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;说明：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;优点：配置简单，请求资源时直接发给前端（8080）即可。&lt;/li&gt;
&lt;li&gt;缺点：不能配置多个代理，不能灵活的控制请求是否走代理。&lt;/li&gt;
&lt;li&gt;工作方式：若按照上述配置代理，当请求了前端不存在的资源时，那么该请求会转发给服务器 （优先匹配前端资源）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;方法二&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	编写 vue.config.js 配置具体代理规则：&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;module&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;exports &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	devServer&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      proxy&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token string&#34;&gt;&#39;/api1&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 匹配所有以 &#39;/api1&#39; 开头的请求路径&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        target&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;http://localhost:5000&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 代理目标的基础路径&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        changeOrigin&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        pathRewrite&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;^/api1&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token string&#34;&gt;&#39;/api2&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 匹配所有以 &#39;/api2&#39; 开头的请求路径&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        target&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;http://localhost:5001&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 代理目标的基础路径&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        changeOrigin&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        pathRewrite&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;^/api2&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/*&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   changeOrigin 设置为 true 时，服务器收到的请求头中的 host 为：localhost:5000&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   changeOrigin 设置为 false 时，服务器收到的请求头中的 host 为：localhost:8080&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   changeOrigin 默认值为 true&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;*/&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;说明：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;优点：可以配置多个代理，且可以灵活的控制请求是否走代理。&lt;/li&gt;
&lt;li&gt;缺点：配置略微繁琐，请求资源时必须加前缀。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;组件通信方式总结&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#组件通信方式总结&#34;&gt;#&lt;/a&gt; 组件通信方式总结&lt;/h2&gt;
&lt;h3 id=&#34;props&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#props&#34;&gt;#&lt;/a&gt; props&lt;/h3&gt;
&lt;p&gt;​	&lt;strong&gt;适用于父子组件通信&lt;/strong&gt;：父组件传参数给子组件；&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jbi52dWVqcy5vcmcvZ3VpZGUvY29tcG9uZW50cy9wcm9wcy5odG1sI29uZS13YXktZGF0YS1mbG93&#34;&gt;Props | Vue.js (vuejs.org)&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;自定义事件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#自定义事件&#34;&gt;#&lt;/a&gt; 自定义事件&lt;/h3&gt;
&lt;p&gt;​	&lt;strong&gt;适用于父子组件通信&lt;/strong&gt;：子组件传数据给父组件（$on 与 $emit）；&lt;/p&gt;
&lt;h3 id=&#34;全局事件总线bus&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#全局事件总线bus&#34;&gt;#&lt;/a&gt; 全局事件总线 $bus&lt;/h3&gt;
&lt;p&gt;​	&lt;strong&gt;万能&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;Vue.prototype.$bus=this;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;vuex-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vuex-2&#34;&gt;#&lt;/a&gt; Vuex&lt;/h3&gt;
&lt;p&gt;​	&lt;strong&gt;万能&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;插槽&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#插槽&#34;&gt;#&lt;/a&gt; 插槽&lt;/h3&gt;
&lt;p&gt;​	&lt;strong&gt;父子组件通信&lt;/strong&gt;：一般传结构&lt;/p&gt;
&lt;p&gt;默认插槽，具名插槽，作用域插槽&lt;/p&gt;
&lt;h3 id=&#34;v-model-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#v-model-2&#34;&gt;#&lt;/a&gt; V-model&lt;/h3&gt;
&lt;p&gt;​	&lt;strong&gt;父子组件通信&lt;/strong&gt;：作用于组件上可实现某数据在父子组件间的双向绑定&lt;/p&gt;
&lt;h2 id=&#34;路由懒加载&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#路由懒加载&#34;&gt;#&lt;/a&gt; 路由懒加载&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;const foo = ()=&amp;gt;&amp;#123;
	return import(&#39;xxx/pages/Home&#39;) //返回一个Promise
&amp;#125;
&amp;#123;
	path:&#39;xxx&#39;,
	component:foo,
&amp;#125;
//简洁写法
&amp;#123;
	path:&#39;xxx&#39;,
	component:()=&amp;gt;import(&#39;xxx/pages/Home&#39;),
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;问题与解决方案&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#问题与解决方案&#34;&gt;#&lt;/a&gt; 问题与解决方案&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Vue 的面试题&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zZWdtZW50ZmF1bHQuY29tL2EvMTE5MDAwMDAxODYzNDc0NA==&#34;&gt;前端面试题 -- Vue - SegmentFault 思否&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;报错&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2t3YW1lMjExL2FydGljbGUvZGV0YWlscy8xMjAzMzIxMTQ=&#34;&gt;Vue 报错：component has been registered but not used，即定义好的组件未被使用&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://nc3021.github.io/2021/12/08/front-end/JavaScript/</guid>
            <title>JavaScript学习</title>
            <link>https://nc3021.github.io/2021/12/08/front-end/JavaScript/</link>
            <category term="前端" scheme="https://nc3021.github.io/categories/front-end/" />
            <category term="前端" scheme="https://nc3021.github.io/tags/%E5%89%8D%E7%AB%AF/" />
            <pubDate>Wed, 08 Dec 2021 19:17:11 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;javascript学习&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#javascript学习&#34;&gt;#&lt;/a&gt; JavaScript 学习&lt;/h1&gt;
&lt;h2 id=&#34;html中的javascript&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#html中的javascript&#34;&gt;#&lt;/a&gt; HTML 中的 JavaScript&lt;/h2&gt;
&lt;h3 id=&#34;script元素&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#script元素&#34;&gt;#&lt;/a&gt; &amp;lt;script&amp;gt; 元素&lt;/h3&gt;
&lt;p&gt;在 &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;  元素中的代码或外部 JavaScript 文件被解释完之前，页面的其余内容不会被加载，也不会被显示；&lt;/p&gt;
&lt;p&gt;如果同时存在 &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;  元素中的代码和外部 JavaScript 文件时，浏览器只会下载并执行脚本文件，忽略行内代码；&lt;/p&gt;
&lt;p&gt;现代 Web 应用程序一般将 JavaScript 的引用放在 &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;  元素中的页面内容后面；&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211123214438.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h4 id=&#34;延迟脚本&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#延迟脚本&#34;&gt;#&lt;/a&gt; 延迟脚本&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;defer&lt;/code&gt;  属性：表明脚本在执行时不会影响页面的构造，即脚本会被延迟到整个页面都解析完毕后再运行；&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211123214900.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;输入输出&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#输入输出&#34;&gt;#&lt;/a&gt; 输入输出&lt;/h3&gt;
&lt;h4 id=&#34;输出&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#输出&#34;&gt;#&lt;/a&gt; 输出&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211120154248.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token script&#34;&gt;&lt;span class=&#34;token language-javascript&#34;&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token function&#34;&gt;prompt&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;这是一个输入框&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token function&#34;&gt;alert&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;这是一个警示框&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;这是控制台打印输出的&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;输入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#输入&#34;&gt;#&lt;/a&gt; 输入&lt;/h4&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; age &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;promopt&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;请输入你的年龄&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;语言基础&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#语言基础&#34;&gt;#&lt;/a&gt; 语言基础&lt;/h2&gt;
&lt;h3 id=&#34;数据类型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据类型&#34;&gt;#&lt;/a&gt; 数据类型&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211123183451.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;typeof操作符&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#typeof操作符&#34;&gt;#&lt;/a&gt; typeof 操作符&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211124155612.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;number型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#number型&#34;&gt;#&lt;/a&gt; Number 型&lt;/h3&gt;
&lt;p&gt;数字型进制：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211123185430.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;数值型范围：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211123185459.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;数值型的三个特殊值：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211123185516.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;isNaN（）函数：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211123185619.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;NaN:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211124161440.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;浮点数：&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211124161136.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;永远不要测试某个特定的浮点数值；&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;字符串数组转数字数组&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; strArr&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;1&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;2&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;3&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; newArr&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;strArr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;Number&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;string型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#string型&#34;&gt;#&lt;/a&gt; String 型&lt;/h3&gt;
&lt;p&gt;单引号或者双引号，如果嵌套就外双内单或内双外单；&lt;/p&gt;
&lt;p&gt;字符串转义符：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211123190141.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;字符串长度：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; txt &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;abcdefg&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;txt&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;字符串拼接：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211123191254.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;toString():&lt;/p&gt;
&lt;p&gt;数值、布尔值、对象和字符串值（没错，每个字符串也都有一个 toString () 方法，该方法返回字符串的一个副本）都有 toString () 方法。但 null 和 undefined 值没有这个方法；&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211124174400.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;boolean型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#boolean型&#34;&gt;#&lt;/a&gt; Boolean 型&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211123192929.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;true 和 false 是区分大小写的，故必须小写；&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211124160713.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211124160738.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;undefined与null&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#undefined与null&#34;&gt;#&lt;/a&gt; undefined 与 null&lt;/h3&gt;
&lt;p&gt;如果一个变量声明未赋值，就是 undefined（未定义数据类型）；&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211123193344.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;一个声明变量给 null 值，里面存的值为空；逻辑上讲，null 值表示一个空对象指针；&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; car &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;typeof&lt;/span&gt; car&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;//&#34;object&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211123193352.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;symbol型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#symbol型&#34;&gt;#&lt;/a&gt; Symbol 型&lt;/h3&gt;
&lt;p&gt;symbol 的值是通过 Symbol () 函数生成，每一个 symbol 的值都是唯一的，并且 symbol 类型的值可以作为对象的属性标识符使用，这也是 symbol 类型设计的目的。&lt;br /&gt;
所以现在对象属性名可以为两种类型：一种就是原本的字符串类型，一种即为新增的 symbol 类型。凡是使用 symbol 命名的属性都是独一无二的，保证不与其他属性名产生冲突。&lt;/p&gt;
&lt;h3 id=&#34;object型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#object型&#34;&gt;#&lt;/a&gt; Object 型&lt;/h3&gt;
&lt;p&gt;对象（Object）其实就是一组数据和功能的集合。对象可以通过执行 new 操作符后跟要创建 的对象类型的名称来创建。而创建 Object 类型的实例并为其添加属性和（或）方法，就可以创建自定义对象；&lt;/p&gt;
&lt;h3 id=&#34;数值转换&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数值转换&#34;&gt;#&lt;/a&gt; 数值转换&lt;/h3&gt;
&lt;p&gt;常见的类型转换有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;强制转换（显示转换）&lt;/li&gt;
&lt;li&gt;自动转换（隐式转换）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;显示转换：&lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Number&lt;/strong&gt;():&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20220116142916.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;Number&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;324&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 324&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 字符串：如果可以被解析为数值，则转换为相应的数值&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;Number&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;324&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 324&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 字符串：如果不可以被解析为数值，返回 NaN&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;Number&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;324abc&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// NaN&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 空字符串转为 0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;Number&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 布尔值：true 转成 1，false 转成 0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;Number&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;Number&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//undefined：转成 NaN&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;Number&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;undefined&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// NaN&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//null：转成 0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;Number&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 对象：通常转换成 NaN (除了只包含单个数值的数组)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;Number&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;a&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// NaN&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;Number&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// NaN&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;Number&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 5&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Number&lt;/code&gt;  转换的时候是很严格的，只要有一个字符无法转成数值，整个字符串就会被转为 &lt;code&gt;NaN&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;parseInt&lt;/strong&gt;()&lt;/p&gt;
&lt;p&gt;&lt;code&gt;parseInt&lt;/code&gt;  相比 &lt;code&gt;Number&lt;/code&gt; ，就没那么严格了， &lt;code&gt;parseInt&lt;/code&gt;  函数逐个解析字符，遇到不能转换的字符就停下来；&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;parseInt&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;32a3&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;//32&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;不能转换出小数；&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;parseFloat&lt;/strong&gt;():&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211124174032.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;String&lt;/strong&gt;()&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20220116143304.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 数值：转为相应的字符串&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// &#34;1&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 字符串：转换后还是原来的值&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;a&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// &#34;a&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 布尔值：true 转为字符串 &#34;true&#34;，false 转为字符串 &#34;false&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// &#34;true&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//undefined：转为字符串 &#34;undefined&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;undefined&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// &#34;undefined&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//null：转为字符串 &#34;null&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// &#34;null&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 对象&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;a&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// &#34;[object Object]&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// &#34;1,2,3&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;Boolean()&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;可以将任意类型的值转为布尔值，转换规则如下：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20220116143424.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;Boolean&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;undefined&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// false&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;Boolean&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// false&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;Boolean&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// false&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;Boolean&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;NaN&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// false&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;Boolean&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// false&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;Boolean&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;Boolean&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;Boolean&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Boolean&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt; &lt;code&gt;隐式转换：&lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我们这里可以归纳为两种情况发生隐式转换的场景：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;比较运算（ &lt;code&gt;==&lt;/code&gt; 、 &lt;code&gt;!=&lt;/code&gt; 、 &lt;code&gt;&amp;gt;&lt;/code&gt; 、 &lt;code&gt;&amp;lt;&lt;/code&gt; ）、 &lt;code&gt;if&lt;/code&gt; 、 &lt;code&gt;while&lt;/code&gt;  需要布尔值地方&lt;/li&gt;
&lt;li&gt;算术运算（ &lt;code&gt;+&lt;/code&gt; 、 &lt;code&gt;-&lt;/code&gt; 、 &lt;code&gt;*&lt;/code&gt; 、 &lt;code&gt;/&lt;/code&gt; 、 &lt;code&gt;%&lt;/code&gt; ）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;字符串操作方法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#字符串操作方法&#34;&gt;#&lt;/a&gt; 字符串操作方法&lt;/h3&gt;
&lt;p&gt;提取字符串：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;slice()&lt;/code&gt;   &lt;code&gt;substr()&lt;/code&gt;   &lt;code&gt;substring()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211125144400.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;查看字符串位置：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;indexOf&lt;/code&gt;   &lt;code&gt;lastIndexOf()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211125144909.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;trim()：&lt;/p&gt;
&lt;p&gt;这个方法会创建字符串的一个副本，删除前、后所有空格符，再返回结果；另外，trimLeft () 和 trimRight () 方法分别用于从字符串开始和末尾清理空格符。&lt;/p&gt;
&lt;p&gt;repeat():&lt;/p&gt;
&lt;p&gt;这个方法接收一个整数参数，表示要将字符串复制多少次，然后返回拼接所有副本后的结果。&lt;/p&gt;
&lt;p&gt;padStart () 与 padEnd ()：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211125145704.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;大小写转换：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;toLowerCase&lt;/code&gt;   &lt;code&gt;toUpperCase&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;将字符串全部转换为小写（大写）；&lt;/p&gt;
&lt;p&gt;字符串替换：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;replace()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211125150414.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;localeCompare():&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211125150626.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;math&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#math&#34;&gt;#&lt;/a&gt; Math&lt;/h3&gt;
&lt;p&gt;Math 的基本属性：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211125151221.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;求最大最小值：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;min()&lt;/code&gt;   &lt;code&gt;max()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211125151343.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;舍入方法：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;round()&lt;/code&gt;   &lt;code&gt;fround()&lt;/code&gt;   &lt;code&gt;ceil()&lt;/code&gt;   &lt;code&gt;floor()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;round()&lt;/strong&gt;: 执行四舍五入；&lt;/p&gt;
&lt;p&gt;fround (): 返回数值最接近的单精度（32 位）浮点值；&lt;/p&gt;
&lt;p&gt;ceil (): 向上舍入最接近的整数；&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;floor()&lt;/strong&gt;: 向下舍入最接近的整数；&lt;/p&gt;
&lt;p&gt;随机数：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;random()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;该方法生成一个在 [0,1) 范围内的随机数；&lt;/p&gt;
&lt;p&gt;通常使用方法：&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;selectFrom&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;lowerValue&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;upperValue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; choices &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; upperValue&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;lowerValue&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; Math&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;floor&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;Math&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;random&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;choices&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;lowerValue&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;其它数学方法：&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211125152535.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;array&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#array&#34;&gt;#&lt;/a&gt; Array&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;from()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Array.from () 的第一个参数是一个类数组对象，即任何可迭代的结构，或者有一个 length 属性和可索引元素的结构；&lt;/p&gt;
&lt;p&gt;Array.from () 还接收第二个可选的映射函数参数，这个函数可以直接增强新数组的值；&lt;/p&gt;
&lt;p&gt;&lt;code&gt;fill()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211125155931.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;copyWithin()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;toString()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;push()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;该方法接收任意数量的参数，并将它们添加到数组末尾，返回&lt;u&gt;数组的最新长度&lt;/u&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pop()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;该方法则用于删除数组的最后一项，同时减少数组的 length 值，返回&lt;u&gt;被删除的项&lt;/u&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shift()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;该方法它会删除数组的&lt;u&gt;第一项并返回它&lt;/u&gt;，然后数组长度减 1。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;unshift()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;该方法会在数组开头添加任意多个值，然后返回&lt;u&gt;新的数组长度&lt;/u&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;reverse()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;该方法将数组元素反向排序；&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sort()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;一般使用该方法时接收一个比较函数；&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211125161333.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;slice()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211125161705.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;如果参数有负数，则改为数组长度加上负值。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;splice()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211125161929.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;定型数组：&lt;/p&gt;
&lt;h3 id=&#34;map&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#map&#34;&gt;#&lt;/a&gt; Map&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211125162502.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;写法&lt;/th&gt;
&lt;th&gt;关键字&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;new Map()&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;创建&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;创建 map&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;map.set(key, value)&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;设置&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;根据键存储值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;map.get(key)&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;获取&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;根据键来返回值，如果  &lt;code&gt;map&lt;/code&gt;  中不存在对应的  &lt;code&gt;key&lt;/code&gt; ，则返回  &lt;code&gt;undefined&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;map.has(key)&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;是否存在&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;如果  &lt;code&gt;key&lt;/code&gt;  存在则返回  &lt;code&gt;true&lt;/code&gt; ，否则返回  &lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;map.delete(key)&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;删除&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;删除指定键的值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;map.clear()&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;清空&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;清空 map&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;map.size&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;大小&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;返回当前元素个数&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;code&gt;Objects&lt;/code&gt;  和  &lt;code&gt;Maps&lt;/code&gt;  类似的是，它们都允许你按键存取一个值、删除键、检测一个键是否绑定了值。&lt;/p&gt;
&lt;p&gt;对比：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;意外的键&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Map：不包含任何键（ &lt;code&gt;Map默认情况不包含任何键。只包含显式插入的键。&lt;/code&gt; ）&lt;/li&gt;
&lt;li&gt;Object：有一个原型（ &lt;code&gt;一个 Object有一个原型, 原型链上的键名有可能和你自己在对象上的设置的键名产生冲突。&lt;/code&gt; ）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;键的类型&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Map：任意值（ &lt;code&gt;一个 Map的键可以是任意值，包括函数、对象或任意基本类型。&lt;/code&gt; ）&lt;/li&gt;
&lt;li&gt;Object：必须是 String 或 Symbol（ &lt;code&gt;一个Object 的键必须是一个 String 或是Symbol。&lt;/code&gt; ）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;键的顺序&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Map：有序（ &lt;code&gt;Map 中的 key 是有序的。因此，当迭代的时候，一个 Map 对象以插入的顺序返回键值。&lt;/code&gt; ）&lt;/li&gt;
&lt;li&gt;Object：无序（ &lt;code&gt;一个 Object 的键是无序的&lt;/code&gt; ）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Size&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Map：可直接获取长度（ &lt;code&gt; Map 的键值对个数可以轻易地通过size 属性获取&lt;/code&gt; ）&lt;/li&gt;
&lt;li&gt;Object：不能直接获取长度（ &lt;code&gt;Object 的键值对个数只能手动计算&lt;/code&gt; ）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;性能&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Map：在频繁增删键值对的场景下表现更好。&lt;/li&gt;
&lt;li&gt;Object：在频繁添加和删除键值对的场景下未作出优化。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;set&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#set&#34;&gt;#&lt;/a&gt; Set&lt;/h3&gt;
&lt;p&gt;​	Set 与数组类似， Set 集合中的元素不重复。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;查找元素： 在数组中使用 indexOf () 或 includes () 检查元素是否存在比较慢；&lt;/li&gt;
&lt;li&gt;删除元素： 在 Set 中，可以通过值删除元素。即在数组中，基于索引的 splice () 功能；&lt;/li&gt;
&lt;li&gt;插入元素： 在 Set 中添加元素比在数组中通过 push ()、 unshift () 或其他同类操作要快；&lt;/li&gt;
&lt;li&gt;去重： Set 对象仅能存储不同的值；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Set 常用操作方法：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;方法 / 属性&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;功能介绍&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;size&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;获取当前 Set 对象的长度&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;add(value)&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;向当前 Set 对象中添加一个值，返回的是 Set 对象，所以支持链式写法&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;delete(value)&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;删除当前 Set 对象中的一个值，返回一个布尔值，表示是否删除成功&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;has(value)&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;检测这个 value 是否是当前 Set 对象的一个元素，通过返回的布尔值表示&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;clear()&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;清除当前 Set 对象所有元素，没有返回值&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Set 遍历方法：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;方法 / 属性&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;功能介绍&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;keys()&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;返回该 Set 对象键名的遍历器，等同 values ()&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;values()&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;返回该 Set 对象键值的遍历器，等同 keys ()&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;entries()&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;返回该 Set 对象键值对的遍历器 (目前感觉没什么用)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;forEach()&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;使用回调函数遍历该 Set 对象的每个元素&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;字符串数组方法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#字符串数组方法&#34;&gt;#&lt;/a&gt; 字符串数组方法&lt;/h2&gt;
&lt;h3 id=&#34;数组&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数组&#34;&gt;#&lt;/a&gt; 数组&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;改变原数组的方法：&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;push&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#push&#34;&gt;#&lt;/a&gt; push&lt;/h4&gt;
&lt;p&gt;​	push () 方法可向数组的末尾添加一个或多个元素，并&lt;strong&gt;返回新的长度&lt;/strong&gt;；&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; ary&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;40&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; res&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;ary&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//ary=[10,20,30,40,50]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//res=5&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;unshift&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#unshift&#34;&gt;#&lt;/a&gt; unshift&lt;/h4&gt;
&lt;p&gt;​	unshift () 方法可向数组的开头添加一个或更多元素，并&lt;strong&gt;返回新的长度&lt;/strong&gt;；&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; ary&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;40&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; res&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;ary&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;unshift&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//ary=[50,10,20,30,40]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//res=5&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;pop&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#pop&#34;&gt;#&lt;/a&gt; pop&lt;/h4&gt;
&lt;p&gt;​	pop () 用于删除并返回最后一个元素，尾部删除，&lt;strong&gt;返回被删除的元素&lt;/strong&gt;，改变原数组；&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; a &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; b &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;pop&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// [1,2]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 3&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;shift&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#shift&#34;&gt;#&lt;/a&gt; shift&lt;/h4&gt;
&lt;p&gt;​	shift () 用于删除并返回首个元素，删除首部元素，&lt;strong&gt;返回被删元素&lt;/strong&gt;，改变原数组；&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; a &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; b &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;shift&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// [2,3]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;sort&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sort&#34;&gt;#&lt;/a&gt; sort&lt;/h4&gt;
&lt;p&gt;按 ascii 码排序，&lt;strong&gt;改变原数组，返回排序后的数组&lt;/strong&gt;；也可以接收一个比较函数；&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; a &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;a&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;b&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;d&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;c&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sort&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// [&#39;a&#39;,&#39;b&#39;,&#39;c&#39;,&#39;d&#39;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// [&#39;a&#39;,&#39;b&#39;,&#39;c&#39;,&#39;d&#39;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;splice&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#splice&#34;&gt;#&lt;/a&gt; splice&lt;/h4&gt;
&lt;p&gt;​	splice () 方法用于添加或删除数组中的元素；&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; n &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;array&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;splice&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;index&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;howmany&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;item1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;itemX&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 如果从 arrayObject 中删除了元素，则返回的是含有被删除的元素的数组，如果只增加了元素，则返回空数组&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;参数&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;em&gt;index&lt;/em&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;必需。规定从何处添加 / 删除元素。 该参数是开始插入和（或）删除的数组元素的下标，必须是数字。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;em&gt;howmany&lt;/em&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;可选。规定应该删除多少元素。必须是数字，但可以是 &amp;quot;0&amp;quot;。 如果未规定此参数，则删除从 index 开始到原数组结尾的所有元素。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;em&gt;item1&lt;/em&gt;, ..., &lt;em&gt;itemX&lt;/em&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;可选。要添加到数组的新元素&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;reverse&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#reverse&#34;&gt;#&lt;/a&gt; reverse&lt;/h4&gt;
&lt;p&gt;reverse () 方法用于颠倒数组中元素的顺序，&lt;strong&gt;返回的是颠倒后的数组，会改变原数组&lt;/strong&gt;。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; a  &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;reverse&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// [6,7,2,3,1]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// [6,7,2,3,1]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;fill&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#fill&#34;&gt;#&lt;/a&gt; fill&lt;/h4&gt;
&lt;p&gt;fill () 方法用于将一个固定值替换数组的元素，&lt;strong&gt;返回改变后的原数组&lt;/strong&gt;；&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;array&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;fill&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;value&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; start&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; end&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//start 与 end 为可选参数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;不改变原数组的方法：&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;foreach&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#foreach&#34;&gt;#&lt;/a&gt; forEach&lt;/h4&gt;
&lt;p&gt;遍历整个数组，中途不能中断，&lt;strong&gt;没有返回值，不能改变原数组&lt;/strong&gt;；&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; arr &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;a&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;b&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;c&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; copy &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;arr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;forEach&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;item&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     copy&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;item&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;   &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;copy&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;slice&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#slice&#34;&gt;#&lt;/a&gt; slice&lt;/h4&gt;
&lt;p&gt;​	slice (startIndex,endIndex) 返回从 startIndex 开始 (包括)，到 endIndex (不包括) 之间的原属组成的数组，&lt;strong&gt;返回新数组，不改变原数组&lt;/strong&gt;；&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; a &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; b &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;slice&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 不填参数则表示剪切整个数组  &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; c &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;slice&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// [1,2,3] &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// [1]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;c&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// [1,2,3]    &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a&lt;span class=&#34;token operator&#34;&gt;===&lt;/span&gt;c&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;//false// 注意 a !== c &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 负数表示从后往前数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; d &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;slice&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;   &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;d&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// []   从左向右截取，所以说为 []&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; e &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;slice&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;e&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// [3]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;join&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#join&#34;&gt;#&lt;/a&gt; join&lt;/h4&gt;
&lt;p&gt;join () 方法用来将数组转换为字符串，&lt;strong&gt;不改变原数组，返回转换后的字符串&lt;/strong&gt;；&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; a &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;,&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 1,2,3,4,5&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// [1,2,3,4,5]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;filter&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#filter&#34;&gt;#&lt;/a&gt; filter&lt;/h4&gt;
&lt;p&gt;filter () 方法&lt;strong&gt;返回数组中满足条件的元素组成的新数组，原数组不变&lt;/strong&gt;，参数为一个方法， &lt;code&gt;filter()&lt;/code&gt;  把传入的函数依次作用于每个元素，然后根据返回值是 &lt;code&gt;true&lt;/code&gt;  还是 &lt;code&gt;false&lt;/code&gt;  决定保留还是丢弃该元素；&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; a &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 第一个参数为一个方法，有三个参数，current: 当前值 index: 当前值下标 array: 这个数组对象&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; b &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;filter&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;current&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;index&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;array&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; current &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// [1,2,3,4]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// [1,2,3,4,11]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;map-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#map-2&#34;&gt;#&lt;/a&gt; map&lt;/h4&gt;
&lt;p&gt;map () 方法来根据需求格式化原数组，返回格式化后的数组。原数组不变；&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; a &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 参数同 filter 方法&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; b &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;current&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;index&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;array&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; current &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// [2,3,4,5,6]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// [1,2,3,4,5]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;indexof和lastindexof&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#indexof和lastindexof&#34;&gt;#&lt;/a&gt; indexOf 和 lastIndexOf&lt;/h4&gt;
&lt;p&gt;indexOf (某元素，startIndex) 从 startIndex 开始，查找某元素在数组中的位置，若存在，则返回第一个位置的下标，否则返回 - 1&lt;/p&gt;
&lt;p&gt;lastIndexOf (某元素，startIndex) 和 indexOf () 相同，区别在于从尾部向首部查询&lt;/p&gt;
&lt;p&gt;不会改变原数组，&lt;strong&gt;返回找到的 index, 否则返回 - 1&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;若不使用下标，则一般通过 includes () 方法代替 indexOf ()&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; a &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;indexOf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 2&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;indexOf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 4&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;includes&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#includes&#34;&gt;#&lt;/a&gt; includes&lt;/h4&gt;
&lt;p&gt;includes () 方法，返回一个布尔值。 参数是一个 value, 一般用于简单数组。&lt;/p&gt;
&lt;p&gt;对于复杂数组，则可以使用 some () 方法替代 includes () 方法；&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; a &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;includes&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;concat&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#concat&#34;&gt;#&lt;/a&gt; concat&lt;/h4&gt;
&lt;p&gt;首先会创建一个当前数组的副本，然后再把它的参数添加到副本末尾，最后返回这个新构建的数组，不会影响原始数组；&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; colors &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;red&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;green&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;blue&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; colors2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; colors&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;concat&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;yellow&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;black&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;brown&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;colors&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// [&#34;red&#34;, &#34;green&#34;,&#34;blue&#34;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;colors2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// [&#34;red&#34;, &#34;green&#34;, &#34;blue&#34;, &#34;yellow&#34;, &#34;black&#34;, &#34;brown&#34;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;every&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#every&#34;&gt;#&lt;/a&gt; every&lt;/h4&gt;
&lt;p&gt;对数组的每一项都运行给定的函数，若每一项都返回 ture, 则返回 true；&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; a &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; b &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;every&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;current&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;index&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;array&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;       &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; current &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; c &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;every&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;current&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;index&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;array&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;       &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; current &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// true &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;c&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// false&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;some&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#some&#34;&gt;#&lt;/a&gt; some&lt;/h4&gt;
&lt;p&gt;对数组的每一项都运行给定的函数，若存在一项或多项返回 ture, 则返回 true；&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; a &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; b &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;some&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;current&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;index&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;array&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;       &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; current &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; c &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;some&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;current&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;index&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;array&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;       &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; current &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// true &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;c&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// false&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;find&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#find&#34;&gt;#&lt;/a&gt; find&lt;/h4&gt;
&lt;p&gt;找到数组中第一次满足条件的元素，并&lt;strong&gt;返回改元素&lt;/strong&gt;，若找不到则返回 undefined。不改变原数组。&lt;/p&gt;
&lt;p&gt;和 filter () 方法的区别在于：filter 返回值是所有满足条件的元素组成的数组，&lt;/p&gt;
&lt;p&gt;一般在需要使用找到的元素时，用 find () 方法&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; a &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//b 在下面需要使用，则一般用 find&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; b &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;find&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;ele&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;index&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;array&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; ele &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; c &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; d &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; b &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; c&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// [1,2,3,4]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;d&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 4&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 若只需判断元素是否存在&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 若果是简单数组 (非对象数组)，则一般使用 Array.includes (value) 方法&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 如果为对象数组，则可以使用 Array.some () 方法&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; a &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;includes&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; a &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;name&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;xiaoming&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;name&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;xiaohong&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;some&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;ele&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; ele&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;name &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;xiaoming&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;                            &lt;span class=&#34;token comment&#34;&gt;// true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;findindex&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#findindex&#34;&gt;#&lt;/a&gt; findIndex&lt;/h4&gt;
&lt;p&gt;findIndex () 的作用同 indexOf ()，返回第一个满足条件的下标，并停止寻找。&lt;/p&gt;
&lt;p&gt;区别是 findIndex () 的参数为一个回调函数，且一般用于对象数组&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; a &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; b &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;findIndex&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;ele&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;index&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;array&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; ele &lt;span class=&#34;token operator&#34;&gt;===&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; c &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; a&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;indexOf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// [1,2,3,4]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;c&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;arrayfrom&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#arrayfrom&#34;&gt;#&lt;/a&gt; Array.from&lt;/h4&gt;
&lt;p&gt;该 Array.from () 方法将从具有 length 属性或可迭代对象的任何 JavaScript 对象中返回一个数组对象。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 可用来创建多维数组&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; ary&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Array&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;Array&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;m&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;Array&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;fill&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 创建 m*n 的全 0 数组&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;isarray&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#isarray&#34;&gt;#&lt;/a&gt; isArray&lt;/h4&gt;
&lt;p&gt;用来判断一个元素是否为数组；&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Array&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;isArray&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Array&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;isArray&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// false&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;字符串&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#字符串&#34;&gt;#&lt;/a&gt; 字符串&lt;/h3&gt;
&lt;h4 id=&#34;concat-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#concat-2&#34;&gt;#&lt;/a&gt; concat&lt;/h4&gt;
&lt;p&gt;concat () 方法用于连接两个或多个字符串或。&lt;/p&gt;
&lt;p&gt;该方法没有改变原有字符串，但是会&lt;strong&gt;返回连接两个或多个字符串的新字符串&lt;/strong&gt;。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; str1&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Hello &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; str2&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;world!&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; str3&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34; Have a nice day!&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; n &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; str1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;concat&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;str2&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;str3&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// n=&#39;Hello world! Have a nice day!&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;slice-substr-substring&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#slice-substr-substring&#34;&gt;#&lt;/a&gt; slice、substr、substring&lt;/h4&gt;
&lt;p&gt;​	&lt;strong&gt;不改变原字符串，返回新字符串&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211125144400.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h4 id=&#34;trim&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#trim&#34;&gt;#&lt;/a&gt; trim&lt;/h4&gt;
&lt;p&gt;trim（）移除字符串前后的空格，经常在对 input 和 textarea 的值做判断时用到，&lt;strong&gt;不改变原字符串，返回新字符串&lt;/strong&gt;；同理：trimLeft () trimRight ()&lt;/p&gt;
&lt;h4 id=&#34;tolowercase&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#tolowercase&#34;&gt;#&lt;/a&gt; toLowerCase&lt;/h4&gt;
&lt;p&gt;把字符串转换成小写的；&lt;/p&gt;
&lt;h4 id=&#34;touppercase&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#touppercase&#34;&gt;#&lt;/a&gt; toUpperCase&lt;/h4&gt;
&lt;p&gt;把字符串转换成大写的；&lt;/p&gt;
&lt;h4 id=&#34;repeat&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#repeat&#34;&gt;#&lt;/a&gt; repeat&lt;/h4&gt;
&lt;p&gt;接收一个整数参数，表示要将字符串复制多少次，然后返回拼接所有副本后的结果；&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; stringValue &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;na &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; copyResult &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; stringValue&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;repeat&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// na na&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;charat&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#charat&#34;&gt;#&lt;/a&gt; charAt&lt;/h4&gt;
&lt;p&gt;返回指定索引的字符；&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; str &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;abbcalgldkjgldgehlgjldf&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;str&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;charAt&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 结果是 b&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;includes-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#includes-2&#34;&gt;#&lt;/a&gt; includes&lt;/h4&gt;
&lt;p&gt;从字符串中搜索传入的字符串，并返回一个表示是否包含的布尔值；&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; message &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;foobarbaz&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;message&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;includes&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;bar&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;message&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;includes&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;qux&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// false&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;indexof&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#indexof&#34;&gt;#&lt;/a&gt; indexOf&lt;/h4&gt;
&lt;p&gt;同上&lt;/p&gt;
&lt;h4 id=&#34;split&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#split&#34;&gt;#&lt;/a&gt; split&lt;/h4&gt;
&lt;p&gt;把字符串分割为子字符串数组，&lt;strong&gt;并返回新数组&lt;/strong&gt;；&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; ary&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;string&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;separator&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;limit&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 第一个参数为用于分割的字符串，一般为 &#39;&#39; 或 &#39; &#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 第二个参数为返回的字符串的最大长度&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; str&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;How are you doing today?&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; n&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;str&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//[&#39;H&#39;, &#39;o&#39;, &#39;w&#39;, &#39; &#39;, &#39;a&#39;, &#39;r&#39;, &#39;e&#39;, &#39; &#39;, &#39;y&#39;, &#39;o&#39;, &#39;u&#39;, &#39; &#39;, &#39;d&#39;, &#39;o&#39;, &#39;i&#39;, &#39;n&#39;, &#39;g&#39;, &#39; &#39;, &#39;t&#39;, &#39;o&#39;, &#39;d&#39;, &#39;a&#39;, &#39;y&#39;, &#39;?&#39;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;match&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#match&#34;&gt;#&lt;/a&gt; match&lt;/h4&gt;
&lt;p&gt;match () 方法可在字符串内检索指定的值，找到一个或多个正则表达式的匹配，并返回一个新数组；&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; text &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;cat, bat, sat, fat&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; pattern &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token regex&#34;&gt;&lt;span class=&#34;token regex-delimiter&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token regex-source language-regex&#34;&gt;.at&lt;/span&gt;&lt;span class=&#34;token regex-delimiter&#34;&gt;/&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; matches &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; text&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;match&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;pattern&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;matches&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// &#34;cat&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 参数 regexp 规定要匹配的模式的 RegExp 对象。如果该参数不是 RegExp 对象，则需要首先把它传递给 RegExp 构造函数，将其转换为 RegExp 对象&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;replace&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#replace&#34;&gt;#&lt;/a&gt; replace&lt;/h4&gt;
&lt;p&gt;replace () 方法用于在字符串中用一些字符替换另一些字符，或替换一个与正则表达式匹配的子串；&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; stringNew&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;stringOld&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;regexp&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;substr&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;replacement&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; text &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;cat, bat, sat, fat&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; pos &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; text&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;search&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token regex&#34;&gt;&lt;span class=&#34;token regex-delimiter&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token regex-source language-regex&#34;&gt;at&lt;/span&gt;&lt;span class=&#34;token regex-delimiter&#34;&gt;/&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;pos&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;search&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#search&#34;&gt;#&lt;/a&gt; search&lt;/h4&gt;
&lt;p&gt;​	search () 方法用于检索字符串中指定的子字符串，或检索与正则表达式相匹配的子字符串。找到则返回匹配索引，否则返回 -1；&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;stringObject&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;search&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;regexp&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//stringObject 中第一个与 regexp 相匹配的子串的起始位置。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; text &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;cat, bat, sat, fat&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; pos &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; text&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;search&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token regex&#34;&gt;&lt;span class=&#34;token regex-delimiter&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token regex-source language-regex&#34;&gt;at&lt;/span&gt;&lt;span class=&#34;token regex-delimiter&#34;&gt;/&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;pos&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;正则表达式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#正则表达式&#34;&gt;#&lt;/a&gt; 正则表达式&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;模式&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;g：全局模式，常用于执行一个全局搜索匹配，即（不仅仅返回第一个匹配的，而是返回全部）；&lt;/li&gt;
&lt;li&gt;i：不区分大小写；&lt;/li&gt;
&lt;li&gt;m：执行一个多行匹配&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;普通字符&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;\w&lt;/code&gt; ：匹配一个字母、数字、下划线；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\W&lt;/code&gt; ：匹配一个非字母、数字、下划线；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\d&lt;/code&gt; ：匹配一个数字&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\D&lt;/code&gt; ：匹配一个非数字&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\n&lt;/code&gt; ：查找一个换行符&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\r&lt;/code&gt; ：查找一个回车符&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\s&lt;/code&gt; ：可以匹配一个空格（也包括 Tab 等空白符）；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[A-Z]&lt;/code&gt; ：[A-Z] 表示一个区间，匹配所有大写字母，[a-z] 表示所有小写字母；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[A-z]&lt;/code&gt; ：查找从大写 A 到小写 z 范围内的字符，即所有大小写的字母；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[0-9]&lt;/code&gt; ：查找从 0 至 9 范围内的数字，即查找数字；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[a-zA-Z0-9]&lt;/code&gt; ：查找所有的英文字符和数字；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;特殊字符&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;[^]&lt;/code&gt; ：查找不在方括号内任意一个字符（如 &lt;code&gt;[^ABC]&lt;/code&gt; );&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.&lt;/code&gt; ：可以匹配任意字符，但不包括换行符，故 &lt;code&gt;&#39;py.&#39;&lt;/code&gt;  可以匹配 &lt;code&gt;&#39;pyc&#39;&lt;/code&gt; 、 &lt;code&gt;&#39;pyo&#39;&lt;/code&gt; 、 &lt;code&gt;&#39;py!&#39;&lt;/code&gt;  等等；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;?&lt;/code&gt; ： &lt;code&gt;n?&lt;/code&gt;  匹配任何包含零个或一个 n 的字符串；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;*&lt;/code&gt; ： &lt;code&gt;n*&lt;/code&gt;  匹配任何包含零个或多个 n 的字符串；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;+&lt;/code&gt; ： &lt;code&gt;n+&lt;/code&gt;  匹配任何包含一个及以上 n 的字符串；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;#123;&amp;#125;&lt;/code&gt; ： &lt;code&gt;n&amp;#123;x&amp;#125;&lt;/code&gt;  匹配包含 x 个 n 的序列的字符串， &lt;code&gt;n&amp;#123;x,y&amp;#125;&lt;/code&gt;  匹配包含最少 x 个、最多 y 个 n 的序列的字符串， &lt;code&gt;n&amp;#123;x,&amp;#125;&lt;/code&gt;  匹配包含至少 x 个 n 的序列的字符串；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;|&lt;/code&gt; ：表示在两个子模式的匹配结果中任选一个，如 &lt;code&gt;/a &amp;#123;dog|cat&amp;#125;/&lt;/code&gt; ;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;()&lt;/code&gt; ：表示括号内的字符必须全部包含；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[]&lt;/code&gt; ：表示方括号内的字符为指定字符的范围；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;^&lt;/code&gt; ：匹配开头，在多行检测中，会匹配（限制）一行的开头，如 &lt;code&gt;/^\w+/&lt;/code&gt;  会匹配第一个单词；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$&lt;/code&gt; ：匹配结尾，在多行检测中，会匹配一行的结尾，如 &lt;code&gt;/\w+$/&lt;/code&gt;  会匹配最后一个单词；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\&lt;/code&gt; ：转义字符，用于匹配一些保留的字符  &lt;code&gt;[ ] ( ) &amp;#123; &amp;#125; . * + ? ^ $ \ |&lt;/code&gt; ；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\num&lt;/code&gt; ：反向引用，所谓的 \1 引用了第一个 () 匹配到的内容，比如 (x)(y)\2 该正则是想匹配到第一个字符是 x, 第二个字符是 y，第三个字符也是 y 的内容，即 xyy 能够被匹配到，但是 xya、xyb 就不能被匹配到；&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;test&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#test&#34;&gt;#&lt;/a&gt; test()&lt;/h4&gt;
&lt;p&gt;test () 方法用于检测一个字符串是否匹配某个模式，如果字符串 string 中含有与 RegExpObject 匹配的文本，则返回 true，否则返回 false。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;RegExpObject&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;string&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;代码实例：&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;#123456&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;247146086@qq.com&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;15281091015&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;123.0.5.255&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token string&#34;&gt;&#39;https://www.bilibili.com/video/BV1QK4y1K72U?spm_id_from=333.999.0.0&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token string&#34;&gt;&#39;247146086&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;0.0.0.0&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;#ABC&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;2021-10-01&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;18215576625&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;825662107&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;15281091015&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token string&#34;&gt;&#39;https://www.https://nc3021.github.io/&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;255.255.255.255&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;1257730824&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token string&#34;&gt;&#39;#9bf&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;1984-02-30&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;regexp&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;ary&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; reg&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; result &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    ary&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;forEach&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;element&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;element&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;match&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;reg&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            result&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;element&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;match&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;reg&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; result&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//phoneNumber&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; regPhone &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token regex&#34;&gt;&lt;span class=&#34;token regex-delimiter&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token regex-source language-regex&#34;&gt;^1[3-9][0-9]&amp;#123;9&amp;#125;$&lt;/span&gt;&lt;span class=&#34;token regex-delimiter&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token regex-flags&#34;&gt;g&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; aryPhone &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;regexp&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; regPhone&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;phoneNumber:&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; aryPhone&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//QQNumber&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; regQQ &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token regex&#34;&gt;&lt;span class=&#34;token regex-delimiter&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token regex-source language-regex&#34;&gt;^[1-9][0-9]&amp;#123;4,9&amp;#125;$&lt;/span&gt;&lt;span class=&#34;token regex-delimiter&#34;&gt;/&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; aryQQ &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;regexp&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; regQQ&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;QQNumber:&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; aryQQ&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//color&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; regColor &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token regex&#34;&gt;&lt;span class=&#34;token regex-delimiter&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token regex-source language-regex&#34;&gt;^#([0-9a-fA-F]&amp;#123;6&amp;#125;$|[0-9a-fA-F]&amp;#123;3&amp;#125;$)&lt;/span&gt;&lt;span class=&#34;token regex-delimiter&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token regex-flags&#34;&gt;g&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; aryColor &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;regexp&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; regColor&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Color:&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; aryColor&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//email&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; regEmail &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token regex&#34;&gt;&lt;span class=&#34;token regex-delimiter&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token regex-source language-regex&#34;&gt;^([\w\.\-]+)@([\w\.\-]+)\.([a-zA-Z]&amp;#123;2,6&amp;#125;)$&lt;/span&gt;&lt;span class=&#34;token regex-delimiter&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token regex-flags&#34;&gt;g&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; aryEmail &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;regexp&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; regEmail&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Email:&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; aryEmail&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//url&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; regUrl &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token regex&#34;&gt;&lt;span class=&#34;token regex-delimiter&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token regex-source language-regex&#34;&gt;^((https?|ftp|file):\/\/)?([\da-z\.\-]+)\.([a-z\.]&amp;#123;2,6&amp;#125;)((.*\/)*)?(.*)?$&lt;/span&gt;&lt;span class=&#34;token regex-delimiter&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token regex-flags&#34;&gt;g&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; aryUrl &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;regexp&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; regUrl&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Url:&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; aryUrl&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//Ipv4&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; regIpv4 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token regex&#34;&gt;&lt;span class=&#34;token regex-delimiter&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token regex-source language-regex&#34;&gt;^(([01]?[0-9][0-9]?|2[0-4][0-9]|25[0-5])\.)&amp;#123;3&amp;#125;([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])$&lt;/span&gt;&lt;span class=&#34;token regex-delimiter&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token regex-flags&#34;&gt;g&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; aryIpv4 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;regexp&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; regIpv4&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Ipv4:&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; aryIpv4&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 或 | 之间不用加（），原因不清&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//date&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; regDate &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token regex&#34;&gt;&lt;span class=&#34;token regex-delimiter&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token regex-source language-regex&#34;&gt;^\d&amp;#123;4&amp;#125;-(0\d|1[012])-(0\d|[12]\d|3[01])&lt;/span&gt;&lt;span class=&#34;token regex-delimiter&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token regex-flags&#34;&gt;g&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; aryDate &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;regexp&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; regDate&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;Date:&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; aryDate&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; pattern1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token regex&#34;&gt;&lt;span class=&#34;token regex-delimiter&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token regex-source language-regex&#34;&gt;\[bc\]at&lt;/span&gt;&lt;span class=&#34;token regex-delimiter&#34;&gt;/&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;54&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 等价于 var pattern1 = new RegExp (&#34;\\[bc\\] at&#34;, &#34;i&#34;);&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;操作符&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#操作符&#34;&gt;#&lt;/a&gt; 操作符&lt;/h2&gt;
&lt;h3 id=&#34;一元操作符&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一元操作符&#34;&gt;#&lt;/a&gt; 一元操作符&lt;/h3&gt;
&lt;p&gt;递增递减操作符（++/--）：&lt;/p&gt;
&lt;p&gt;前缀递增或递减时，变量的值都是在语句被求值以前改变的；后缀递增或递减时，变量的值都是在语句求值之后才改变的；&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211124180217.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;正负操作符（+/-）：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211124180309.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;位操作符&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#位操作符&#34;&gt;#&lt;/a&gt; 位操作符&lt;/h3&gt;
&lt;h3 id=&#34;布尔操作符&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#布尔操作符&#34;&gt;#&lt;/a&gt; 布尔操作符&lt;/h3&gt;
&lt;p&gt;逻辑非！：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211124180711.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;通过使用（！！n）将一个值转换位其对应的布尔值；&lt;/p&gt;
&lt;p&gt;逻辑与 &amp;amp;&amp;amp;：&lt;/p&gt;
&lt;p&gt;逻辑或 ||：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;一些特殊用法：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;防止初始值为 null（importent)&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/2GK7G3BRUUOEFHPCB.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;乘性操作符&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#乘性操作符&#34;&gt;#&lt;/a&gt; 乘性操作符&lt;/h3&gt;
&lt;p&gt;乘法：&lt;/p&gt;
&lt;p&gt;除法：&lt;/p&gt;
&lt;p&gt;取模：&lt;/p&gt;
&lt;h3 id=&#34;指数操作符&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#指数操作符&#34;&gt;#&lt;/a&gt; 指数操作符（**）&lt;/h3&gt;
&lt;h3 id=&#34;加性操作符&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#加性操作符&#34;&gt;#&lt;/a&gt; 加性操作符&lt;/h3&gt;
&lt;p&gt;加法：&lt;/p&gt;
&lt;p&gt;减法：&lt;/p&gt;
&lt;h3 id=&#34;关系运算符&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#关系运算符&#34;&gt;#&lt;/a&gt; 关系运算符（&amp;gt;&amp;lt;)&lt;/h3&gt;
&lt;h3 id=&#34;相等操作符&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#相等操作符&#34;&gt;#&lt;/a&gt; 相等操作符&lt;/h3&gt;
&lt;p&gt;由于相等和不相等操作符存在类型转换问题，而为了保持代码中数据类型的完整性，一般推荐使用全等和不全等操作符；&lt;/p&gt;
&lt;h2 id=&#34;迭代器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#迭代器&#34;&gt;#&lt;/a&gt; 迭代器&lt;/h2&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9qdWVqaW4uY24vcG9zdC82OTE5MDIzMDM4Njg4MTMzMTI3&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;对象与类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#对象与类&#34;&gt;#&lt;/a&gt; 对象与类&lt;/h2&gt;
&lt;h3 id=&#34;对象&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#对象&#34;&gt;#&lt;/a&gt; 对象&lt;/h3&gt;
&lt;h4 id=&#34;对象属性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#对象属性&#34;&gt;#&lt;/a&gt; 对象属性&lt;/h4&gt;
&lt;p&gt;数据属性：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211207130924.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;将属性显式添加到对象之后，[[Configurable]]、[[Enumerable]] 和 [[Writable]] 都会被设置为 true，而 [[Value]] 特性会被设置为指定的值；&lt;/p&gt;
&lt;p&gt;属性修改&lt;/p&gt;
&lt;p&gt;Object.defineProperty () 方法：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211207131232.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;在调用 Object.defineProperty () 时，configurable、enumerable 和 writable 的值如果不指定，则都默认为 false;&lt;/p&gt;
&lt;p&gt;访问器属性：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211207131606.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;属性定义&lt;/p&gt;
&lt;p&gt;Object.defineProperty () 方法：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211207131657.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;定义多个属性&lt;/p&gt;
&lt;p&gt;Objext.define-Properties () 方法：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211207132004.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;读取属性的特性：&lt;/p&gt;
&lt;p&gt;Object.getOwnPropertyDescriptor () 方法:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211207133757.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;合并对象：~P210&lt;/p&gt;
&lt;p&gt;对象标识及相等判定：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211207134812.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;对象结构：~P216&lt;/p&gt;
&lt;h4 id=&#34;创建对象&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#创建对象&#34;&gt;#&lt;/a&gt; 创建对象&lt;/h4&gt;
&lt;p&gt;工厂模式（非构造函数）：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211207141244.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;构造函数模式：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211207141325.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;两者区别：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;没有显式地创建对象&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;属性和方法直接赋值给了 this&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;没有 return&lt;/p&gt;
&lt;p&gt;按照惯例，构造函数名称的首字母都是要大写的， 非构造函数则以小写字母开头；&lt;/p&gt;
&lt;p&gt;构造函数与普通函数唯一的区别就是调用方式不同。除此之外，构造函数也是函数。并没有把某个函数定义为构造函数的特殊语法。任何函数只要使用 new 操作符调用就是构造函数，而不使用 new 操作符调用的函数就是普通函数；&lt;/p&gt;
&lt;p&gt;但通过构造函数创建出的每个实例的函数虽然同名但不相等，故因此一般将函数定义转移到构造函数外部；&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211207141906.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;原型模式：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211207144623.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Object.getProtorypeOf () 方法：&lt;/p&gt;
&lt;p&gt;返回参数的内部特性 &lt;code&gt;Prototype&lt;/code&gt;  的值；&lt;/p&gt;
&lt;p&gt;Object.create () 方法：&lt;/p&gt;
&lt;p&gt;创建一个新对象，同时为其指定原型；&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211207145234.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Object.hasOwnProperty () 方法：&lt;/p&gt;
&lt;p&gt;确定某个属性是在实例上还是原型对象上；参数为属性名，返回 ture 则说明来自实例，返回 false 则说明来自原型；&lt;/p&gt;
&lt;p&gt;in 操作符：&lt;/p&gt;
&lt;p&gt;确定某个属性是否在该对象的实例或原型对象上；&lt;/p&gt;
&lt;p&gt;Object.keys () 方法：&lt;/p&gt;
&lt;p&gt;这个方法接收一个对象作为参数，返回包含该对象所有可枚举属性名称的字符串数组；&lt;/p&gt;
&lt;p&gt;对象迭代：&lt;/p&gt;
&lt;p&gt;Object.entries () 方法：&lt;/p&gt;
&lt;p&gt;接收一个对象，返回它们内容（键值对）的数组；&lt;/p&gt;
&lt;p&gt;Object.values () 方法：&lt;/p&gt;
&lt;p&gt;接收一个对象，返回它们对象值的数组；&lt;/p&gt;
&lt;p&gt;例：[[&#39; 键 &#39;，&#39; 值 &#39;]，[&#39; 键 &#39;，&#39; 值 &#39;]，[&#39; 键 &#39;，&#39; 值 &#39;]]&lt;/p&gt;
&lt;p&gt;注意：非字符串属性会被转换为字符串输出，符号属性会被忽略；&lt;/p&gt;
&lt;h4 id=&#34;this&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#this&#34;&gt;#&lt;/a&gt; this&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;1：this 永远指向一个对象；&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2：this 的指向完全取决于函数调用的位置&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;继承&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#继承&#34;&gt;#&lt;/a&gt; 继承&lt;/h4&gt;
&lt;p&gt;原型链：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211207152745.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;instanceof 操作符：&lt;/p&gt;
&lt;p&gt;如果一个实例的原型链中出现过相应的构造函数，则返回 true；&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;instance &lt;span class=&#34;token keyword&#34;&gt;instanceof&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Object&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;//ture&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;isProtorypeOf () 方法：&lt;/p&gt;
&lt;p&gt;如果原型链中包含这个原型，则返回 true；&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Object&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;prototype&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;isPrototypeOf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;instance&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;//true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h5 id=&#34;组合继承&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#组合继承&#34;&gt;#&lt;/a&gt; 组合继承&lt;/h5&gt;
&lt;p&gt;​	综合了原型链和盗用构造函数，通过盗用构造函数继承构造函数的属性，通过原型链继承原型上的方法；&lt;/p&gt;
&lt;p&gt;​	从而避免了原型中所包含的引用值会在所有的实例间共享的问题（原型链的弊端）；以及盗用构造函数中重新定义方法的问题；&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211207154629.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h5 id=&#34;原型式继承&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#原型式继承&#34;&gt;#&lt;/a&gt; 原型式继承&lt;/h5&gt;
&lt;p&gt;Object.create () 方法：&lt;/p&gt;
&lt;p&gt;接收两个参数：第一个作为新对象原型的对象，第二个为给新对象定义额外属性的对象（可选）。在只有一个参数时， Object.create () 与这里的 object () 方法效果相同；&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211207155422.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211207155456.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h5 id=&#34;寄生式组合继承&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#寄生式组合继承&#34;&gt;#&lt;/a&gt; 寄生式组合继承&lt;/h5&gt;
&lt;p&gt;​	寄生式组合继承通过盗用构造函数继承属性，但使用混合式原型链继承方法。基本思路是不通过调用父类构造函数给子类原型赋值，而是取得父类原型的一个副本。说到底就是使用寄生式继承来继承父类原型，然后将返回的新对象赋值给子类原型；&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211207163841.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211207163907.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;相比于组合继承，少调用了一次父构造函数（只在最后构造实例时调用了父构造函数），从而效率更高，是引用类型继承的最佳模式；&lt;/p&gt;
&lt;h4 id=&#34;类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#类&#34;&gt;#&lt;/a&gt; 类&lt;/h4&gt;
&lt;p&gt;​	与函数类型相似，定义类也有两种主要方式：类声明和类表达式。这两种方式都使用 class 关键字加大括号：&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Person&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 类声明&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; Animal &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 类表达式&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;​	与函数表达式式类似，类表达式在它们被求值前也不能引用。不过，与函数定义不同的是，虽然函数声明可以提升，但类定义不能；&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211207165453.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;类构造函数&lt;/p&gt;
&lt;p&gt;​	constructor () 用于在类定义块内部创建类的构造函数。方法名 constructor 会告诉解释器在使用 new 操作符创建类的新实例时，应该调用这个函数。构造函数的定义不是必需的，不定义构造函数相当于将构造函数定义为空函数；&lt;/p&gt;
&lt;p&gt;实例、原型、类成员：~P254&lt;/p&gt;
&lt;p&gt;继承：~P258&lt;/p&gt;
&lt;h2 id=&#34;代理和反射&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#代理和反射&#34;&gt;#&lt;/a&gt; 代理和反射&lt;/h2&gt;
&lt;h2 id=&#34;函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#函数&#34;&gt;#&lt;/a&gt; 函数&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211208125425.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;​	函数声明可以提升，但函数表达式不可以；&lt;/p&gt;
&lt;h3 id=&#34;函数参数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#函数参数&#34;&gt;#&lt;/a&gt; 函数参数&lt;/h3&gt;
&lt;p&gt;​	函数的参数在函数内部表现为一个数组，存放在一个类数组对象 &lt;code&gt;arguments&lt;/code&gt;  中；&lt;/p&gt;
&lt;p&gt;​	可以通过 arguments [0] 获得第一个参数；也可以通过 arguments 的 length 属性检查传入的参数个数，即&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211208131516.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;但如果采用箭头函数则没有 arguments 对象。&lt;/p&gt;
&lt;p&gt;​	arguments 还有一个属性 &lt;code&gt;callee&lt;/code&gt; , 是一个指向 arguments 对象所在函数的指针，可以让函数逻辑与函数名解耦；&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;jiecheng&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;num&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;num&lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; num&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;jiecheng&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;num&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;期约与异步函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#期约与异步函数&#34;&gt;#&lt;/a&gt; 期约与异步函数&lt;/h2&gt;
&lt;h3 id=&#34;期约&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#期约&#34;&gt;#&lt;/a&gt; 期约&lt;/h3&gt;
&lt;p&gt;~P325&lt;/p&gt;
&lt;h3 id=&#34;异步函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#异步函数&#34;&gt;#&lt;/a&gt; 异步函数&lt;/h3&gt;
&lt;p&gt;~P348&lt;/p&gt;
&lt;h2 id=&#34;执行上下文&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#执行上下文&#34;&gt;#&lt;/a&gt; 执行上下文&lt;/h2&gt;
&lt;p&gt;[深入理解 JavaScript 执行上下文和执行栈 - Fundebug - 博客园 (&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2NuYmxvZ3MuY29t&#34;&gt;cnblogs.com&lt;/span&gt;)](&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vZnVuZGVidWcvcC91bmRlcnN0YW5kLWphdmFzY3JpcHQtY29udGV4dC1hbmQtc3RhY2suaHRtbCM6fjp0ZXh0PSVFNCVCOCU4MCVFMyU4MCU4MSVFNiU4OSVBNyVFOCVBMSU4QyVFNCVCOCU4QSVFNCVCOCU4QiVFNiU5NiU4NyVFRiVCQyU4OEV4ZWN1dGlvbg==&#34;&gt;https://www.cnblogs.com/fundebug/p/understand-javascript-context-and-stack.html#:~:text = 一、执行上下文（Execution&lt;/span&gt; Context）. 1. 什么是执行上下文。简而言之，执行上下文就是当前 JavaScript 代码被解析和执行时所在环境的抽象概念，,JavaScript 中运行任何的代码都是在执行上下文中运行. 2. 执行上下文的类型。执行上下文总共有三种类型：. 全局执行上下文： 这是默认的、最基础的执行上下文。. 不在任何函数中的代码都位于全局执行上下文中。.)&lt;/p&gt;
&lt;h2 id=&#34;ajax&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ajax&#34;&gt;#&lt;/a&gt; AJAX&lt;/h2&gt;
&lt;p&gt;​	AJAX 是一种用于创建快速动态网页的技术。通过在后台与服务器进行少量数据交换，AJAX 可以使网页实现异步更新。这意味着可以在不重新加载整个网页的情况下，对网页的某部分进行更新。而传统的网页（不使用 AJAX）如果需要更新内容，必需重载整个网页面。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;创建 XMLHttpRequest 对象&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; xmlhttp&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;window&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;XMLHttpRequest&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;//  IE7+, Firefox, Chrome, Opera, Safari 浏览器执行代码&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    xmlhttp&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;XMLHttpRequest&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// IE6, IE5 浏览器执行代码&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    xmlhttp&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ActiveXObject&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Microsoft.XMLHTTP&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;向服务器发送请求&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;xmlhttp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;GET&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;ajax_info.txt&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;xmlhttp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;send&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211228222653.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;服务器相应&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;document&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getElementById&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;myDiv&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;innerHTML&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;xmlhttp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;responseText&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211228222836.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;onreadystatechange 事件&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;xmlhttp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function-variable function&#34;&gt;onreadystatechange&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;xmlhttp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;readyState&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; xmlhttp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;status&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        document&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getElementById&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;myDiv&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;innerHTML&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;xmlhttp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;responseText&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211229015429.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;bom&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#bom&#34;&gt;#&lt;/a&gt; BOM&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;浏览器对象模型（Browser Object Model）&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;window&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#window&#34;&gt;#&lt;/a&gt; window&lt;/h3&gt;
&lt;h4 id=&#34;global作用域&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#global作用域&#34;&gt;#&lt;/a&gt; Global 作用域&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;通过 var 声明的所有全局变量和函数都会变成 window 对象的属性和方法；但通过 let 或 const 声明的则不会把变量添加给全局对象。&lt;/li&gt;
&lt;li&gt;直接访问未声明的变量会抛出异常，但通过 window 对象进行访问，可以判断未声明的变量是否存在。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;alert&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;window&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;//undefined&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;alert&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;a&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 抛出异常&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;打开和关闭窗口&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#打开和关闭窗口&#34;&gt;#&lt;/a&gt; 打开和关闭窗口&lt;/h4&gt;
&lt;p&gt;​	window 对象提供了 window.open () 方法和 window.close () 方法分别用于打开窗口和关闭窗口，使用 window.open () 方法即可打开一个新的窗口，并可以设置新窗口的 URL 、标题以及大小属性，window.open () 的基本语法为：&lt;/p&gt;
&lt;p&gt;window.open (URL , 窗口名字，特征，是否替换);&lt;br /&gt;
 第一个参数为新打开窗口的 URl 地址，如果为空，则打开页面为白板；&lt;br /&gt;
第二个参数为打开窗口的名字（如果参数指定一个已经存在的窗口，那么该方法不再创建一个新窗口，而是对该指定窗口的引用；&lt;br /&gt;
第三个参数为新窗口显示标准浏览器的特征，详情如下表&lt;br /&gt;
第四个参数代表着指定的 URL 是否取代浏览器记录中的当前加载页面，true 为替换浏览器记录中的当前加载页面，false 为创建浏览器历史记录中的创建新的页面；&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;属性值&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;height&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;窗口的高度，单位为像素，最小值为 100&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;left&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;该窗口的左侧位置，单位为像素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;location&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;是否显示浏览器的地址栏。默认值为 yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;memubar&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;是否显示浏览器的菜单栏。默认值为 yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;resizable&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;是否可以改变浏览器窗口的大小。默认值为 yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;scrollbars&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;是否显示浏览器的滚动条。默认值为 yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;status&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;是否显示浏览器的状态栏。默认值为 yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;titlebar&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;是否显示浏览器的标题栏。默认值为 yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;top&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;窗口顶部的位置，单位为像素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;width&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;窗口的宽度，单位为像素，最小值为 100&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;父窗口&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt; &lt;span class=&#34;token special-attr&#34;&gt;&lt;span class=&#34;token attr-name&#34;&gt;onclick&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                 subWin = window.open(&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;subWindow.html&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;,&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;子窗口&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;,&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;width=500&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;,&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;height=500&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;,&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;top=100&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;,&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;left=100&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;);    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                 &lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;打开子窗口&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt; &lt;span class=&#34;token special-attr&#34;&gt;&lt;span class=&#34;token attr-name&#34;&gt;onclick&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                 if (subWin!=null &amp;amp;&amp;amp; !subWin.closed) &amp;#123;//存在且不是关闭状态 &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                 subWin.close();    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                 &amp;#125;     &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                 &lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;关闭子窗口&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token script&#34;&gt;&lt;span class=&#34;token language-javascript&#34;&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; subWin &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 定义子窗口    &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;窗口位置与窗口大小&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#窗口位置与窗口大小&#34;&gt;#&lt;/a&gt; 窗口位置与窗口大小&lt;/h4&gt;
&lt;p&gt;​	 &lt;code&gt;window.screenLeft&lt;/code&gt; : 窗口相对于屏幕左侧的距离（单位：CSS 像素）&lt;/p&gt;
&lt;p&gt;​	 &lt;code&gt;window.screenTop&lt;/code&gt; : 窗口相对于屏幕顶部的距离（单位：CSS 像素）&lt;/p&gt;
&lt;p&gt;​	所有现代浏览器都支持 4 个属性： &lt;code&gt;innerWidth&lt;/code&gt; 、 &lt;code&gt;innerHeight&lt;/code&gt; 、 &lt;code&gt;outerWidth &lt;/code&gt; 和  &lt;code&gt;outerHeight&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;​		 &lt;code&gt;outerWidth &lt;/code&gt; 和  &lt;code&gt;outerHeight &lt;/code&gt; 返回浏览器窗口自身的大小（不管是在最外层 window 上使用，还是在窗格中使用；&lt;/p&gt;
&lt;p&gt;​		 &lt;code&gt;innerWidth &lt;/code&gt; 和  &lt;code&gt;innerHeight &lt;/code&gt; 返回浏览器窗口中页面视口的大小（不包含浏览器边框和工具栏）。&lt;/p&gt;
&lt;h4 id=&#34;定时器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#定时器&#34;&gt;#&lt;/a&gt; 定时器&lt;/h4&gt;
&lt;p&gt;​	 &lt;code&gt;setTimeout()&lt;/code&gt;  该方法通常接收两个参数：要执行的代码和在执行回调函数前等待的时间（毫秒）。第一个参数可以是包含 JavaScript 代码的字符串（类似于传给 eval () 的字符串）或者一个函数，第二个参数是要等待的毫秒数，并会返回一个唯一标识符，可用于取消该任务，只要是在指定时间到达之前调用 clearTimeout ()，就可以取消超时任务。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; timeoutId &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setTimeout&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;alert&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;hello&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;clearTimeout&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;timeoutId&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 取消超时任务&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;​	因为 &lt;code&gt;setTimeout()&lt;/code&gt;  只能执行一次，所以如果要反复执行该方法中包含的代码，则应该在该方法中包含对自身的调用：&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; t &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; out &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;setTimeout&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      t &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; i&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token function&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;i &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;clearTimeout&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;alert&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;10s done&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;​	 &lt;code&gt;setInterval()&lt;/code&gt;  与 setTimeout () 的使用方法类似，只不过指定的任务会每隔指定时间就执行一次，直到取消循环定时或者页面卸载。setInterval () 同样可以接收两个参数：要执行的代码（字符串或函数），以及把下一次执行定时代码的任务添加到队列要等待的时间。其也会返回一个标识符，通过 clearInterval () 来取消任务。&lt;/p&gt;
&lt;h4 id=&#34;系统对话框&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#系统对话框&#34;&gt;#&lt;/a&gt; 系统对话框&lt;/h4&gt;
&lt;p&gt;​	可以让浏览器调用系统对话框向用户显示消息。这 些对话框与浏览器中显示的网页无关，而且也不包含 HTML。它们的外观由操作系统或者浏览器决定，无法使用 CSS 设置。此外，这些对话框都是同步的模态对话框，即在它们显示的时候，代码会停止执行， 在它们消失以后，代码才会恢复执行.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;alert()&lt;/code&gt; : 只接收一个参数&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211208161116.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;confirm()&lt;/code&gt; ：只接收一个参数，并返回布尔值&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211208161413.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;prompt()&lt;/code&gt; ：接收两个参数，第一个是要显示给用户的文本，第二个是文本框的默认值（可以是空字符串），最后返回文本框中的值&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211208161629.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token script&#34;&gt;&lt;span class=&#34;token language-javascript&#34;&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token function&#34;&gt;prompt&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;这是一个输入框&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token function&#34;&gt;alert&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;这是一个警示框&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;这是控制台打印输出的&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  		&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; age &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;promopt&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;请输入你的年龄&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;location&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#location&#34;&gt;#&lt;/a&gt; location&lt;/h3&gt;
&lt;p&gt;​	location 是最有用的 BOM 对象之一，提供了当前窗口中加载文档的信息，以及通常的导航功能（URL）。 这个对象独特的地方在于，它既是 window 的属性，也是 document 的属性。也就是说， window.location 和 document.location 指向同一个对象。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211208161815.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;​	 &lt;code&gt;location&lt;/code&gt;  对象的属性都是可读可写的，如果改变了相关属性值，浏览器就会载入新的页面。&lt;/p&gt;
&lt;h3 id=&#34;navigator&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#navigator&#34;&gt;#&lt;/a&gt; navigator&lt;/h3&gt;
&lt;p&gt;​	 &lt;code&gt;navigator&lt;/code&gt;  对象包含了浏览器的基本信息，如名称、版本和系统等。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211208162355.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;h3 id=&#34;screen&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#screen&#34;&gt;#&lt;/a&gt; screen&lt;/h3&gt;
&lt;p&gt;​	 &lt;code&gt;screen&lt;/code&gt;  对象存储客户端屏幕的信息。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211208162529.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;history&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#history&#34;&gt;#&lt;/a&gt; history&lt;/h3&gt;
&lt;p&gt;​	 &lt;code&gt;history&lt;/code&gt;  对象存储浏览器窗口的浏览历史。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;go()&lt;/code&gt;  方法可以在用户历史记录中沿任何方向导航，可以前进也可以后退。这个方法只接收一个参数， 这个参数可以是一个整数，表示前进或后退多少步。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;history&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;go&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 后退一页&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;history&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;go&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 前进两页&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;code&gt;history.length&lt;/code&gt;  用来表示历史记录的数量。&lt;/p&gt;
&lt;p&gt;​	对于窗口或标签页中加载的第一个页面，history.length 等于 1。 通过以下方法测试这个值，可以确定用户浏览器的起点是不是你的页面。&lt;/p&gt;
&lt;h2 id=&#34;dom&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#dom&#34;&gt;#&lt;/a&gt; DOM&lt;/h2&gt;
&lt;p&gt;文档对象模型（Document Object Model)&lt;/p&gt;
&lt;p&gt;HTML DOM 定义了所有 HTML 元素的&lt;em&gt;对象&lt;/em&gt;和&lt;em&gt;属性&lt;/em&gt;，以及访问它们的&lt;em&gt;方法&lt;/em&gt;。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;换言之，HTML DOM 是关于如何获取、修改、添加或删除 HTML 元素的标准。&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&#34;dom属性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#dom属性&#34;&gt;#&lt;/a&gt; DOM 属性&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;innerHTML&lt;/code&gt;  用于获取 HTML 元素的内容&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;DOCTYPE&lt;/span&gt; html&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;html&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;head&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;meta charset&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;utf-8&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;head&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;body&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;p id&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;intro&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;Hello World&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;p&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;script&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; txt&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;document&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getElementById&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;intro&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;innerHTML&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;document&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;txt&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;script&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;body&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;html&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;节点属性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#节点属性&#34;&gt;#&lt;/a&gt; 节点属性&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;nodeName&lt;/code&gt;  用于读取节点名称&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;nodeName 是只读的&lt;/li&gt;
&lt;li&gt;元素节点的 nodeName 与标签名相同&lt;/li&gt;
&lt;li&gt;属性节点的 nodeName 与属性名相同&lt;/li&gt;
&lt;li&gt;文本节点的 nodeName 始终是 #text&lt;/li&gt;
&lt;li&gt;文档节点的 nodeName 始终是 #document&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt; nodeName 始终包含 HTML 元素的大写字母标签名。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;nodeValue&lt;/code&gt;  用于规定节点的值&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;元素节点的 nodeValue 是 undefined 或 null&lt;/li&gt;
&lt;li&gt;文本节点的 nodeValue 是文本本身&lt;/li&gt;
&lt;li&gt;属性节点的 nodeValue 是属性值&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;nodeType&lt;/code&gt;  返回节点的类型（只读）&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211208185749.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ownerDocument&lt;/code&gt;  返回当前节点的根元素（即 document 对象）&lt;/p&gt;
&lt;p&gt;&lt;code&gt;parentNode&lt;/code&gt;  返回当前节点的父节点（所有节点都仅有一个父节点）&lt;/p&gt;
&lt;p&gt;&lt;code&gt;childNodes&lt;/code&gt;  返回当前节点的所有子节点的节点列表（ &lt;code&gt;nodeList&lt;/code&gt;  类数组对象）&lt;/p&gt;
&lt;p&gt;​	nodeList 对象实际上基于 DOM 结构动态执行查询的结果，DOM 结构的变化能够自动反映在 nodeList 对象中。可以通过方括号访问内部的值，但不能直接调用数组的方法。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;firstChild&lt;/code&gt;  返回当前节点的首个子节点&lt;/p&gt;
&lt;p&gt;&lt;code&gt;lastChild&lt;/code&gt;  返回当前节点的最后一个子节点&lt;/p&gt;
&lt;p&gt;&lt;code&gt;nextSibling&lt;/code&gt;  返回当前节点之后相邻的同级节点&lt;/p&gt;
&lt;p&gt;&lt;code&gt;previousSibling&lt;/code&gt;  返回当前节点之前相邻的同级节点&lt;/p&gt;
&lt;h3 id=&#34;dom方法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#dom方法&#34;&gt;#&lt;/a&gt; DOM 方法&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211208184819.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;getElementsByld()&lt;/code&gt;  返回带有指定 ID 的元素引用&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;node&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getElementById&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;id&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;code&gt;getElementsByTagName()&lt;/code&gt;  返回带有指定标签名的所有元素&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;node&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getElementsByTagName&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;tagname&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;code&gt;getElementsByClassName()&lt;/code&gt;  返回包含带有指定类名的所有元素的节点列表&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;document&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getElementsByClassName&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;intro&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;事件处理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#事件处理&#34;&gt;#&lt;/a&gt; 事件处理&lt;/h2&gt;
&lt;h3 id=&#34;事件委托&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#事件委托&#34;&gt;#&lt;/a&gt; 事件委托&lt;/h3&gt;
&lt;p&gt;​	 &lt;code&gt;delegate&lt;/code&gt;  把目标节点的事件绑定到上层节点上&lt;/p&gt;
&lt;p&gt;​	原因：事件传播过程中，逐层冒泡总是能被上层节点捕获；优化代码，提升运行性能，真正将 HTML 与 JavaScript 分离；也能防止动态添加或删除节点时将注册的事件丢失。&lt;/p&gt;
&lt;h2 id=&#34;ajax-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ajax-2&#34;&gt;#&lt;/a&gt; Ajax&lt;/h2&gt;
&lt;p&gt;​	Ajax (Asynchronous JavaScript and XML)：利用 JS 脚本和 XML 数据实现客户端与服务器端之间快捷通信的一种技巧。&lt;/p&gt;
&lt;h2 id=&#34;待补充&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#待补充&#34;&gt;#&lt;/a&gt; 待补充&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;filter () 方法&lt;/li&gt;
&lt;li&gt;箭头函数&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://nc3021.github.io/2021/11/26/financial/%E8%AE%A1%E9%87%8F%E7%BB%8F%E6%B5%8E%E5%AD%A6/</guid>
            <title>计量经济学</title>
            <link>https://nc3021.github.io/2021/11/26/financial/%E8%AE%A1%E9%87%8F%E7%BB%8F%E6%B5%8E%E5%AD%A6/</link>
            <category term="金融" scheme="https://nc3021.github.io/categories/financial/" />
            <category term="金融" scheme="https://nc3021.github.io/tags/%E9%87%91%E8%9E%8D/" />
            <category term="计量经济学" scheme="https://nc3021.github.io/tags/%E8%AE%A1%E9%87%8F%E7%BB%8F%E6%B5%8E%E5%AD%A6/" />
            <category term="量化金融" scheme="https://nc3021.github.io/tags/%E9%87%8F%E5%8C%96%E9%87%91%E8%9E%8D/" />
            <pubDate>Fri, 26 Nov 2021 19:30:49 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;计量经济学&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#计量经济学&#34;&gt;#&lt;/a&gt; 计量经济学&lt;/h1&gt;
&lt;h2 id=&#34;引论&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#引论&#34;&gt;#&lt;/a&gt; 引论&lt;/h2&gt;
&lt;h3 id=&#34;计量经济学的用途&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#计量经济学的用途&#34;&gt;#&lt;/a&gt; 计量经济学的用途&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;描述经济现实：&lt;/p&gt;
&lt;p&gt;​	将经济关系中的抽样符号定量化，如需求函数、消费倾向；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;检验经济理论假设：&lt;/p&gt;
&lt;p&gt;​	采用现实证据来检验理论模型，如资本资产定价模型、有效市场假说；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;预测未来经济活动：&lt;/p&gt;
&lt;p&gt;​	基于已发生的事件去预测未来，如 GDP、CPI、通货膨胀率等；&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;计量经济学的研究路线&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#计量经济学的研究路线&#34;&gt;#&lt;/a&gt; 计量经济学的研究路线&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;建立理论模型&lt;/li&gt;
&lt;li&gt;确定计量经济学模型&lt;/li&gt;
&lt;li&gt;收集、检查并整理数据&lt;/li&gt;
&lt;li&gt;估计计量经济学模型&lt;/li&gt;
&lt;li&gt;评价计量经济学模型&lt;/li&gt;
&lt;li&gt;应用计量经济学模型&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;eviews使用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#eviews使用&#34;&gt;#&lt;/a&gt; EViews 使用&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://nc3021.github.io/2021/11/26/financial/Eviews/&#34;&gt;查看 EViews 操作使用说明文档&lt;/a&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id=&#34;第一章-回归分析概述&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第一章-回归分析概述&#34;&gt;#&lt;/a&gt; 第一章 回归分析概述&lt;/h2&gt;
&lt;h3 id=&#34;回归意义&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#回归意义&#34;&gt;#&lt;/a&gt; 回归意义&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/lg4IXU1wWRC67hZ.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/MZ8Vp9nt4fX7lkJ.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;统计关系&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;确定关系：确定变量之间的函数关系&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;统计关系：随机变量之间的依赖关系&lt;/p&gt;
&lt;p&gt;计量经济学研究的是统计关系。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;回归与相关&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#回归与相关&#34;&gt;#&lt;/a&gt; 回归与相关&lt;/h4&gt;
&lt;p&gt;​	回归与相关的基本不同点在于，回归分析将因变量当作统计的、随机的，而自变量则被看作是固定的或非随机的；而相关分析将两个变量都看作随机的，具有对称性；&lt;/p&gt;
&lt;p&gt;​	事实上，将自变量看作是随机变量不会影响大部分计量经济学理论的接过（特别是大样本情况下）；&lt;/p&gt;
&lt;p&gt;​	在进行回归分析之前，一般先做相关分析。&lt;/p&gt;
&lt;h3 id=&#34;收入消费理论&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#收入消费理论&#34;&gt;#&lt;/a&gt; 收入消费理论&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/95lEFbp8m2edJ4L.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;回归函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#回归函数&#34;&gt;#&lt;/a&gt; 回归函数&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/tIJFbTGWNjZKdOo.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h4 id=&#34;随机干扰项&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#随机干扰项&#34;&gt;#&lt;/a&gt; 随机干扰项&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/8lTXmuOfDIxH4is.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/FSRanUW4T1PvVAf.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;随机干扰项：真实值与样本回归方程的估计值的差；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;残差：真实值与总体回归方程的估计值的差；&lt;/p&gt;
&lt;p&gt;随机感染项的来源：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;遗漏或被排除的变量&lt;/li&gt;
&lt;li&gt;数据的测量误差&lt;/li&gt;
&lt;li&gt;错误的函数形式&lt;/li&gt;
&lt;li&gt;纯粹的随机误差和无法预测的事件&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/gvakubKz87x9RJC.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;偏回归系数&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/FNMEmIkLrxGo2ey.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id=&#34;第二章-普通最小二乘法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第二章-普通最小二乘法&#34;&gt;#&lt;/a&gt; 第二章 普通最小二乘法&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/vqW5PzATBiaMlVN.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;线性回归模型的基本假设&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#线性回归模型的基本假设&#34;&gt;#&lt;/a&gt; 线性回归模型的基本假设&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/gu1wofclGLhIq2z.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;以上假设也称为线性回归模型的经典假设或高斯（Gauss）假设，满足该假设的线性回归模型，也称为经典线性回归模型（Classical Linear Regression Model, CLRM）。&lt;/p&gt;
&lt;p&gt;线性回归是指对估计参数为线性的一种回归（即估计参数只以一次方出现），对自变量 X 可以是或不是线性的；&lt;/p&gt;
&lt;h4 id=&#34;估计量的性质&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#估计量的性质&#34;&gt;#&lt;/a&gt; 估计量的性质&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/a3hnsrOPjAREN8F.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;​	这三个准则被称作估计量的小样本性质，拥有这类性质的估计量称为最佳线性无偏估计量 (best liner unbiased estimator BLUE);&lt;/p&gt;
&lt;h4 id=&#34;高斯-马尔可夫定理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#高斯-马尔可夫定理&#34;&gt;#&lt;/a&gt; 高斯 - 马尔可夫定理&lt;/h4&gt;
&lt;p&gt;​	在给定经典线性回归的假定下，最小二乘估计量是具有最小方差的线性无偏估计量即 BLUE。证明：略&lt;/p&gt;
&lt;h3 id=&#34;判定系数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#判定系数&#34;&gt;#&lt;/a&gt; 判定系数&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/DtSXMBYC3nJsWLa.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;​	总平方和 = 回归平方和 + 残差平方和&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/EqkdrMU4WJvm8hs.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;判定系数&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;R^2&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8141079999999999em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.00773em;&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.8141079999999999em;&#34;&gt;&lt;span style=&#34;top:-3.063em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 是解释变量个数的非减函数，即增加解释变量，&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;R^2&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8141079999999999em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.00773em;&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.8141079999999999em;&#34;&gt;&lt;span style=&#34;top:-3.063em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 会增加或不变，但增加解释变量会降低自由度（自由度：观测样本个数减去待估参数的个数）；&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/Y4FOra61gJHhRS3.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id=&#34;第三章-假设检验&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第三章-假设检验&#34;&gt;#&lt;/a&gt; 第三章 假设检验&lt;/h2&gt;
&lt;h3 id=&#34;假设检验的基本原理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#假设检验的基本原理&#34;&gt;#&lt;/a&gt; 假设检验的基本原理&lt;/h3&gt;
&lt;p&gt;​	假设检验是要确定一个准则（判定准则），以便决定拒绝或不拒绝某个原假设；&lt;/p&gt;
&lt;p&gt;​	当拒绝原假设时，通常表述为统计上显著；反之，统计上不显著；&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/WjMSIQUne9pPsYo.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/EFKksmS65WVPIC2.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;假设检验的判定准则：&lt;/p&gt;
&lt;p&gt;​	判定准则是比较样本统计量与预先设定的临界值之间的大小；&lt;/p&gt;
&lt;p&gt;​	参数估计值范围分为两个区域：拒绝域与接受域；&lt;/p&gt;
&lt;p&gt;假设检验的两种常用方法：&lt;br /&gt;
1. 置信区间法&lt;br /&gt;
 2. 显著性检验法&lt;/p&gt;
&lt;h3 id=&#34;置信区间法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#置信区间法&#34;&gt;#&lt;/a&gt; 置信区间法&lt;/h3&gt;
&lt;p&gt;​	根据参数估计量的分布，在给定的置信水平（如 95%）下构造一个随机置信区间；若该随即区间覆盖原假设值，则不拒绝原假设，否则拒绝原假设。&lt;/p&gt;
&lt;p&gt;置信区间的构造：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211211165500.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/5x8IahOWrkRKoQc.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/i8ZbtVQovUsgLuX.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Std.Error ：参数方差&lt;/p&gt;
&lt;h3 id=&#34;显著性检验法t检验&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#显著性检验法t检验&#34;&gt;#&lt;/a&gt; 显著性检验法（t 检验）&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/bX73INsLDPOqAu6.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/Zf32OkbeEqPrahM.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/17/M39OvGYgtULlziS.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Prob. ：对应其左侧一列 t 统计量的概率（即一般情况下，p&amp;lt;0.05 则认为其显著）&lt;/p&gt;
&lt;p&gt;结论：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;不能把 t 检验得出的统计显著性等同于理论的有效性；&lt;/li&gt;
&lt;li&gt;t 检验不能检验相应变量的相对重要性；&lt;/li&gt;
&lt;li&gt;随着样本容量的增大，t 值会越来越大；&lt;/li&gt;
&lt;li&gt;对于一个超大规模的样本而言，t 检验没用任何意义，因为你几乎可以拒绝任何原假设；&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;f检验&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#f检验&#34;&gt;#&lt;/a&gt; F 检验&lt;/h3&gt;
&lt;p&gt;对多个假设的联立检验或对线性约束的假设检验不能用 t 检验，只能用 F 检验，可以检验方差的整体显著性。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/Y7K2zr6xioIWbMm.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Prob (F-statistic): 模型的显著性，小于 0.05 为显著。&lt;/p&gt;
&lt;p&gt;Wald Test（对参数进行具体检验）&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/DvUnFMxtTlOg1WE.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Probability: 假设正确的概率，小于 0.05 时拒绝原假设；&lt;/p&gt;
&lt;h4 id=&#34;柯布-道格拉斯生产函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#柯布-道格拉斯生产函数&#34;&gt;#&lt;/a&gt; 柯布 - 道格拉斯生产函数&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211211170742.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h4 id=&#34;邹检验&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#邹检验&#34;&gt;#&lt;/a&gt; 邹检验&lt;/h4&gt;
&lt;p&gt;在时间序列回归中，模型的参数在整个样本期间内可能发生变化，邹检验由此而生，是 F 检验的重要应用。邹检验可以轻松推广到不止一次结构变动的情形。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;EViews 操作&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/jOTArwSyvVzL35C.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;一些说明：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;邹检验的假定：两个子时期回归的误差项是独立且具有同方差的正态分布变量；&lt;/li&gt;
&lt;li&gt;邹检验只告诉我们不同子时期的回归方程是否有差别，并没有告诉我们差别来自于截距、斜率还是二者兼有；&lt;/li&gt;
&lt;li&gt;邹检验假定我们知道结构转折点；&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;正态性检验&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#正态性检验&#34;&gt;#&lt;/a&gt; 正态性检验&lt;/h3&gt;
&lt;p&gt;​	正态性检验是检验误差项是否为正太分布。&lt;/p&gt;
&lt;p&gt;正太性的雅克 - 贝拉（Jarque-Bera）检验：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/image-20211117181202547.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211211172246.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id=&#34;第四章-模型设定&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第四章-模型设定&#34;&gt;#&lt;/a&gt; 第四章 模型设定&lt;/h2&gt;
&lt;p&gt;一个正确的方程包含了：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;正确的解释变量；&lt;/li&gt;
&lt;li&gt;正确的函数形式；&lt;/li&gt;
&lt;li&gt;正确的随机误差形式；&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;遗漏变量设定偏误&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#遗漏变量设定偏误&#34;&gt;#&lt;/a&gt; 遗漏变量（设定偏误）&lt;/h3&gt;
&lt;p&gt;参数估计量有偏且 &lt;code&gt;符号不一致&lt;/code&gt; （方差变小）；&lt;/p&gt;
&lt;p&gt;EViews 上检查遗漏变量的操作方法：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211211202523.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;不相干变量&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#不相干变量&#34;&gt;#&lt;/a&gt; 不相干变量&lt;/h3&gt;
&lt;p&gt;参数估计量无偏但非有效、 &lt;code&gt;不显著&lt;/code&gt; （方差增大，t 检验失效，拟合优度降低）&lt;/p&gt;
&lt;p&gt;EViews 上检查不相干变量的操作方法：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211211203152.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;模型选择准则&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#模型选择准则&#34;&gt;#&lt;/a&gt; 模型选择准则&lt;/h3&gt;
&lt;p&gt;四个重要的模型设定准则：&lt;/p&gt;
&lt;p&gt;1. 理论：变量在方程中的含义是不是含糊不清的，从理论上看是不是合理的？&lt;br /&gt;
2.t 检验：解释变量参数的估计值在预期假设下是不是显著的？&lt;br /&gt;
3. 调整的判定系数&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mover accent=&#34;true&#34;&gt;&lt;msup&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msup&gt;&lt;mo stretchy=&#34;true&#34;&gt;‾&lt;/mo&gt;&lt;/mover&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;\overline{R^2}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.940108em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord overline&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.940108em;&#34;&gt;&lt;span style=&#34;top:-3em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:3em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.00773em;&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.740108em;&#34;&gt;&lt;span style=&#34;top:-2.9890000000000003em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;top:-3.860108em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:3em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;overline-line&#34; style=&#34;border-bottom-width:0.04em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 或 AIC 和 SC: 将变量加入方程后，整体拟合优度是否有所改善？&lt;br /&gt;
4. 偏误：将变量加入方程后，其他变量参数是否有显著变化？&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211211203218.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h4 id=&#34;aic与sc&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#aic与sc&#34;&gt;#&lt;/a&gt; AIC 与 SC&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211211203318.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211211203329.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;函数形式的选择&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#函数形式的选择&#34;&gt;#&lt;/a&gt; 函数形式的选择&lt;/h3&gt;
&lt;p&gt;可线性化的非线性函数形式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;指数函数&lt;/li&gt;
&lt;li&gt;对数函数&lt;/li&gt;
&lt;li&gt;反函数形式&lt;/li&gt;
&lt;li&gt;多项式形式&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2 id=&#34;第五章-多重共线性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第五章-多重共线性&#34;&gt;#&lt;/a&gt; 第五章 多重共线性&lt;/h2&gt;
&lt;h3 id=&#34;多重共线性的定义&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#多重共线性的定义&#34;&gt;#&lt;/a&gt; 多重共线性的定义&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211212132921.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;多重共线性是一个程度问题而不是有无的问题，目前还没有一个被普遍接受的真正意义的检验多重共线性的统计量。&lt;/p&gt;
&lt;p&gt;完全多重共线性只是一种极端的隐患，更常见的是出现不完全多重共线性；而只要是不完全多重共线性，用 OLS 仍可得到参数的估计值及其标准误差，并且是无偏，但尽管无偏，估计量的标准误差非常大即估计的精度很小。&lt;/p&gt;
&lt;h3 id=&#34;不完全多重共线性的特征&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#不完全多重共线性的特征&#34;&gt;#&lt;/a&gt; 不完全多重共线性的特征&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;偏回归系数的 t 值会降低，倾向于统计上不显著；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;估计量（偏回归系数）对模型设定的变化非常敏感，估计系数可能出现非预期的符号或难以置信的数值；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;虽然系数不显著，但总的拟合优度&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;R^2&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8141079999999999em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.00773em;&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.8141079999999999em;&#34;&gt;&lt;span style=&#34;top:-3.063em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 却可能非常高；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可能出现每个偏回归系数的 t 值都不显著，但回归方程的 F 值却很显著。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;多重共线性的检验与补救&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#多重共线性的检验与补救&#34;&gt;#&lt;/a&gt; 多重共线性的检验与补救&lt;/h3&gt;
&lt;p&gt;检验方法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;变量之间的相关系数&lt;/li&gt;
&lt;li&gt;方差膨胀因子（VIF）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;补救方法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;剔除支配变量：支配变量 (dominant variable): 与被解释变量高度相关，以致于完全掩盖了方程中其他解释变量的影响 (如销售量与销售额)；&lt;/li&gt;
&lt;li&gt;增加样本容量：样本越大，估计越精确；&lt;/li&gt;
&lt;li&gt;剔除多余的变量：潜在的理论假设作为剔除的主要依据；&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;差分法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#差分法&#34;&gt;#&lt;/a&gt; 差分法&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211212144450.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h4 id=&#34;比率转换法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#比率转换法&#34;&gt;#&lt;/a&gt; 比率转换法&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211212144501.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h4 id=&#34;无为而治法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#无为而治法&#34;&gt;#&lt;/a&gt; 无为而治法&lt;/h4&gt;
&lt;p&gt;​	剔除本应包含的解释变量会导致设定偏误。与遗漏变量造成的有偏估计相比较，较低的 t 统计值 (显著性) 似乎只是一个次要的问题。&lt;br /&gt;
​	只有当后果很严重 (参数估计值出现非预期的符号)，才应该采取其他补救措施。&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id=&#34;第六章-序列相关性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第六章-序列相关性&#34;&gt;#&lt;/a&gt; 第六章 序列相关性&lt;/h2&gt;
&lt;h3 id=&#34;序列相关性的概念&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#序列相关性的概念&#34;&gt;#&lt;/a&gt; 序列相关性的概念&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211212145308.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h4 id=&#34;自相关系数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#自相关系数&#34;&gt;#&lt;/a&gt; 自相关系数&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211212152252.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;序列相关性的类型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#序列相关性的类型&#34;&gt;#&lt;/a&gt; 序列相关性的类型&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;非纯序列相关：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	通常由设定偏误导致，所谓模型设定偏误表现在模型中丢掉重要的变量或模型函数形式有错误即遗漏变量、不正确的函数形式；&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211212151302.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211212151824.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;纯序列相关：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;时间序列数据：对同一总体的连续的观测很可能表现出某种系统的相关性，特别是连续观测的时间间隔很短时，如一周、一天、甚至一天内多次观测；&lt;/li&gt;
&lt;li&gt;经济数据的周期性，如股票价格、GDP 等；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;大多数经济时间数据都有一个明显的特点：惯性，表现在时间序列不同时间的前后关联上。&lt;/p&gt;
&lt;h3 id=&#34;序列相关性的特征&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#序列相关性的特征&#34;&gt;#&lt;/a&gt; 序列相关性的特征&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211212152508.png&#34; alt=&#34;&#34; /&gt;&lt;/li&gt;
&lt;li&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211212152550.png&#34; alt=&#34;&#34; /&gt;&lt;/li&gt;
&lt;li&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211212152609.png&#34; alt=&#34;&#34; /&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;序列相关性的检验&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#序列相关性的检验&#34;&gt;#&lt;/a&gt; 序列相关性的检验&lt;/h3&gt;
&lt;p&gt;​	序列相关性检验的方法有很多种，但基本思路相同。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211212152827.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;图示法&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211212152854.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;回归检验法：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211212164422.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#DW&#34;&gt;杜宾 - 瓦森（DW）检验法&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#GB&#34;&gt;拉格朗日乘数检验（GB/LM）&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;span-iddw杜宾-瓦森dw检验法span&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#span-iddw杜宾-瓦森dw检验法span&#34;&gt;#&lt;/a&gt; &lt;span id=&#39;DW&#39;&gt;杜宾 - 瓦森（DW）检验法&lt;/span&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211212164447.png&#34; alt=&#34;&#34; /&gt;&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211212164516.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;DW 检验临界值 (&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;mi&gt;L&lt;/mi&gt;&lt;/msub&gt;&lt;mtext&gt;、&lt;/mtext&gt;&lt;msub&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;mi&gt;U&lt;/mi&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;d_L、d_U&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.84444em;vertical-align:-0.15em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.32833099999999993em;&#34;&gt;&lt;span style=&#34;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;L&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;、&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.32833099999999993em;&#34;&gt;&lt;span style=&#34;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34; style=&#34;margin-right:0.10903em;&#34;&gt;U&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;) 与三个参数有关：&lt;br /&gt;
①检验水平&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;α&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;\alpha&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.43056em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.0037em;&#34;&gt;α&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;，②样本容量 n , ③原回归模型中解释变量个数 k（不包括常数项）。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211212164528.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;若采用双侧侧检验，则结论为是否存在序列相关。&lt;/p&gt;
&lt;p&gt;当 DW 值落在 “不确定” 区域时，两种处理方法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;加大样本容量或重新选取样本，重作 DW 检验。有时 DW 值会离开不确定区；&lt;/li&gt;
&lt;li&gt;选用其它检验方法。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;span-idgb拉格朗日乘数检验gblmspan&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#span-idgb拉格朗日乘数检验gblmspan&#34;&gt;#&lt;/a&gt; &lt;span id=&#39;GB&#39;&gt;拉格朗日乘数检验（GB/LM）&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;​	拉格朗日乘数检验克服了 DW 检验的缺陷，适合于高阶序列相关以及模型中存在滞后被解释变量的情形。&lt;br /&gt;
它是由布劳殊（Breusch）与戈弗雷（Godfrey）于 1978 年提出的，也被称为 GB 检验。&lt;/p&gt;
&lt;p&gt;​	对于模型 $$Y_i=\beta_0+\beta_1X_{1i}+\beta_2X_{2i}+\cdots+\beta_kX_{ki}+\mu$$&lt;/p&gt;
&lt;p&gt;如果怀疑随机扰动项存在 P 阶序列相关：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;katex-display&#34;&gt;&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34; display=&#34;block&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mi&gt;μ&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;/msub&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;ρ&lt;/mi&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/msub&gt;&lt;msub&gt;&lt;mi&gt;μ&lt;/mi&gt;&lt;mrow&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;ρ&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msub&gt;&lt;msub&gt;&lt;mi&gt;μ&lt;/mi&gt;&lt;mrow&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mo&gt;⋯&lt;/mo&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;ρ&lt;/mi&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;/msub&gt;&lt;msub&gt;&lt;mi&gt;μ&lt;/mi&gt;&lt;mrow&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;ϵ&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;\mu_t=\rho_1\mu_{t-1}+\rho_2\mu_{t-2}+\cdots+\rho_p\mu_{t-p}+\epsilon_t
&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.625em;vertical-align:-0.19444em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;μ&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.2805559999999999em;&#34;&gt;&lt;span style=&#34;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;t&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.791661em;vertical-align:-0.208331em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;ρ&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.30110799999999993em;&#34;&gt;&lt;span style=&#34;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;μ&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.301108em;&#34;&gt;&lt;span style=&#34;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;mbin mtight&#34;&gt;−&lt;/span&gt;&lt;span class=&#34;mord mtight&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.208331em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.791661em;vertical-align:-0.208331em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;ρ&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.30110799999999993em;&#34;&gt;&lt;span style=&#34;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;μ&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.301108em;&#34;&gt;&lt;span style=&#34;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;mbin mtight&#34;&gt;−&lt;/span&gt;&lt;span class=&#34;mord mtight&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.208331em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.66666em;vertical-align:-0.08333em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;minner&#34;&gt;⋯&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8694379999999999em;vertical-align:-0.286108em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;ρ&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15139200000000003em;&#34;&gt;&lt;span style=&#34;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;p&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.286108em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;μ&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.28055599999999997em;&#34;&gt;&lt;span style=&#34;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;mbin mtight&#34;&gt;−&lt;/span&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;p&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.286108em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.58056em;vertical-align:-0.15em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;ϵ&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.2805559999999999em;&#34;&gt;&lt;span style=&#34;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;t&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211212155353.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211212155412.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;拉格朗日乘数检验的 EViews 操作&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211212160815.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;序列相关性的补救&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#序列相关性的补救&#34;&gt;#&lt;/a&gt; 序列相关性的补救&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;非纯序列相关：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	- 正确的模型设定，特别是出现负的序列相关时；&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;纯序列相关：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;广义最小二乘法：广义差分法（GLS）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;EViews 操作：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211212161406.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211212161447.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;AR 方法&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;尼威 - 韦斯特（Newey-West HAC）方法&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;只修正标准误而不会改变系数的估计值&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在大样本估计中，效果更好&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;绝大多数学术论文采用此种方法&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;EViews 操作：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211212161623.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211212161648.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211212161659.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;经验方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;采用时间序列数据作回归时，不对原模型进行序列相关检验，而是直接选择广义差分法或者 NW 法；&lt;/li&gt;
&lt;li&gt;如果确实存在序列相关，则被有效地消除了；&lt;/li&gt;
&lt;li&gt;如果不存在序列相关，则广义差分法或 NW 法等价于普通最小二乘法；&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr /&gt;
&lt;h2 id=&#34;第七章-异方差性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第七章-异方差性&#34;&gt;#&lt;/a&gt; 第七章 异方差性&lt;/h2&gt;
&lt;h3 id=&#34;异方差的概念&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#异方差的概念&#34;&gt;#&lt;/a&gt; 异方差的概念&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211212165647.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211212165634.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;异方差的类型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#异方差的类型&#34;&gt;#&lt;/a&gt; 异方差的类型&lt;/h3&gt;
&lt;p&gt;** 非纯异方差：** 由模型设定偏误导致（如遗漏变量）；&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;纯异方差：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;横截面数据：被解释变量的取值差异较大、解释变量的偏态；&lt;/li&gt;
&lt;li&gt;时间序列数据：学习效应、数据采集技术的变化&lt;/li&gt;
&lt;li&gt;异常值&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;异方差的特征&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#异方差的特征&#34;&gt;#&lt;/a&gt; 异方差的特征&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;OLS 估计量仍是无偏的；&lt;/li&gt;
&lt;li&gt;OLS 估计量不再是有效的（即最小方差估计量）；&lt;/li&gt;
&lt;li&gt;OLS 估计量的标准误是有偏的，且偏差通常是负的，意味着 OLS 通常会高估了参数的 t 值，导致原本不显著的变量可能变得显著；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;综上：若存在异方差，OLS 估计的假设检验将变的不可靠。&lt;/p&gt;
&lt;h3 id=&#34;异方差的检验&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#异方差的检验&#34;&gt;#&lt;/a&gt; 异方差的检验&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;检验思路：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	检验异⽅差，也就是检验随机误差项的方差与比例因子 Z 或解释变量 X 之间的相关性及其 “形式”；又因随机误差项方差的样本对应物是 OLS 的残差平方，因此所有的检验方法都基于&lt;u&gt;&lt;strong&gt;残差平方&lt;/strong&gt;&lt;/u&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;异方差的检验方法：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;图解法&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211212170852.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;帕克检验&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211212190703.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;怀特检验（White）&lt;/p&gt;
&lt;p&gt;基本思想：异方差来源于解释变量及其高次方。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;EViews 操作：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211212190935.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;异方差的补救&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#异方差的补救&#34;&gt;#&lt;/a&gt; 异方差的补救&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;非纯异方差：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	- 正确的模型设定&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;纯异方差：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;广义最小二乘法：&lt;a href=&#34;#WLS&#34;&gt;加权最小二乘法&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;修正异方差的标准误：&lt;a href=&#34;#White&#34;&gt;White 调整法&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;重新定义新变量：&lt;a href=&#34;#ln&#34;&gt;变换方程形式&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;首先考虑采用重新定义变量的方式&lt;/li&gt;
&lt;li&gt;大样本情况：White 调整法&lt;/li&gt;
&lt;li&gt;若能找到明确的比列因子（权重），则采用 WLS&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;span-idwls加权最小二乘法wlsspan&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#span-idwls加权最小二乘法wlsspan&#34;&gt;#&lt;/a&gt; &lt;span id=&#39;WLS&#39;&gt;加权最小二乘法 (WLS)&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211212191410.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;在实际操作中人们通常采用如下的经验方法：&lt;/p&gt;
&lt;p&gt;​	不对原模型进行异方差检验，而是直接选择加权最小二乘法，尤其是采用截面数据作样本时。&lt;/p&gt;
&lt;p&gt;​	如果确定存在异方差，则被有效地消除了；如果不存在异方差，则加权最小二乘法等价于普通最小二乘法。&lt;/p&gt;
&lt;h4 id=&#34;span-idwhitewhite调整法span&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#span-idwhitewhite调整法span&#34;&gt;#&lt;/a&gt; &lt;span id=&#39;White&#39;&gt;White 调整法&lt;/span&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;只修正标准误⽽不会改变系数的估计值；&lt;/li&gt;
&lt;li&gt;在⼤样本估计中，效果更好；&lt;/li&gt;
&lt;li&gt;绝⼤多数学术论⽂采用此种⽅法；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;EViews 操作：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211212192120.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h4 id=&#34;span-idln变换方程形式span&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#span-idln变换方程形式span&#34;&gt;#&lt;/a&gt; &lt;span id=&#39;ln&#39;&gt;变换方程形式&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;一般采用对解释变量取对数的形式。&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id=&#34;第八章-虚拟变量&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第八章-虚拟变量&#34;&gt;#&lt;/a&gt; 第八章 虚拟变量&lt;/h2&gt;
&lt;h3 id=&#34;虚拟变量概念&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#虚拟变量概念&#34;&gt;#&lt;/a&gt; 虚拟变量概念&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211212193128.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;​	虚拟变量既可以作为解释变量，又可以作为被解释变量；虚拟应变量模型又称为概率模型、离散选择模型。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;设置原则：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;每⼀定性变量所需的虚拟变量个数要比该定性变量的类别数少 1，即如果有 m 个定性变量，只在模型中引⼊ m-1 个虚拟变量；&lt;/li&gt;
&lt;li&gt;在同⼀个⽅程中，可以引⼊多个虚拟变量来考察多种定性因素的影响；&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;虚拟变量的引入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#虚拟变量的引入&#34;&gt;#&lt;/a&gt; 虚拟变量的引入&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211213191601.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;线性概率模型lpm&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#线性概率模型lpm&#34;&gt;#&lt;/a&gt; 线性概率模型（LPM)&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211212193508.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211212193548.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;logit模型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#logit模型&#34;&gt;#&lt;/a&gt; Logit 模型&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211212194008.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;EViews 操作：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211212194042.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211212194053.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;其参数估计值的解释：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211212194425.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211212194441.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211212194455.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;probit模型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#probit模型&#34;&gt;#&lt;/a&gt; Probit 模型&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211212194625.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;EViews 操作：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211212194708.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211212194721.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;其它虚拟应变量模型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#其它虚拟应变量模型&#34;&gt;#&lt;/a&gt; 其它虚拟应变量模型&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;多元 Logit 模型：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;被解释变量存在多种离散且⽆序的选择；&lt;/li&gt;
&lt;li&gt;如择业的选择、交通⼯具的选择；&lt;/li&gt;
&lt;li&gt;采用极⼤似然估计法，Eviews 中有示例程序；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;序次 Logit 模型：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;被解释变量存在多种离散且有序的选择；&lt;/li&gt;
&lt;li&gt;如债券的信用评级、舆论调查结果；&lt;/li&gt;
&lt;li&gt;采用极⼤似然估计法，Eviews 中可实现菜单操作；&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://nc3021.github.io/2021/11/26/front-end/HTML/</guid>
            <title>HTML学习</title>
            <link>https://nc3021.github.io/2021/11/26/front-end/HTML/</link>
            <category term="前端" scheme="https://nc3021.github.io/categories/front-end/" />
            <category term="前端" scheme="https://nc3021.github.io/tags/%E5%89%8D%E7%AB%AF/" />
            <pubDate>Fri, 26 Nov 2021 19:30:30 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;html学习&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#html学习&#34;&gt;#&lt;/a&gt; HTML 学习&lt;/h1&gt;
&lt;h2 id=&#34;xhtml&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#xhtml&#34;&gt;#&lt;/a&gt; XHTML&lt;/h2&gt;
&lt;h3 id=&#34;文档基本结构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#文档基本结构&#34;&gt;#&lt;/a&gt; 文档基本结构&lt;/h3&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token doctype&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;!&lt;/span&gt;&lt;span class=&#34;token doctype-tag&#34;&gt;DOCTYPE&lt;/span&gt; &lt;span class=&#34;token name&#34;&gt;html&lt;/span&gt; &lt;span class=&#34;token name&#34;&gt;PUBLIC&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;-//W3C//DTD XHTML 1.0 Transitional//EN&#34;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token string&#34;&gt;&#34;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;html&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;xmlns&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;http://www.w3.org/1999/xhtml&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;head&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;meta&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;http-equiv&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;Content-Type&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;text/html; charset=gb2312&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;无标题文档&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;head&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;文档定义类型&lt;/p&gt;
&lt;p&gt;其中 DOCTYPE 元素定义了文档类型，要注意的是元素的名称和属性必须大写，DTD 表示文档类型定义，浏览器根据定义的 DTD 解析页面元素，除非你的 XHTML 确定了一个正确的 DOCTYPE, 否则页面内的元素和 CSS 不能正确生效.&lt;/p&gt;
&lt;p&gt;XHTML 提供三种 DTD 文档类型:&lt;/p&gt;
&lt;p&gt;过渡型 (Transitional): 要求非常宽松的 DTD.&lt;br /&gt;
 &lt;code&gt;&amp;lt;!DOCTYPE html PUBLIC &amp;quot;-//W3C//DTD XHTML 1.0 Transitional//EN&amp;quot;&lt;/code&gt; &lt;br /&gt;
 &lt;code&gt;&amp;quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&amp;quot;&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;严格型 (Strict): 要求严格的 DTD.&lt;br /&gt;
 &lt;code&gt;&amp;lt;!DOCTYPE html PUBLIC &amp;quot;-//W3C//DTD XHTML 1.0 Strict//EN&amp;quot;&lt;/code&gt; &lt;br /&gt;
 &lt;code&gt;&amp;quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd&amp;quot;&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;框架型 (Frameset): 专门针对框架页面使用的 DTD.&lt;br /&gt;
 &lt;code&gt;&amp;lt;!DOCTYPE html PUBLIC &amp;quot;-//W3C//DTD XHTML 1.0 Frameset//EN&amp;quot;&lt;/code&gt; &lt;br /&gt;
 &lt;code&gt;&amp;quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd&amp;quot;&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;对于大多数网页来说，使用过渡型 (Transitional) 是比较理想的选择。因为这种 DTD 允许使用描述性的元素和属性，也比较容易通过 w3c 的代码校验.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;声明命名空间&lt;/p&gt;
&lt;p&gt;在 xhtml 文档根元素中必须使用 xmlns 属性声明文档的命名空间.xhtml 是 html 向 xml 过渡的标识语言，它需要符合 xml 的规定，因此也需要定义命名空间。又因为 xhtml1.0 还不允许用户自定义元素，因此它的命名空间值都相同.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;html xmlns=&amp;quot;http://www.w3.org/1999/xhtml&amp;quot;&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;xhtml基础语法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#xhtml基础语法&#34;&gt;#&lt;/a&gt; XHTML 基础语法&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;在文档的开头必须定义文档类型；&lt;/li&gt;
&lt;li&gt;在根元素中应声明命名空间；&lt;/li&gt;
&lt;li&gt;所有标签必须是闭合的；（HTML 则可以不用）&lt;/li&gt;
&lt;li&gt;所有元素和属性都必须小写；（HTML 不在意大小写）&lt;/li&gt;
&lt;li&gt;所有的属性都必须用引号 (&amp;quot;&amp;quot;) 括起来；（HTML 则不需要）&lt;/li&gt;
&lt;li&gt;所有的标签都必须合理嵌套；&lt;/li&gt;
&lt;li&gt;所有的属性都必须赋值，没有值的的属性则用自身来赋值；（HTML 则不需要）&lt;/li&gt;
&lt;li&gt;所有的符号都必须用编码表示（如小于符号 (&amp;lt;) 则需要用 &lt;code&gt;&amp;amp;lt;&lt;/code&gt;  表示；&lt;/li&gt;
&lt;li&gt;用 Id 属性代替 name 属性&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;html5&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#html5&#34;&gt;#&lt;/a&gt; HTML5&lt;/h2&gt;
&lt;h3 id=&#34;文档基本结构-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#文档基本结构-2&#34;&gt;#&lt;/a&gt; 文档基本结构&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;文档类型说明&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;HTML5&lt;/strong&gt; 文档类型说明，代码如下，需要出现在&lt;strong&gt; HTML 文件&lt;/strong&gt;的第一行，其主要作用是告诉浏览器要处理的文档类型，如果你不写的话，浏览器一般也能识别，个人建议还是写上。&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token doctype&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;!&lt;/span&gt;&lt;span class=&#34;token doctype-tag&#34;&gt;DOCTYPE&lt;/span&gt; &lt;span class=&#34;token name&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;HTML 标签&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;HTML&lt;/strong&gt; 的标记有很多，我们接下来一段时间将会学习一些标记。&lt;strong&gt;HTML5&lt;/strong&gt; 主要用来写一个网页的大概结构，至于排版，渲染 SS 来处理。下面是一张&lt;strong&gt; HTML5 元素周期表&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://pic4.zhimg.com/80/v2-24091f5aac9f9e22e8fbc38f5b351bf7_1440w.jpg&#34; alt=&#34;img&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;HTML&lt;/strong&gt; 标记代表文档的开始，由于&lt;strong&gt; HTML&lt;/strong&gt; 语言语法的松散特性，该标记可以省略，，但是为了使之符合&lt;strong&gt; Web 标准&lt;/strong&gt;和文档的完整性，我们要养成良好的编写习惯，建议不要省略。这也是许多程序员笔试&lt;strong&gt; HTML&lt;/strong&gt; 语言的地方，语法松散。&lt;br /&gt;
&lt;strong&gt;HTML&lt;/strong&gt; 标记以 &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt;  开头，以 &lt;code&gt;&amp;lt;/html&lt;/code&gt;  &amp;gt; 结尾，文档的所有内容书写在开头和结尾的中间部分。语法格式如下：&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;.....&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;头标记&lt;/p&gt;
&lt;p&gt;头标记 head 用于说明文档头部相关信息，一般包括标题信息、元信息、定义 CSS 样式和脚本代码等。以 &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;  开始，以 &lt;code&gt;&amp;lt;/head&amp;gt;&lt;/code&gt;  结尾，语法格式如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;head&amp;gt;
.....
&amp;lt;/head&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;  元素的作用范围是整篇文档，定义在&lt;strong&gt; HTML&lt;/strong&gt; 文档头部的内容往往不会再网页上直接显示。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;标题标记&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;HTML&lt;/strong&gt; 页面的标题一般是用来说明页面的用途，它显示在浏览器的标题栏中。以 &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt;  开始，以 ``&lt;/title&gt;` 结尾，语法格式如下：&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;.....&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;元信息标记&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt;  标记可以提供有关页面的元信息（meta-information），比如针对搜索引擎和更新频度的描述和关键字。 &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt;  标记位于文档的头部，不包含任何内容。 &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt;  标记的属性定义了与文档相关联的名称 / 值。&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;meta&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;charset&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;utf-8&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;html5新增语法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#html5新增语法&#34;&gt;#&lt;/a&gt; HTML5 新增语法&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;元素的标记可以省略：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不允许写结束标记的标签：br,input,link,meta&lt;/li&gt;
&lt;li&gt;可以省略结束标记的元素：li,dt,dd,p,tr,td,th&lt;/li&gt;
&lt;li&gt;可以省略全部标记的元素：html,head,body&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;具有 Boolean 值的属性示例：&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;checkbox&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;checked&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;  //表示true&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;checkbox&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;checked&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;checked&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;  //表示true&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;checkbox&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;checked&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;  //表示true&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;checkbox&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;  //表示false&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;属性值的既可以使用双引号也可以使用单引号，在属性值不包含空字符串， &lt;code&gt;&amp;lt;&lt;/code&gt; , &lt;code&gt;&amp;gt;&lt;/code&gt; , &lt;code&gt;=&lt;/code&gt; , &lt;code&gt;&#39;&#39;&lt;/code&gt; , &lt;code&gt;&amp;quot;&amp;quot;&lt;/code&gt;  等字符时，属性值两边的引号可以省略。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;html5元素&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#html5元素&#34;&gt;#&lt;/a&gt; HTML5 元素&lt;/h2&gt;
&lt;h3 id=&#34;结构元素&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#结构元素&#34;&gt;#&lt;/a&gt; 结构元素&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;header&lt;/code&gt; ：表中页面中一个内容区块或整个页面标题；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;footer&lt;/code&gt; ：表示整个页面或页面中一个内容区块的脚注。一般来说，它会包含创作者的姓名、创作日期以及创作者的联系信息；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;section&lt;/code&gt; ：表示页面中的一个内容区块，一般由内容及其标题组成，多个相邻 section 之间具有一定联系，表示文档结构；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;article&lt;/code&gt; ： 表示页面中的一块与上下文不相关的独立内容，如博客中的一篇文章或报纸中的一篇文章；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;aside&lt;/code&gt; ：表示 article 元素的内容之外的、与 article 元素的内容相关辅助信息；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nav&lt;/code&gt; ：表示页面中导航链接的部分；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;main&lt;/code&gt; ：表示网页中的主要内容。主要内容区域指与网页标题或应用程序中本页面主要功能直接相关或进行扩展的内容；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;figure&lt;/code&gt; ：表示一段独立的流内容，一般表示文档主体流内容中的一个独立单元。可以使用 figcaption 元素为 figure 元素组添加标题；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;address&lt;/code&gt; ：文档作者信息；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;继承于 HTML4：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;h1~h6&lt;/code&gt; ：标题标签&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;一级标题&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;h2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;二级标题&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;h2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20220109193502.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;p&lt;/code&gt; ：段落标签&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;段落标签&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;容器标签&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;占一行,大盒子&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;span&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;小盒子&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;span&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;水平线标签&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;hr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;换行标签 (无额外行间距)&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;br&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;br&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;注释标签&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 注释标签 --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;表格标签&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;table&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;tr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;th&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;姓名&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;th&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;th&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;性别&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;th&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;tr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;tr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;td&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;刘德华&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;td&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;td&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;男&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;td&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;tr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;table&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;code&gt;table&lt;/code&gt; ：定义表格；&lt;/p&gt;
&lt;p&gt;&lt;code&gt;caption&lt;/code&gt; ：定义表格标题， &lt;code&gt;caption&lt;/code&gt;  标签必须紧随 &lt;code&gt;table&lt;/code&gt;  标签之后，且只能为每个表格定义一个标题。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;tr&lt;/code&gt; ：在表格里定义一行；&lt;/p&gt;
&lt;p&gt;&lt;code&gt;th&lt;/code&gt; ：定义表头单元格；&lt;/p&gt;
&lt;p&gt;&lt;code&gt;td&lt;/code&gt; ：在表格里定义一个单元格；&lt;/p&gt;
&lt;p&gt;&lt;code&gt;thead&lt;/code&gt; ：定义表头结构；&lt;/p&gt;
&lt;p&gt;&lt;code&gt;tbody&lt;/code&gt; ：定义表格主体结构；&lt;/p&gt;
&lt;p&gt;&lt;code&gt;tfoot&lt;/code&gt; ：定义表格的页脚结构；&lt;/p&gt;
&lt;p&gt;&lt;code&gt;col&lt;/code&gt; ：在表格里定义一个或多个列的属性值；&lt;/p&gt;
&lt;p&gt;&lt;code&gt;colgroup&lt;/code&gt; ：定义表格列的分组；&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;table&lt;/code&gt;  属性&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20220109193733.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;th、td&lt;/code&gt;  属性&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;属性&lt;/th&gt;
&lt;th&gt;值&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudzNzY2hvb2wuY29tLmNuL3RhZ3MvYXR0X3RoX2FsaWduLmFzcA==&#34;&gt;align&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;left;right;center;justify;char&lt;/td&gt;
&lt;td&gt;规定单元格内容的水平对齐方式。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudzNzY2hvb2wuY29tLmNuL3RhZ3MvYXR0X3RoX2F4aXMuYXNw&#34;&gt;axis&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;category_name&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;对单元格进行分类。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudzNzY2hvb2wuY29tLmNuL3RhZ3MvYXR0X3RoX2NoYXIuYXNw&#34;&gt;char&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;character&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;规定根据哪个字符来进行内容的对齐。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudzNzY2hvb2wuY29tLmNuL3RhZ3MvYXR0X3RoX2NoYXJvZmYuYXNw&#34;&gt;charoff&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;number&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;规定对齐字符的偏移量。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudzNzY2hvb2wuY29tLmNuL3RhZ3MvYXR0X3RoX2NvbHNwYW4uYXNw&#34;&gt;colspan&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;number&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;设置单元格可横跨的列数。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudzNzY2hvb2wuY29tLmNuL3RhZ3MvYXR0X3RoX3Jvd3NwYW4uYXNw&#34;&gt;rowspan&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;number&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;规定单元格可横跨的行数。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;合并单元格&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 跨列 --&gt;&lt;/span&gt; &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;td&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;colspan&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;2&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;td&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 跨行 --&gt;&lt;/span&gt; &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;td&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;span&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;2&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;td&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;列表标签&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;无序列表&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;ul&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;li&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;li&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;li&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;li&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;ul&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;有序列表&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;ol&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;li&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;li&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;li&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;li&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;ol&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;属性&lt;/th&gt;
&lt;th&gt;值&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudzNzY2hvb2wuY29tLmNuL3RhZ3MvYXR0X29sX3JldmVyc2VkLmFzcA==&#34;&gt;reversed&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;reversed&lt;/td&gt;
&lt;td&gt;规定列表顺序为降序。(9,8,7...)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudzNzY2hvb2wuY29tLmNuL3RhZ3MvYXR0X29sX3N0YXJ0LmFzcA==&#34;&gt;start&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;number&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;规定有序列表的起始值。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudzNzY2hvb2wuY29tLmNuL3RhZ3MvYXR0X29sX3R5cGUuYXNw&#34;&gt;type&lt;/span&gt;&lt;/td&gt;
&lt;td&gt;1；A；a；I；i&lt;/td&gt;
&lt;td&gt;规定在列表中使用的标记类型。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;自定义列表&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;dl&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;dt&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;dt&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;dd&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;dd&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;dd&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;dd&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;dl&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!--dl 里只能有 dt 与 dd--&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;内容及修饰元素&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#内容及修饰元素&#34;&gt;#&lt;/a&gt; 内容及修饰元素&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;突出文本&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;mark&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;高亮文本&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;mark&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;继承于 HTML4：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;文本修饰元素&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;加粗标签&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;strong&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;强调标签&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;strong&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;b&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;字体加粗标签&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;b&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;倾斜标签&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;em&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;倾斜标签&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;em&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;i&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;倾斜标签&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;i&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;删除线标签&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;del&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;删除线&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;del&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;s&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;删除线&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;s&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;下划线标签&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;ins&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;下划线&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;ins&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;u&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;下划线&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;u&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;引用标签&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;q&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;行内引用（如言论）&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;q&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;cite&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;参考文献的引用&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;cite&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;blockquote&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  一段引用（如注释或摘录）&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;blockquote&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;图像标签&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;img&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;img.jpg&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;alt&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;替换文字&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;提示文本&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20220109193522.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;超链接标签&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;外部链接&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;target&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;_blank&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;超链接&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;#&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;空链接&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;下载文件路径&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;下载链接&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20220109193603.png&#34; alt=&#34;&#34; /&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20220109193632.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;定义热点区域&lt;/p&gt;
&lt;p&gt;​	热点区域就是为图像的局部区域定义超链接，当点击该热点区域时，会触发超链接，并跳转到其他网页或者页面的位置。热点区域是一种特殊的超链接形式，常用来在图像中设置导航，用户可以在一幅图定义多个热点区域，以实现单击不同的热区连接到不同的页面。&lt;/p&gt;
&lt;p&gt;定义热点区域，需要使用 &amp;lt;map&amp;gt; 和 &amp;lt; area &amp;gt; 标签来配合使用&lt;/p&gt;
&lt;p&gt;&amp;lt;map&amp;gt;：定义热点区域，包含必须的 ID 属性，定义热点区域的 ID，或者定义可选的 name 的值属性，也可以作为一个句柄，与热点图像进行绑定；&lt;/p&gt;
&lt;p&gt;&amp;lt;area&amp;gt;：定义图像映射中的区域，area 匀速必须嵌套在&lt;map&gt;标签中，该标签包含一个必须设置的属性 alt，定义热点区域的替换文本。&lt;/p&gt;
&lt;p&gt;&amp;lt;img&amp;gt; 中的 usemap 属性可引用 &amp;lt; map &amp;gt; 中的 id 或 name 属性（根据浏览器），所以应同时向 &amp;lt; map &amp;gt; 添加 id 和 name 属性，且设置相同的值。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;area&lt;/code&gt;  属性：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;属性&lt;/th&gt;
&lt;th&gt;取值&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;coords&lt;/td&gt;
&lt;td&gt;坐标值&lt;/td&gt;
&lt;td&gt;定义可点击区域（鼠标敏感的区域）的坐标&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;href&lt;/td&gt;
&lt;td&gt;URL&lt;/td&gt;
&lt;td&gt;定义此区域的目标 URL&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;nohref&lt;/td&gt;
&lt;td&gt;nohref&lt;/td&gt;
&lt;td&gt;从图像映射除某个区域&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;shape&lt;/td&gt;
&lt;td&gt;default、rectangle（矩形） circle（圆形） polygon（多边形）&lt;/td&gt;
&lt;td&gt;定义区域的形状&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;trarget&lt;/td&gt;
&lt;td&gt;_blank　　_parent　　_self　　_top&lt;/td&gt;
&lt;td&gt;规定在何处打开 href 属性指定的位置&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;map&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;img&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;1.jpg&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;alt&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;df&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;usemap&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;Map&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;map&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;Map&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;Map&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;area&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;shape&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;circle&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;coords&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;200,300,100&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;https://www.baidu.com/s?wd=西藏自治区&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;alt&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;西藏自治区&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;map&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;内联框架 &lt;code&gt;iframe&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;一个内联框架被用来在当前 HTML 文档中嵌入另一个文档。&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;iframe&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;demo.html&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;300&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;500&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;demo&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;scrolling&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;auto&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;sandbox&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;allow-same-origin&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;iframe&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;功能元素&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#功能元素&#34;&gt;#&lt;/a&gt; 功能元素&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;hgroup&lt;/code&gt; ：用于对页面中一个内容区块的标题进行整合；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;video&lt;/code&gt; ：定义视频流；&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;video&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;xxx.mp4&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;video&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;audio&lt;/code&gt; ：定义音频流；&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;audio&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;xxx.mp3&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;audio&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;embed&lt;/code&gt; ：用来插入各种多媒体，格式可以是 Midi、Wav、AIFF、AU、MP3 等。&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;embed&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;horse.wav&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;dialog&lt;/code&gt; ：定义对话框或窗口；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;figcaption&lt;/code&gt; ：定义 figure 元素的标题；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;time&lt;/code&gt; ：表示日期或时间，也可以同时表示两者；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;canvas&lt;/code&gt; ：表示图形，如图表和其他图像。元素本身没有行为，仅提供一块画布，但他把一个绘制 API 展现给客户端 javascript 以使脚本把想绘制的东西绘制到这块画布上；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;output&lt;/code&gt; ：表示不同类型的输出，比如脚本的输出；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;menu&lt;/code&gt; ：表示菜单列表。当希望列出表单控件时使用该标签；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;details&lt;/code&gt; ：表示用户要求得到并且可以得到的细节信息。它可以与 summary 元素配合使用，summary 元素提供标题或图例。标题是可见的，用户单击标题时，会显示出细节信息。summary 元素应该是 details 元素的第一个子元素；&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;details&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;summary&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;老鼠&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;summary&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        短尾毛丝鼠体型较大，体长30～38cm，尾长10cm左右；长尾毛丝鼠体型较小，体长24～28cm，尾长14～15cm。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        一般雌鼠体重510～710g，雄鼠体重425～570g。前半身似兔，后半身似鼠，耳大钝圆，尾毛蓬松。眼睛明亮，鼻端两侧有许多长须。标准毛丝鼠皮毛呈蓝灰色，腹部渐淡至白色，腹中部有分界明显的白色带。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;details&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;progress&lt;/code&gt; ：显示进度&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;progress&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;100&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;50&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;progress&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;command&lt;/code&gt; ：按钮&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;属性&lt;/th&gt;
&lt;th&gt;值&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudzNjc2Nob29sLmNuL2h0bWx0YWdzL2F0dC1jb21tYW5kLWNoZWNrZWQuaHRtbA==&#34;&gt;checked&lt;/span&gt;New&lt;/td&gt;
&lt;td&gt;checked&lt;/td&gt;
&lt;td&gt;规定当页面加载时，command 是否被选中。仅用于 radio 或 checkbox 类型。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudzNjc2Nob29sLmNuL2h0bWx0YWdzL2F0dC1jb21tYW5kLWRpc2FibGVkLmh0bWw=&#34;&gt;disabled&lt;/span&gt;New&lt;/td&gt;
&lt;td&gt;disabled&lt;/td&gt;
&lt;td&gt;规定 command 是否可用。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudzNjc2Nob29sLmNuL2h0bWx0YWdzL2F0dC1jb21tYW5kLWljb24uaHRtbA==&#34;&gt;icon&lt;/span&gt;New&lt;/td&gt;
&lt;td&gt;URL&lt;/td&gt;
&lt;td&gt;规定作为 command 来显示的图像的 URL。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudzNjc2Nob29sLmNuL2h0bWx0YWdzL2F0dC1jb21tYW5kLWxhYmVsLmh0bWw=&#34;&gt;label&lt;/span&gt;New&lt;/td&gt;
&lt;td&gt;text&lt;/td&gt;
&lt;td&gt;必需。规定 command 的名字，对用户可见。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudzNjc2Nob29sLmNuL2h0bWx0YWdzL2F0dC1jb21tYW5kLXJhZGlvZ3JvdXAuaHRtbA==&#34;&gt;radiogroup&lt;/span&gt;New&lt;/td&gt;
&lt;td&gt;groupname&lt;/td&gt;
&lt;td&gt;规定可进行切换且将被切换的 command 所属的组名。仅在类型为 radio 时使用。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudzNjc2Nob29sLmNuL2h0bWx0YWdzL2F0dC1jb21tYW5kLXR5cGUuaHRtbA==&#34;&gt;type&lt;/span&gt;New&lt;/td&gt;
&lt;td&gt;checkboxcommandradio&lt;/td&gt;
&lt;td&gt;定义 command 的类型。默认是 &amp;quot;command&amp;quot;。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;继承于 HTML4：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;form&lt;/code&gt;  表单标签&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;表单属性:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;action&lt;/code&gt; ：定义提交表单时要执行的操作；&lt;/p&gt;
&lt;p&gt;&lt;code&gt;target&lt;/code&gt; ：规定提交表单后在何处显示响应（默认值为  &lt;code&gt;_self&lt;/code&gt; ，这意味着响应将在当前窗口中打开。）；&lt;/p&gt;
&lt;p&gt;&lt;code&gt;method&lt;/code&gt; ：指定提交表单数据时要使用的 HTTP 方法；&lt;/p&gt;
&lt;p&gt;&lt;code&gt;autocomplete&lt;/code&gt; ：规定表单是否打开自动完成功能（H5）；&lt;/p&gt;
&lt;p&gt;&lt;code&gt;novalidate&lt;/code&gt; ：规定提交时不验证表单数据（H5）；&lt;/p&gt;
&lt;p&gt;&lt;code&gt;enctype&lt;/code&gt; ：定义发送表单数据 http 字符的编码格式；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; &lt;strong&gt; 标签&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;type 属性值：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;text&lt;/code&gt; ：文本输入框&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;placeholder：提示文本（H5）&lt;/li&gt;
&lt;li&gt;value：默认值&lt;/li&gt;
&lt;li&gt;name：名称&lt;/li&gt;
&lt;li&gt;readonly：只读，布尔属性&lt;/li&gt;
&lt;li&gt;required：必须输入，布尔属性（H5）&lt;/li&gt;
&lt;li&gt;disabled：不可用，布尔属性（input，select,textarea 的通用属性）&lt;/li&gt;
&lt;li&gt;minlength：最小长度，提交时判定&lt;/li&gt;
&lt;li&gt;maxlength：最大可输入的长度&lt;/li&gt;
&lt;li&gt;pattern：正则匹配（H5）&lt;/li&gt;
&lt;li&gt;autocomplete ：自动记录输入，以后输入时可以自动选择完成。可选值为 on/off，默认 on（H5）&lt;/li&gt;
&lt;li&gt;autofocus：使某表单控件自动获取焦点&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;password&lt;/code&gt; ：密码输入框，属性于 &lt;code&gt;text&lt;/code&gt;  一样；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;hidden&lt;/code&gt; ：隐藏域，提交网页中不显示的信息，其只包含一个 value 属性；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;file&lt;/code&gt; ：可以将文件以二进制数据的形式上传到服务器（method 属性必须设置为 post，enctype 属性必须设置为 multipart/form-data）；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;button&lt;/code&gt; ：普通按钮；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;submit&lt;/code&gt; ：提交按钮，属性同普通按钮；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;image&lt;/code&gt; ：图片按钮，同提交按钮一样，只是用属性 &lt;code&gt;src&lt;/code&gt;  替换了 &lt;code&gt;value&lt;/code&gt; ，并拥有专有属性 &lt;code&gt;height&lt;/code&gt;  和 &lt;code&gt;width&lt;/code&gt; ；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;radio&lt;/code&gt; ：单选按钮&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;name：名称，必须，相同名称可实现单选按钮组&lt;/li&gt;
&lt;li&gt;checked：默认选中&lt;/li&gt;
&lt;li&gt;value：显示名称&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;checkbox&lt;/code&gt; ：复选按钮；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;reset&lt;/code&gt; ：重置按钮，将表单里所有组件输入的内容还原为初始内容；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;email&lt;/code&gt; ：自动验证输入值是否为有效邮箱的文本输入框（H5）；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;url&lt;/code&gt; ：自动验证输入值是否为有效网址的文本输入框（H5）；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;number&lt;/code&gt; ：输入数值的文本框（H5）&lt;/p&gt;
&lt;p&gt;专有属性：&lt;/p&gt;
&lt;p&gt;max，min，step，value&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;range&lt;/code&gt; ：外表为滑动条的数值输入文本框，属性值与 &lt;code&gt;number&lt;/code&gt;  相同（H5）；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;data mouth week time datetime-local&lt;/code&gt; ：日期选择器（H5）；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;search&lt;/code&gt; ：搜索关键词的文本框；&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; &lt;strong&gt; 标签&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20220109194717.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;textarea&lt;/code&gt; ：大文本标签&lt;/p&gt;
&lt;p&gt;可以允许用户输入大容量信息，其属性大部分与 &lt;code&gt;input&lt;/code&gt;  标签相同；&lt;/p&gt;
&lt;p&gt;专有属性：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cols&lt;/code&gt; ：设置文本区域内可见字符的宽度；&lt;/p&gt;
&lt;p&gt;&lt;code&gt;rows&lt;/code&gt; ：设置文本区域内可见行数；&lt;/p&gt;
&lt;p&gt;&lt;code&gt;wrap&lt;/code&gt; ：定义输入内容大于文本区域宽度（cols）时的显示方式：&lt;/p&gt;
&lt;p&gt;soft：默认值，提交时文本内容不换行&lt;/p&gt;
&lt;p&gt;hard：文本内容换行（必须设置 cols 值）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt;  下拉列表标签&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20220109194740.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;专有属性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;size：定义下拉菜单中显示的项目数目；&lt;/li&gt;
&lt;li&gt;multiple：定义下拉菜单可以多选；&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt;  标签定义文档与外部资源的关系。其中 &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt;  标签最常见的用途是链接样式表。&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;head&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;link&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;rel&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;stylesheet&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;text/css&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;theme.css&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;head&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;注释&lt;/strong&gt;：link 元素是空元素，它仅包含属性。此元素只能存在于 head 部分，不过它可出现任何次数。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;html5属性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#html5属性&#34;&gt;#&lt;/a&gt; HTML5 属性&lt;/h2&gt;
&lt;h3 id=&#34;全局属性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#全局属性&#34;&gt;#&lt;/a&gt; 全局属性&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;accesskey&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;使用快捷键访问经常用到的元素 alt+*（继承于 HTML4）；&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;www.xxx.com&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;accesskey&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;class&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;将元素归类（继承于 HTML4）；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;contenteditable&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;让用户能够修改页面上的内容，且该属性可继承于父元素；&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;ul&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;contenteditable&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;true&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;li&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;1&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;li&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;li&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;2&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;li&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;ul&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;contextmenu&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;为 div 元素设定快捷菜单，这种菜单会在受到用户右键点击触发的时候弹出来；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;dir&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;用于规定元素中文字的方向，从左到右，或者从右到左；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;draggable、dropzone&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;表示元素是否可以被拖放，两者搭配使用；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;hidden&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;隐藏相关元素；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;id&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;给元素分配一个唯一的标识符，通常用来将样式应用到元素上或者在 js 程序中用来选择元素；也可以导航到文档中的特定位置（继承于 HTML4）；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;lang&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;说明元素内容使用的语言，属性值使用的是有效的 ISO 语言代码（继承于 HTML4）；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;spellcheck&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;可以用来表明浏览器是否应该对元素的内容（其中包括： &lt;code&gt;input&lt;/code&gt;  元素中的文本值、 &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt;  中的文本值、可编辑元素中的文本值）进行拼写检查，只有用在用户可以编辑的元素上时才有意义；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;style&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;用来直接在元素身上定义 css 样式（继承于 HTML4）；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;tabindex&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;html 页面上的键盘焦点可以通过按 Tab 键在各元素之间切换，使用 tabindex 属性可以改变默认的转移顺序（继承于 HTML4）；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;title&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;定义元素的提示文本（继承于 HTML4）；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;alt&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;定于元素的替换文本（继承于 HTML4）；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;data-*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;data-* 属性用于存储页面或应用程序的私有自定义数据。&lt;/p&gt;
&lt;p&gt;data-* 属性赋予我们在所有 HTML 元素上嵌入自定义 data 属性的能力。&lt;/p&gt;
&lt;p&gt;存储的（自定义）数据能够被页面的 JavaScript 中利用，以创建更好的用户体验（不进行 Ajax 调用或服务器端数据库查询）。&lt;/p&gt;
&lt;p&gt;data-* 属性包括两部分：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;属性名不应该包含任何大写字母，并且在前缀 &amp;quot;data-&amp;quot; 之后必须有至少一个字符&lt;/li&gt;
&lt;li&gt;属性值可以是任意字符串&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注释：用户代理会完全忽略前缀为 &amp;quot;data-&amp;quot; 的自定义属性。&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;ul&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;li&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;data-animal-type&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;鸟类&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;喜鹊&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;li&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;li&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;data-animal-type&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;鱼类&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;金枪鱼&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;li&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;li&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;data-animal-type&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;蜘蛛&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;蝇虎&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;li&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;ul&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;特殊字符&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#特殊字符&#34;&gt;#&lt;/a&gt; 特殊字符&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/08/ioQNV32cBLfekuw.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://nc3021.github.io/2021/11/26/hybrid-learning/Typora%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</guid>
            <title>Typora使用教程</title>
            <link>https://nc3021.github.io/2021/11/26/hybrid-learning/Typora%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</link>
            <category term="杂学" scheme="https://nc3021.github.io/categories/hybrid-learning/" />
            <category term="Typora" scheme="https://nc3021.github.io/tags/Typora/" />
            <category term="markdown" scheme="https://nc3021.github.io/tags/markdown/" />
            <pubDate>Fri, 26 Nov 2021 19:30:18 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;typora使用教程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#typora使用教程&#34;&gt;#&lt;/a&gt; Typora 使用教程&lt;/h1&gt;
&lt;h2 id=&#34;常用快捷键&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#常用快捷键&#34;&gt;#&lt;/a&gt; 常用快捷键&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;加粗：&lt;strong&gt;ctrl+B&lt;/strong&gt; （bold）&lt;/li&gt;
&lt;li&gt;字体倾斜：&lt;strong&gt;ctrl+I&lt;/strong&gt; （incline）&lt;/li&gt;
&lt;li&gt;下划线：&lt;strong&gt;ctrl+U&lt;/strong&gt; （under）&lt;/li&gt;
&lt;li&gt;多级标题：&lt;strong&gt;ctrl+1~6&lt;/strong&gt;   （写 Bolg 时必须按顺序使用）&lt;/li&gt;
&lt;li&gt;有序列表：&lt;strong&gt;ctrl+shift+[&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;无序列表：&lt;strong&gt;ctrl+shift+]&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;降级：&lt;strong&gt;Tab&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;升级：&lt;strong&gt;shift+Tab&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;插入链接：&lt;strong&gt;ctrl+K&lt;/strong&gt; （link）&lt;/li&gt;
&lt;li&gt;插入公式：&lt;strong&gt;ctrl+shift+M&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;代码：&lt;strong&gt;ctrl+shift+K&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;插入图片：&lt;strong&gt;ctrl+shift+I&lt;/strong&gt; （image）&lt;/li&gt;
&lt;li&gt;创建表格：&lt;strong&gt;ctrl+T&lt;/strong&gt; （table）&lt;/li&gt;
&lt;li&gt;选中一行：&lt;strong&gt;ctrl+L&lt;/strong&gt; （line）&lt;/li&gt;
&lt;li&gt;选中一字：&lt;strong&gt;ctrl+D&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;选中相同格式的文字：&lt;strong&gt;ctrl+E&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;搜索：&lt;strong&gt;ctrl+F&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;搜索并替换：&lt;strong&gt;ctrl+H&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;删除线：&lt;strong&gt;Alt+shift+5&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;引用：&lt;strong&gt;ctrl+shift+Q&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;生成目录：&lt;strong&gt;[TOC]+Enter&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;分割线：&lt;strong&gt;---+Enter&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;字体&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#字体&#34;&gt;#&lt;/a&gt; 字体&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;斜体：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;*斜体字体1*，_斜体字体2_
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;斜体字体 1&lt;/em&gt;，&lt;em&gt;斜体字体 2&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;加粗：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;**加粗字体1**，__加粗字体2__
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;加粗字体 1&lt;/strong&gt;，&lt;strong&gt;加粗字体 2&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;删除线：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;~~需要删除的文字~~
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;s&gt;需要删除的文字&lt;/s&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;大高亮&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;==高亮==
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;mark&gt;高亮&lt;/mark&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;小高亮&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;`高亮`
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;高亮&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;数学公式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数学公式&#34;&gt;#&lt;/a&gt; 数学公式&lt;/h2&gt;
&lt;p&gt;行内的数学公式用两个 &lt;code&gt;$&lt;/code&gt;  将 LaTex 公式包裹；&lt;/p&gt;
&lt;p&gt;而行外的公式（单独一行）用两个 &lt;code&gt;$$&lt;/code&gt;  将 LaTex 公式包裹。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;常用数学 LaTex 公式&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Csqrt%7Bab%7D&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\sqrt&amp;#123;ab&amp;#125;$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Csqrt%5Bn%5D%7Bab%7D&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\sqrt[n]&amp;#123;ab&amp;#125;$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Clog_%7Ba%7D%7Bb%7D&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\log_&amp;#123;a&amp;#125;&amp;#123;b&amp;#125;$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Clg%7Bab%7D&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\lg&amp;#123;ab&amp;#125;$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=a%5E%7Bb%7D&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$a^&amp;#123;b&amp;#125;$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=a_%7Bb%7D&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$a_&amp;#123;b&amp;#125;$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=x_a%5Eb&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$x_a^b$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Cint&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\int$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Cint_%7Ba%7D%5E%7Bb%7D&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\int_&amp;#123;a&amp;#125;^&amp;#123;b&amp;#125;$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Coint&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\oint$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Coint_a%5Eb&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\oint_a^b$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Csum&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\sum$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Csum_a%5Eb&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\sum_a^b$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Ccoprod&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\coprod$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Ccoprod_a%5Eb&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\coprod_a^b$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Cprod&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\prod$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Cprod_a%5Eb&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\prod_a^b$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Cbigcap&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\bigcap$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Cbigcap_a%5Eb&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\bigcap_a^b$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Cbigcup&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\bigcup$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Cbigcup_a%5Eb&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\bigcup_a^b$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Cbigsqcup&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\bigsqcup$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Cbigsqcup_a%5Eb&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\bigsqcup_a^b$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Cbigvee&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\bigvee$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Cbigvee_a%5Eb&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\bigvee_a^b$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Cbigwedge&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\bigwedge$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Cbigwedge_a%5Eb&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\bigwedge_a^b$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Cwidetilde%7Bab%7D&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\widetilde&amp;#123;ab&amp;#125;$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Cwidehat%7Bab%7D&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\widehat&amp;#123;ab&amp;#125;$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Coverleftarrow%7Bab%7D&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\overleftarrow&amp;#123;ab&amp;#125;$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Coverrightarrow%7Bab%7D&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\overrightarrow&amp;#123;ab&amp;#125;$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Coverbrace%7Bab%7D&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\overbrace&amp;#123;ab&amp;#125;$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Cunderbrace%7Bab%7D&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\underbrace&amp;#123;ab&amp;#125;$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Cunderline%7Bab%7D&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\underline&amp;#123;ab&amp;#125;$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Coverline%7Bab%7D&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\overline&amp;#123;ab&amp;#125;$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Cfrac%7Bab%7D%7Bcd%7D&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\frac&amp;#123;ab&amp;#125;&amp;#123;cd&amp;#125;$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Cfrac%7B%5Cpartial+a%7D%7B%5Cpartial+b%7D&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\frac&amp;#123;\partial a&amp;#125;&amp;#123;\partial b&amp;#125;$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Cfrac%7B%5Ctext%7Bd%7Dx%7D%7B%5Ctext%7Bd%7Dy%7D&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\frac&amp;#123;\text&amp;#123;d&amp;#125;x&amp;#125;&amp;#123;\text&amp;#123;d&amp;#125;y&amp;#125;$&lt;/code&gt; &lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Clim_%7Ba+%5Crightarrow+b%7D&#34; alt=&#34;[公式]&#34; /&gt; &lt;code&gt;$\lim_&amp;#123;a \rightarrow b&amp;#125;$&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;希腊字母&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://www.zhihu.com/equation?tex=%5Calpha&#34; alt=&#34;[公式]&#34; /&gt; 希腊字母&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;字母&lt;/th&gt;
&lt;th&gt;实现&lt;/th&gt;
&lt;th&gt;字母&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;实现&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;A&lt;/td&gt;
&lt;td&gt;&lt;code&gt;A&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;α&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;code&gt;\alpha&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;B&lt;/td&gt;
&lt;td&gt;&lt;code&gt;B&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;β&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;code&gt;\beta&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Γ&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Gamma&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;γ&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;code&gt;\gamma&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Δ&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Delta&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;δ&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;code&gt;\delta&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;E&lt;/td&gt;
&lt;td&gt;&lt;code&gt;E&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ϵ&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;code&gt;\epsilon&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Z&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Z&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ζ&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;code&gt;\zeta&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;H&lt;/td&gt;
&lt;td&gt;&lt;code&gt;H&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;η&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;code&gt;\eta&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Θ&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Theta&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;θ&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;code&gt;\theta&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;I&lt;/td&gt;
&lt;td&gt;&lt;code&gt;I&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ι&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;code&gt;\iota&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;K&lt;/td&gt;
&lt;td&gt;&lt;code&gt;K&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;κ&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;code&gt;\kappa&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Λ&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Lambda&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;λ&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;code&gt;\lambda&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;M&lt;/td&gt;
&lt;td&gt;&lt;code&gt;M&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;μ&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;code&gt;\mu&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;td&gt;&lt;code&gt;N&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ν&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;code&gt;\nu&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ξ&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Xi&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ξ&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;code&gt;\xi&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;O&lt;/td&gt;
&lt;td&gt;&lt;code&gt;O&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ο&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;code&gt;\omicron&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Π&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Pi&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;π&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;code&gt;\pi&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;P&lt;/td&gt;
&lt;td&gt;&lt;code&gt;P&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ρ&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;code&gt;\rho&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Σ&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Sigma&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;σ&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;code&gt;\sigma&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;T&lt;/td&gt;
&lt;td&gt;&lt;code&gt;T&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;τ&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;code&gt;\tau&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Υ&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Upsilon&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;υ&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;code&gt;\upsilon&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Φ&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Phi&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ϕ&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;code&gt;\phi&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;td&gt;&lt;code&gt;X&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;χ&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;code&gt;\chi&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ψ&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Psi&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ψ&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;code&gt;\psi&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ω&lt;/td&gt;
&lt;td&gt;&lt;code&gt;\Omega&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ω&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;code&gt;\omega&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;段落&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#段落&#34;&gt;#&lt;/a&gt; 段落&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;更小行间距 ：&lt;strong&gt;shift+Enter&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;打断线：&lt;br/&gt;打断线后的内容将自动换行&lt;/li&gt;
&lt;li&gt;引用：&lt;strong&gt;&amp;gt;+Space + 文字&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;特殊符号&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#特殊符号&#34;&gt;#&lt;/a&gt; 特殊符号&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;&lt;/code&gt; ：＆ｌｔ；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;＆&lt;/code&gt; ：＆ａｍｐ；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;ul class=&#34;task-list&#34;&gt;
&lt;li class=&#34;task-list-item&#34;&gt;
&lt;p&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_0&#34; disabled=&#34;true&#34; /&gt;&lt;label for=&#34;cbx_0&#34;&gt; 待办事项&lt;/label&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;
&lt;p&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_1&#34; checked=&#34;true&#34; disabled=&#34;true&#34; /&gt;&lt;label for=&#34;cbx_1&#34;&gt; 已办事项&lt;/label&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;-&lt;/code&gt; + &lt;code&gt;空格&lt;/code&gt;  + &lt;code&gt;[&lt;/code&gt; + &lt;code&gt;空格&lt;/code&gt;  + &lt;code&gt;]&lt;/code&gt; + &lt;code&gt;空格&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;
&lt;p&gt;省略号&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;低端对其的省略号（&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo&gt;…&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;\ldots&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.12em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;minner&#34;&gt;…&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;）： &lt;code&gt;$\ldots$&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;中线对其的省略号（&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo&gt;⋯&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;\cdots&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.31em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;minner&#34;&gt;⋯&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;）： &lt;code&gt;$\cdots$&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;竖直对齐的省略号（&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;⋮&lt;/mi&gt;&lt;mpadded height=&#34;+0em&#34; voffset=&#34;0em&#34;&gt;&lt;mspace mathbackground=&#34;black&#34; width=&#34;0em&#34; height=&#34;1.5em&#34;&gt;&lt;/mspace&gt;&lt;/mpadded&gt;&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;\vdots&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1.53em;vertical-align:-0.03em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord&#34;&gt;⋮&lt;/span&gt;&lt;span class=&#34;mord rule&#34; style=&#34;border-right-width:0em;border-top-width:1.5em;bottom:0em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;）： &lt;code&gt;$\vdots$&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;写对期齐的省略号（&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo&gt;⋱&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;\ddots&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.82em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;minner&#34;&gt;⋱&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;）： &lt;code&gt;$\ddots$&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;​    竖直线，可以用来写备注吧 (细节还不太懂)   &lt;code&gt;&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;跳转&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#跳转&#34;&gt;#&lt;/a&gt; 跳转&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;文档之间跳转&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;相对路径（适用于 markdown 的阅读）：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[content](相对地址)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如果在相对文件夹下，相对地址为 &lt;code&gt;./xxx.md&lt;/code&gt; ;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;../&lt;/code&gt;  用于表示上一级目录，以此类推；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;绝对路径（适用于博客的阅读）：&lt;/p&gt;
&lt;p&gt;HTML 写法：&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;helf&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;xxx.com&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;content&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;Markdown 写法：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[content](xxx.com)  //快捷键 ctrl+
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;文档内跳转&lt;/p&gt;
&lt;p&gt;第一步：定义一个锚 (id)&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;span&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;jump&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;content&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;span&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;第二步：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[点击跳转](#jump)
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://nc3021.github.io/2021/11/26/financial/Eviews/</guid>
            <title>EViews操作</title>
            <link>https://nc3021.github.io/2021/11/26/financial/Eviews/</link>
            <category term="金融" scheme="https://nc3021.github.io/categories/financial/" />
            <category term="金融" scheme="https://nc3021.github.io/tags/%E9%87%91%E8%9E%8D/" />
            <category term="计量经济学" scheme="https://nc3021.github.io/tags/%E8%AE%A1%E9%87%8F%E7%BB%8F%E6%B5%8E%E5%AD%A6/" />
            <category term="EViews" scheme="https://nc3021.github.io/tags/EViews/" />
            <category term="量化金融" scheme="https://nc3021.github.io/tags/%E9%87%8F%E5%8C%96%E9%87%91%E8%9E%8D/" />
            <pubDate>Fri, 26 Nov 2021 16:01:56 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;eviews操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#eviews操作&#34;&gt;#&lt;/a&gt; EViews 操作&lt;/h1&gt;
&lt;h2 id=&#34;回归数据分析&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#回归数据分析&#34;&gt;#&lt;/a&gt; 回归数据分析&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211211144053.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;假设检验&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#假设检验&#34;&gt;#&lt;/a&gt; 假设检验&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/16/dajXyExDBHbZA56.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5C%E4%BD%A0%E7%8C%9C%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211116103231625.png&#34; alt=&#34;image-20211116103231625&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;ols拟合&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ols拟合&#34;&gt;#&lt;/a&gt; OLS 拟合&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/16/Em53r1qtTp4ZoRa.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;拟合优度检验&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#拟合优度检验&#34;&gt;#&lt;/a&gt; 拟合优度检验&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/16/nOJXp7yvcZuBdjI.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;相关性分析&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#相关性分析&#34;&gt;#&lt;/a&gt; 相关性分析&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/16/k9HBYeK1CfnsZqV.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/16/xgms2JN6ZpIqRbY.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;检查是否为遗漏变量&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#检查是否为遗漏变量&#34;&gt;#&lt;/a&gt; 检查是否为遗漏变量&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/16/TxFZnfXI32hRy48.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;方差膨胀因子vif&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#方差膨胀因子vif&#34;&gt;#&lt;/a&gt; 方差膨胀因子 VIF&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/16/LCfMNrSpJEuVYXw.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;white检验&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#white检验&#34;&gt;#&lt;/a&gt; White 检验&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/16/fceaKF8BdrXqW4Y.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/16/YtxPiSzeyhJWmD5.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;white调整法处理异方差&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#white调整法处理异方差&#34;&gt;#&lt;/a&gt; White 调整法处理异方差&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/16/B5T6Oi9MIEZfUrt.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;取对数处理异方差&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#取对数处理异方差&#34;&gt;#&lt;/a&gt; 取对数处理异方差&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/16/E5FdY8JAINBSfxb.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/16/zvp8EIU6DcdXCNi.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;建立logit模型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#建立logit模型&#34;&gt;#&lt;/a&gt; 建立 Logit 模型&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/16/RAVhzSIUaGQb17x.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://nc3021.github.io/2021/11/26/front-end/CSS/</guid>
            <title>CSS学习</title>
            <link>https://nc3021.github.io/2021/11/26/front-end/CSS/</link>
            <category term="前端" scheme="https://nc3021.github.io/categories/front-end/" />
            <category term="前端" scheme="https://nc3021.github.io/tags/%E5%89%8D%E7%AB%AF/" />
            <pubDate>Fri, 26 Nov 2021 16:01:56 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;css学习&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#css学习&#34;&gt;#&lt;/a&gt; CSS 学习&lt;/h1&gt;
&lt;h2 id=&#34;css选择器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#css选择器&#34;&gt;#&lt;/a&gt; CSS 选择器&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20220109194817.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;标签选择器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#标签选择器&#34;&gt;#&lt;/a&gt; 标签选择器：&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20220109194849.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;style&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token style&#34;&gt;&lt;span class=&#34;token language-css&#34;&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token selector&#34;&gt;P&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token property&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;green&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;style&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;类选择器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#类选择器&#34;&gt;#&lt;/a&gt; 类选择器 .&lt;/h3&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;red&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    红色字体&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;style&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token style&#34;&gt;&lt;span class=&#34;token language-css&#34;&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token selector&#34;&gt;.red&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token property&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;red&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;style&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;id选择器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#id选择器&#34;&gt;#&lt;/a&gt; id 选择器 &lt;code&gt;#&lt;/code&gt;&lt;/h3&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;red&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    红色字体&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;style&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token style&#34;&gt;&lt;span class=&#34;token language-css&#34;&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token selector&#34;&gt;#red&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token property&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;red&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;style&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; /*只能调用一次*/&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;快捷键： &lt;code&gt;div&lt;/code&gt; + &lt;code&gt;#&lt;/code&gt; + &lt;code&gt;xxx&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;通配符选择器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#通配符选择器&#34;&gt;#&lt;/a&gt; 通配符选择器 *&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20220109194910.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;属性选择器e&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#属性选择器e&#34;&gt;#&lt;/a&gt; 属性选择器 E []&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;拥有某一个属性 [att];&lt;/p&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;figcaption data-lang=&#34;CSS&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;a[id]&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token property&#34;&gt;background&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;blue&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;属性等于某个值 [att=val];&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[attr*=val]: 属性值包含某一个值 val;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[attr^=val]: 属性值以 val 开头；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[attr$=val]: 属性值以 val 结尾；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[attr|=val]: 属性值等于 val 或者以 val 开头后面紧跟连接符 -;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[attr~=val]: 属性值包含 val, 如果有其他值必须以空格和 val 分割；&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;css字体属性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#css字体属性&#34;&gt;#&lt;/a&gt; CSS 字体属性&lt;/h2&gt;
&lt;h3 id=&#34;字体系列-font-family&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#字体系列-font-family&#34;&gt;#&lt;/a&gt; 字体系列 font-family&lt;/h3&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   p&amp;#123;font-family:&#34;Microsoft Yahei&#34;,Arial;&amp;#125;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;字体大小-font-size&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#字体大小-font-size&#34;&gt;#&lt;/a&gt; 字体大小 font-size&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20220109194938.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;字体粗细-font-weight&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#字体粗细-font-weight&#34;&gt;#&lt;/a&gt; 字体粗细 font-weight&lt;/h3&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;style&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token style&#34;&gt;&lt;span class=&#34;token language-css&#34;&gt;&lt;span class=&#34;token selector&#34;&gt;.bold&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;font-weight&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;700&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;/*font-weight:bold   两者等效 */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;style&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20220109194955.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;文字样式-font-style&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#文字样式-font-style&#34;&gt;#&lt;/a&gt; 文字样式 font-style&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20220109195012.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;字体复合属性-font&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#字体复合属性-font&#34;&gt;#&lt;/a&gt; 字体复合属性 font&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20220109195025.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;css文本属性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#css文本属性&#34;&gt;#&lt;/a&gt; CSS 文本属性&lt;/h2&gt;
&lt;h3 id=&#34;文本颜色-color&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#文本颜色-color&#34;&gt;#&lt;/a&gt; 文本颜色 color&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/09/6sBzWlIGDJwU81t.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;文本对齐-text-align&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#文本对齐-text-align&#34;&gt;#&lt;/a&gt; 文本对齐 text-align&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/09/tngFhDlwQo3buix.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;词距与字距&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#词距与字距&#34;&gt;#&lt;/a&gt; 词距与字距&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;letter-spacing&lt;/code&gt; ：定义字距&lt;/p&gt;
&lt;p&gt;&lt;code&gt;word-spacing&lt;/code&gt; ：定义词距&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;.lspacing &amp;#123;lett-spacing:1em;&amp;#125;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;.wspacing &amp;#123;word-spacing:1em;&amp;#125;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;装饰文本-text-decoration&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#装饰文本-text-decoration&#34;&gt;#&lt;/a&gt; 装饰文本 text-decoration&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/09/bfPesMgSwWER9VK.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;文本缩进-text-indent&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#文本缩进-text-indent&#34;&gt;#&lt;/a&gt; 文本缩进 text-indent&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/09/kx9ZMcnOILbN2js.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;行间距-line-height&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#行间距-line-height&#34;&gt;#&lt;/a&gt; 行间距 line-height&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/09/PqYlACidGrxLNok.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;文本阴影-text-shadow&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#文本阴影-text-shadow&#34;&gt;#&lt;/a&gt; 文本阴影 text-shadow&lt;/h3&gt;
&lt;p&gt;基本语法（CSS3）：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;text-shadow:none|&amp;lt;shadow&amp;gt;[,&amp;lt;shadow&amp;gt;]*
&amp;lt;shadow&amp;gt;=&amp;lt;length&amp;gt;&amp;#123;2,3&amp;#125;&amp;amp;&amp;amp;&amp;lt;color&amp;gt;?
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;text-shadow 属性值的初始值位无；&lt;/p&gt;
&lt;p&gt;第一个长度值用来设置对象的阴影水平偏移值（正值为向右）；&lt;/p&gt;
&lt;p&gt;第二个长度值用来设置对象的阴影垂直偏移值（正值为向下）；&lt;/p&gt;
&lt;p&gt;第三个长度值用来设置对象的阴影模糊值（不允许负值，可以为空）；&lt;/p&gt;
&lt;p&gt;color 值用于设置阴影的颜色（可以为空，默认值为字体的 color 属性）；&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;作用：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;通过阴影把文本颜色与背景色分开来，让字体更清晰；&lt;/li&gt;
&lt;li&gt;定义多色阴影实现燃烧的文字特效；&lt;/li&gt;
&lt;li&gt;定义立体文字；&lt;/li&gt;
&lt;li&gt;定义描边文字；&lt;/li&gt;
&lt;li&gt;定义外发光文字；&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;溢出文本-text-overflow&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#溢出文本-text-overflow&#34;&gt;#&lt;/a&gt; 溢出文本 text-overflow&lt;/h3&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;text-overflow:clip|ellipsis|ellipsis-word&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;clip&lt;/code&gt;  表示简单的裁切而不显示省略标记；&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ellipsis&lt;/code&gt;  表示当文本溢出时显示省略标记（&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo&gt;…&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;\ldots&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.12em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;minner&#34;&gt;…&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;)，省略标记插入的位置是最后一个字符；&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ellipsis-word&lt;/code&gt;  表示当文本溢出时显示省略标记（&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo&gt;…&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;\ldots&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.12em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;minner&#34;&gt;…&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;)，省略标记插入的位置是最后一个词；&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;要实现产生省略号的效果，还需要定义：强制文本在一行内显示 &lt;code&gt;white-space:nowrap&lt;/code&gt;  和溢出内容隐藏 &lt;code&gt;overflow:hidden&lt;/code&gt; 。&lt;/p&gt;
&lt;h2 id=&#34;css引入方式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#css引入方式&#34;&gt;#&lt;/a&gt; CSS 引入方式&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/09/CtLgyoRjfmwal39.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;外部样式表分为链接式与导入式：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;链接式&lt;/code&gt; ：通过 &lt;code&gt;link&lt;/code&gt;  标签将外部的样式表文件链接到 html 文档中，是目前运用最多也是最实用的方式。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;导入式&lt;/code&gt; ：通过使用 &lt;code&gt;@import&lt;/code&gt;  导入外部样式表。&lt;/p&gt;
&lt;p&gt;两者比较：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;link&lt;/code&gt;  属于 HTML 标签，而 &lt;code&gt;@import&lt;/code&gt;  是由 CSS 提供的；&lt;/li&gt;
&lt;li&gt;页面被加载时，link 会同时被加载，而 &lt;code&gt;@import&lt;/code&gt;  引用的 CSS 文件会等到页面被加载完后再加载；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;@import&lt;/code&gt;  只有在 IE5 以上才能识别，而 &lt;code&gt;link&lt;/code&gt;  是 HTML 标签，无兼容问题；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;link&lt;/code&gt;  方式的样式权重高于 &lt;code&gt;@import&lt;/code&gt;  的权重；&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;css-长度单位&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#css-长度单位&#34;&gt;#&lt;/a&gt; CSS 长度单位&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;px&lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	px 像素（Pixel）。相对长度单位。像素 px 是相对于显示器屏幕分辨率而言的。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211208153905.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;rpx&lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	rpx 其实是微信对于 rem 的一种应用的规定，或者说一种设计的方案，官方上规定屏幕宽度为 20rem，规定屏幕宽为 750rpx，所以在微信小程序中 1rem=750/20rpx。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;em&lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	em 是相对长度单位。相对于当前对象内文本的字体尺寸。如当前对行内文本的字体尺寸未被人为设置，则相对于浏览器的默认字体尺寸。&lt;/p&gt;
&lt;p&gt;em 的特点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;em 的值并不是固定的；&lt;/li&gt;
&lt;li&gt;em 会继承父级元素的字体大小。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;rem&lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	rem 是相对于根元素 &lt;code&gt;html&lt;/code&gt; ，也就是说，我们只需要在根元素确定一个参考值，其他子元素的值可以根据这个参考值来转换。这与 &lt;code&gt;em&lt;/code&gt;  不同的是：这是一开始固定的，不会受父组件改变。&lt;/p&gt;
&lt;h2 id=&#34;emment语法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#emment语法&#34;&gt;#&lt;/a&gt; Emment 语法&lt;/h2&gt;
&lt;h3 id=&#34;快速生成html&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#快速生成html&#34;&gt;#&lt;/a&gt; 快速生成 HTML&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20220109195650.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;快速生成css&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#快速生成css&#34;&gt;#&lt;/a&gt; 快速生成 CSS&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/10/gfREu5e4l2bxYSW.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;复合选择器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#复合选择器&#34;&gt;#&lt;/a&gt; 复合选择器&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/10/YRMbUhiynS3B4f1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;后代选择器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#后代选择器&#34;&gt;#&lt;/a&gt; 后代选择器&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/10/WrLx3O9uNSjcfFq.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;子选择器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#子选择器&#34;&gt;#&lt;/a&gt; 子选择器&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/10/mXuo4xSEfhONZen.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;（亲儿子包含所有儿子）&lt;/p&gt;
&lt;h3 id=&#34;并集选择器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#并集选择器&#34;&gt;#&lt;/a&gt; 并集选择器&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/10/V6AoCtNfEKgmD3v.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;伪类选择器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#伪类选择器&#34;&gt;#&lt;/a&gt; 伪类选择器&lt;/h3&gt;
&lt;h4 id=&#34;链接伪类选择器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#链接伪类选择器&#34;&gt;#&lt;/a&gt; 链接伪类选择器&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/10/RlmMSI1ivKQG2Ta.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;需要按照 LVHA 顺序声明&lt;/p&gt;
&lt;h4 id=&#34;结构伪类选择器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#结构伪类选择器&#34;&gt;#&lt;/a&gt; 结构伪类选择器&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;:first-child: 选取属于其父元素的首个子元素的指定选择器。&lt;/li&gt;
&lt;li&gt;:last-child: 选取属于其父元素的最后一个子元素的指定选择器。&lt;/li&gt;
&lt;li&gt;:nth-child (n) 匹配属于其父元素的第 N 个子元素，无论元素的类型，n 从 0 开始。&lt;/li&gt;
&lt;li&gt;:nth-last-child (n): 选择器匹配属于其元素的第 N 个子元素的每个元素，不论元素的类型，从最后一个子元素开始计数。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;** 注释：**n 可以是数字、关键词或公式。（如 even 偶数、odd 奇数）&lt;/p&gt;
&lt;h4 id=&#34;focus伪类选择器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#focus伪类选择器&#34;&gt;#&lt;/a&gt; focus 伪类选择器&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/10/os27TGQ3tBkd1zj.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h4 id=&#34;target目标伪类选择器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#target目标伪类选择器&#34;&gt;#&lt;/a&gt; target 目标伪类选择器&lt;/h4&gt;
&lt;p&gt;:target 目标伪类选择器：选择器可用于选取当前活动的目标元素。&lt;/p&gt;
&lt;h4 id=&#34;状态伪类选择器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#状态伪类选择器&#34;&gt;#&lt;/a&gt; 状态伪类选择器&lt;/h4&gt;
&lt;p&gt;​	主要用于表单设计。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;:enabled&lt;/code&gt;  匹配指定范围内所有可用的 UI 元素；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:disabled&lt;/code&gt;  匹配指定范围内所有不可用 UI 元素；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:checked&lt;/code&gt;  匹配指定范围内所有可用 UI 元素；&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;元素显示模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#元素显示模式&#34;&gt;#&lt;/a&gt; 元素显示模式&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/10/eQNda9g5sXPzhRY.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/10/mYajh1rD26FvQiO.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;显示模式的转换&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#显示模式的转换&#34;&gt;#&lt;/a&gt; 显示模式的转换&lt;/h3&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;style&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token style&#34;&gt;&lt;span class=&#34;token language-css&#34;&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token selector&#34;&gt;div&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token property&#34;&gt;display&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;inline&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token selector&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token property&#34;&gt;display&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;block&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token selector&#34;&gt;span&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token property&#34;&gt;display&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;inline-block&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;style&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;css图片&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#css图片&#34;&gt;#&lt;/a&gt; CSS 图片&lt;/h2&gt;
&lt;h3 id=&#34;图片大小&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#图片大小&#34;&gt;#&lt;/a&gt; 图片大小&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;height&lt;/code&gt; &amp;amp; &lt;code&gt;weight&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;属性值为具体大小或百分比值；&lt;/p&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;figcaption data-lang=&#34;CSS&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;img&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;50%&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;100px&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;50%&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;100px&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;图片边框&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#图片边框&#34;&gt;#&lt;/a&gt; 图片边框&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;border&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;figcaption data-lang=&#34;CSS&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;img&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;border&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;none&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token selector&#34;&gt;//清除边框&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;img&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;border&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;solid 20px red&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;//边框样式，边框宽度，边框颜色（可以任意顺序）&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;code&gt;border-style&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;figcaption data-lang=&#34;CSS&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;.dotted&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;border-style&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;dotted&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; //点线式&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;.dashed&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;border-style&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;dashed&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;//虚线&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;//除此之外，还有实线（soild）、双线（double）、立体凹槽（groove）、立体凸槽（ridge）、立体凹边（inset）、立体凸边（outset）&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;code&gt;border-color&lt;/code&gt; ：边框颜色&lt;/p&gt;
&lt;p&gt;&lt;code&gt;border-width&lt;/code&gt; ：边框宽度&lt;/p&gt;
&lt;p&gt;单独定义某边框样式： &lt;code&gt;border-top-style&lt;/code&gt; , &lt;code&gt;border-bottom-style&lt;/code&gt; , &lt;code&gt;border-right-style&lt;/code&gt; , &lt;code&gt;border-left-style&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;同理可得：单独定义某边框的宽度和颜色。&lt;/p&gt;
&lt;h3 id=&#34;图片不透明度&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#图片不透明度&#34;&gt;#&lt;/a&gt; 图片不透明度&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;opacity&lt;/code&gt; ：图像不透明度&lt;/p&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;figcaption data-lang=&#34;CSS&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;img&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;opacity&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;0.3&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;图片圆角&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#图片圆角&#34;&gt;#&lt;/a&gt; 图片圆角&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;border-radius&lt;/code&gt; ：图片圆角&lt;/p&gt;
&lt;p&gt;​	属性值可包含两个参数值：第一个值表示圆角的水平半径，第二个值表示圆角的垂直半径，如果仅包含一个值，则第 2 个值与第一个值相同。&lt;/p&gt;
&lt;h3 id=&#34;图片阴影&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#图片阴影&#34;&gt;#&lt;/a&gt; 图片阴影&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;box-shadow&lt;/code&gt; ：图像阴影&lt;/p&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;figcaption data-lang=&#34;CSS&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;img&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;box-shaow&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;inset&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; 8px 8px 8px black&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;blockquote&gt;
&lt;p&gt;inset 表示设置为内阴影，而默认值为外阴影。&lt;/p&gt;
&lt;p&gt;第一个长度值表示阴影水平偏移；&lt;/p&gt;
&lt;p&gt;第二个长度值表示阴影垂直偏移；&lt;/p&gt;
&lt;p&gt;第三个长度值表示阴影大小；&lt;/p&gt;
&lt;p&gt;第四个表示阴影颜色；&lt;/p&gt;
&lt;p&gt;可以叠加多个阴影特效实现渐变阴影；&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;css背景&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#css背景&#34;&gt;#&lt;/a&gt; CSS 背景&lt;/h2&gt;
&lt;h3 id=&#34;背景颜色&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#背景颜色&#34;&gt;#&lt;/a&gt; 背景颜色&lt;/h3&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;figcaption data-lang=&#34;CSS&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;div&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token property&#34;&gt;background-color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; #FF6700&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token property&#34;&gt;opacity&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 0.5&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;div&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token property&#34;&gt;backfround&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;rgba&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;0&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;128&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;0&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;.3&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/10/yOZ48ac19ozg6BR.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;背景图片&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#背景图片&#34;&gt;#&lt;/a&gt; 背景图片&lt;/h3&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;figcaption data-lang=&#34;CSS&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;background-image：none|&lt;span class=&#34;token url&#34;&gt;&lt;span class=&#34;token function&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;url&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;优点：便于控制位置&lt;/p&gt;
&lt;p&gt;url：绝对或相对地址&lt;/p&gt;
&lt;h3 id=&#34;背景平铺&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#背景平铺&#34;&gt;#&lt;/a&gt; 背景平铺&lt;/h3&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;figcaption data-lang=&#34;CSS&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;background-repeat&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; repeat|no-repeat|repeat-x|repeat-y|round|space&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;repeat&lt;/code&gt; ：背景图片在横向和纵向平铺；&lt;/p&gt;
&lt;p&gt;&lt;code&gt;repeat-x&lt;/code&gt; ：在横向上平铺；&lt;/p&gt;
&lt;p&gt;&lt;code&gt;repeat-y&lt;/code&gt; ：在纵向上平铺；&lt;/p&gt;
&lt;p&gt;&lt;code&gt;no-repeat&lt;/code&gt; ：不平铺；&lt;/p&gt;
&lt;p&gt;&lt;code&gt;round&lt;/code&gt; ：图片自动缩放直到适应且充满整个容器（CSS3）；&lt;/p&gt;
&lt;p&gt;&lt;code&gt;space&lt;/code&gt; ：图片以相同的间距平铺且充满整个容器（CSS3）；&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;背景图片位置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#背景图片位置&#34;&gt;#&lt;/a&gt; 背景图片位置&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/10/xO6JXvYrpZniFdq.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/10/xUNITDa1CGoVHR5.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;背景图像固定&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#背景图像固定&#34;&gt;#&lt;/a&gt; 背景图像固定&lt;/h3&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;figcaption data-lang=&#34;CSS&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;background-attachment：scroll|fixed|local&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;fixed&lt;/code&gt; ：图像相对于浏览器固定；&lt;/p&gt;
&lt;p&gt;&lt;code&gt;scroll&lt;/code&gt; ：图像相对于元素固定；&lt;/p&gt;
&lt;p&gt;&lt;code&gt;local&lt;/code&gt; ：图像相对于元素内容固定（CSS3）；&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;背景符合写法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#背景符合写法&#34;&gt;#&lt;/a&gt; 背景符合写法&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/10/GIhOCQtszncoPpb.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CSS3 新增：&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;定义坐标&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#定义坐标&#34;&gt;#&lt;/a&gt; 定义坐标&lt;/h3&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;figcaption data-lang=&#34;CSS&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;background-origin&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;border-box|paddin-box|content-box&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;border-box&lt;/code&gt; ：从边框区域开始显示背景；&lt;/p&gt;
&lt;p&gt;&lt;code&gt;padding-box&lt;/code&gt; ：从补白区域开始显示背景；&lt;/p&gt;
&lt;p&gt;&lt;code&gt;content-box&lt;/code&gt; ：从内容区域开始显示背景；&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;定义裁剪区域&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#定义裁剪区域&#34;&gt;#&lt;/a&gt; 定义裁剪区域&lt;/h3&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;figcaption data-lang=&#34;CSS&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;background-clip&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;border-box|paddin-box|content-box|text&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;border-box&lt;/code&gt; ：从边框区域开始向外裁剪背景；&lt;/p&gt;
&lt;p&gt;&lt;code&gt;padding-box&lt;/code&gt; ：从补白区域开始向外裁剪背景；&lt;/p&gt;
&lt;p&gt;&lt;code&gt;content-box&lt;/code&gt; ：从内容区域开始向外裁剪背景；&lt;/p&gt;
&lt;p&gt;&lt;code&gt;text&lt;/code&gt; ：从前景内容（如文字）区域开始向外裁剪背景；&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;定义大小&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#定义大小&#34;&gt;#&lt;/a&gt; 定义大小&lt;/h3&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;figcaption data-lang=&#34;CSS&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;background-size&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;100px 100px|100px|0.5 0.5|0.5|cover|contain&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;blockquote&gt;
&lt;p&gt;可以设置一个或两个长度值或 0% 到 100% 之间的值，第一个为 width，第二个为 height，如果只设置为一个值，则第二个值为 auto；&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cover&lt;/code&gt; ：保持图像本身宽高比例，将图片缩放到正好完全覆盖所定义的区域；&lt;/p&gt;
&lt;p&gt;&lt;code&gt;contain&lt;/code&gt; ：保持图像本身宽高比例，将图片缩放到宽度或高度正好适应所定义的区域；&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;渐变背景未完成&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#渐变背景未完成&#34;&gt;#&lt;/a&gt; 渐变背景（未完成）&lt;/h3&gt;
&lt;h2 id=&#34;css三大特性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#css三大特性&#34;&gt;#&lt;/a&gt; CSS 三大特性&lt;/h2&gt;
&lt;h3 id=&#34;层叠性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#层叠性&#34;&gt;#&lt;/a&gt; 层叠性&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/10/AhKFeMiUnm7O9vx.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;​	按照 CSS 的起源可以将网页定义的样式分为四种：HTML、作者、用户、浏览器；原则上讲：作者定义的样式优先于用户设计的样式优先于浏览器的默认样式优先于 HTML 的默认样式。&lt;/p&gt;
&lt;h3 id=&#34;继承性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#继承性&#34;&gt;#&lt;/a&gt; 继承性&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/10/AI7bwF6HEpzNovD.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;优先级&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#优先级&#34;&gt;#&lt;/a&gt; 优先级&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/10/fo56NnKBygda2Dr.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/10/t2dvcBOZaoTAuIq.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;盒子模型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#盒子模型&#34;&gt;#&lt;/a&gt; 盒子模型&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/12/pvFML79hSiORPaK.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;边框-border&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#边框-border&#34;&gt;#&lt;/a&gt; 边框 border&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20220109201825.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;边框各样式示例：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/12/btNeEgIhox5zPaV.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20220109202037.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;边框复合写法：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20220109202045.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/12/nvgqYAr3NTQyU8t.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;内边距-padding&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#内边距-padding&#34;&gt;#&lt;/a&gt; 内边距 padding&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/12/9guDw1qLWtPkmZU.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;一旦设定了 height 或 width,padding 就会使其比原有盒子更大（margin 不会）；&lt;/p&gt;
&lt;h3 id=&#34;外边距-margin&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#外边距-margin&#34;&gt;#&lt;/a&gt; 外边距 margin&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/12/n14dpqYOjox6EUD.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;块级元素水平居中：&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;margin:0 auto;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;行内元素或行内块元素水平居中：&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;text-align:center;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;外边距合并：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/12/a3IyTLZ5dM4VgpU.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20220109202130.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;清除浏览器自带的标签内外边距：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/12/NJk7gfDRZzLOmvM.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;圆角边框&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#圆角边框&#34;&gt;#&lt;/a&gt; 圆角边框&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20220109202302.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;属性为一个值则对应四角，两个值则对应（左上右下，右上左下），四个值则对应（左上，右上，右下，左下）；&lt;/p&gt;
&lt;p&gt;分开写法：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/12/Sbe8CYQNZEA5q9p.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;圆形边框：&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;border-radius:50%;(在正方形盒子里)&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;盒子阴影-box-shadow&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#盒子阴影-box-shadow&#34;&gt;#&lt;/a&gt; 盒子阴影 box-shadow&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/12/xe1BifprjPugUL8.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;figcaption data-lang=&#34;CSS&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;div:hover&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; 	&lt;span class=&#34;token property&#34;&gt;box-shadow&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;10px 10px 10px -4px &lt;span class=&#34;token function&#34;&gt;rgba&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;0&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;0&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;0&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;.3&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;文字阴影-text-shadow&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#文字阴影-text-shadow&#34;&gt;#&lt;/a&gt; 文字阴影 text-shadow&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/12/un573tQZ2xj4oqO.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;figcaption data-lang=&#34;CSS&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;div:hover&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	 &lt;span class=&#34;token property&#34;&gt;text-shadow&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;5px 5px 6px &lt;span class=&#34;token function&#34;&gt;rgba&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;0&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;0&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;0&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;.3&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;浮动&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#浮动&#34;&gt;#&lt;/a&gt; 浮动&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/12/kGd8Ca7cj6USLi3.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/12/7sNLv3CAmVhYZcH.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/12/AXyZ5g6brx4oWNl.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;clear&lt;/code&gt; ：清除浮动&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	使与浮动相邻的元素在必要的情况下换行显示。即不允许当前元素与浮动元素并列显示，如果左右两侧存在浮动元素，则当前元素把自己清除到下一行显示。&lt;/p&gt;
&lt;p&gt;属性值：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;left&lt;/code&gt; ：清除左边浮动；&lt;/p&gt;
&lt;p&gt;&lt;code&gt;right&lt;/code&gt; ：清除右边浮动；&lt;/p&gt;
&lt;p&gt;&lt;code&gt;both&lt;/code&gt; ：清除左右两边的浮动；&lt;/p&gt;
&lt;p&gt;&lt;code&gt;none&lt;/code&gt; ：默认值，允许两边存在浮动；&lt;/p&gt;
&lt;h2 id=&#34;定位显示&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#定位显示&#34;&gt;#&lt;/a&gt; 定位显示&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;position&lt;/code&gt; ：定义元素的定位方式&lt;/p&gt;
&lt;p&gt;static：默认值，表示为流动模型；&lt;/p&gt;
&lt;p&gt;absolute：绝对定位；&lt;/p&gt;
&lt;p&gt;fixed：固定定位；&lt;/p&gt;
&lt;p&gt;relative：相对定位；&lt;/p&gt;
&lt;p&gt;&lt;code&gt;z_index&lt;/code&gt; ：定义元素的层叠等级&lt;/p&gt;
&lt;p&gt;​	其属性值默认为 0，属性值越大层叠等级越高，如果属性值小于 0，则元素将隐藏在文档流之下。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;布局经验：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;需要空隙时，优先定义浮动元素的 margin or padding，而不要定义流动元素的 margin or padding；&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;移动端适配&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#移动端适配&#34;&gt;#&lt;/a&gt; 移动端适配&lt;/h2&gt;
&lt;h3 id=&#34;基本概念&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基本概念&#34;&gt;#&lt;/a&gt; 基本概念&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;屏幕尺寸:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	以 iPhone6 为例，其屏幕尺寸为 4.7 英寸，指的是屏幕对角线的长度为 4.7 英寸，1in = 2.54cm。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;屏幕分辨率&lt;/strong&gt;（物理分辨率、设备分辨率）:&lt;/p&gt;
&lt;p&gt;​	以 iPhone6 为例，其屏幕分辨率为 750 x 1334，指的是屏幕水平有 750 个像素点，垂直有 1334 个像素点。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;像素密度&lt;/strong&gt;（Pixels Per Inch）&lt;/p&gt;
&lt;p&gt;​	以 iPhone6 为例，其屏幕像素密度为 326ppi，指的是每英寸有 326 个像素点。&lt;/p&gt;
&lt;p&gt;计算公式如下：&lt;br /&gt;
&lt;img data-src=&#34;D:%5CMarkdown%5Clocal_image%5C5590bdbfe94c47a5b2aac87ac0a7b5a7tplv-k3u1fbpfcp-zoom-in-crop-mark3024000.webp&#34; alt=&#34;image.png&#34; /&gt;&lt;br /&gt;
 注意，像素密度指的并不是每平方英寸中包含的像素点数量，而是屏幕水平或垂直的一条直线上每英寸包含的像素点数量。例如，iPhone6 屏幕宽度为 2.3 英寸，高度为 4.1 英寸，其屏幕像素密度就等于 750 / 2.3 = 326 或 1334 / 4.1 = 326。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;显示分辨率&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;​	通常，PC 的显示器分辨率是可以设置的，显示分辨率就是指系统或用户设置的分辨率。用户可以通过修改显示分辨率，修改系统字体大小。通常，显示分辨率小于等于设备分辨率。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;设备独立像素&lt;/strong&gt;（逻辑像素）:&lt;/p&gt;
&lt;p&gt;​	设备独立像素（又称设备无关像素 Device Independent Pixels 、密度独立性像素 Density Independent Pixels，简称 DIP 或 DP），是一种物理测量单位，基于计算机控制的坐标系统和抽象像素（虚拟像素），由底层系统的程序使用，转换为物理像素的应用（from 百度百科）。设备独立像素可以简单认为是计算机坐标系统中的一个点。&lt;br /&gt;
​	典型的用途是允许移动设备软件将信息显示和用户交互扩展到不同的屏幕尺寸。允许应用程序以抽象像素为单位进行测量，而底层图形系统将应用程序的抽象像素测量值转换为适合于特定设备的物理像素。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;逻辑分辨率&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;​	逻辑分辨率用屏幕的宽 * 高来表示（单位：设备独立像素）。&lt;/p&gt;
&lt;p&gt;​	通过  &lt;code&gt;screen.width/height&lt;/code&gt;  得到的数值就是整个屏幕（不仅仅是浏览器的区域）的宽度和高度（单位：设备独立像素）。在 PC 中，这个数值就是系统设定的显示分辨率的大小。这个数值不随页面缩放、浏览器窗口大小而改变。对于移动端，这个数值可以在 Chrome 开发者工具中，打开移动端调试，页面顶部显示的就是逻辑分辨率。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;设备像素比&lt;/strong&gt;（DPR）:&lt;/p&gt;
&lt;p&gt;​	设备像素比就是指设备物理像素和设备独立像素之间的比值。在 JS 中可以通过 window.devicePixelRatio 获取。可以简单理解为：硬件中一个点的大小和系统中一个点的大小的比值。对于某一个固定的设备，这个值是固定不变的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;视口（Viewport）&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;布局视口&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;D:%5CMarkdown%5Clocal_image%5C26d80750d5084c7494099d2bf53692e1tplv-k3u1fbpfcp-zoom-in-crop-mark3024000.webp&#34; alt=&#34;image.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;​	布局视口是网页布局的基准窗口。在 PC 上，布局视口就等于当前浏览器的窗口大小；在移动端，布局视口被赋予一个默认值，这个值通常比该设备的逻辑分辨率大很多，这保证 PC 的网页可以在手机浏览器上呈现，但这样网页元素就会显得非常小，用户可以手动对网页进行放大查看。&lt;/p&gt;
&lt;p&gt;​	可以通过调用  &lt;code&gt;document.documentElement.clientWidth/clientHeight&lt;/code&gt;  来获取布局视口大小。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;视觉视口&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;D:%5CMarkdown%5Clocal_image%5Cb272f80940ef48fdaf91d8223521b6e4tplv-k3u1fbpfcp-zoom-in-crop-mark3024000.webp&#34; alt=&#34;image.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;​	视觉视口指用户通过屏幕真实看到的区域。视觉视口默认等于当前浏览器的窗口大小（包括滚动条宽度）。可以通过调用  &lt;code&gt;window.innerWidth/innerHeight&lt;/code&gt;  来获取视觉视口大小。&lt;/p&gt;
&lt;p&gt;​	当用户对浏览器进行缩放时，不会改变布局视口的大小，所以页面布局是不变的，但是缩放会改变视觉视口的大小。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;meta viewport&lt;/strong&gt; ：&lt;/p&gt;
&lt;p&gt;我们可以借助 元素的 viewport 属性来帮助我们设置视口、缩放等，从而让移动端得到更好的展示效果。&lt;/p&gt;
&lt;p&gt;viewport 有以下字段可配置：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;width&lt;/th&gt;
&lt;th&gt;设置布局视口的宽度，为一个正整数，或字符串 &amp;quot;width-device&amp;quot;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;initial-scale&lt;/td&gt;
&lt;td&gt;设置页面的初始缩放值，为一个数字，可以带小数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;minimum-scale&lt;/td&gt;
&lt;td&gt;允许用户的最小缩放值，为一个数字，可以带小数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;maximum-scale&lt;/td&gt;
&lt;td&gt;允许用户的最大缩放值，为一个数字，可以带小数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;height&lt;/td&gt;
&lt;td&gt;设置布局视口的高度，这个属性对我们并不重要，很少使用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;user-scalable&lt;/td&gt;
&lt;td&gt;是否允许用户进行缩放，值为 &amp;quot;no&amp;quot; 或 &amp;quot;yes&amp;quot;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;meta&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;viewport&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;width=device-width, initial-scale=1.0&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&amp;lt;meta name=&#34;viewport&#34; content=&#34;width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;适配方案&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#适配方案&#34;&gt;#&lt;/a&gt; 适配方案&lt;/h3&gt;
&lt;h4 id=&#34;rem&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#rem&#34;&gt;#&lt;/a&gt; rem&lt;/h4&gt;
&lt;p&gt;我们可以采用 rem 为单位设置元素大小。对于不同屏幕，我们只需要动态修改根元素字体大小，元素大小就会同比例改变，从而做到页面的自动适配效果。&lt;/p&gt;
&lt;p&gt;工作步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;meta 标签设置 viewport 宽度为屏幕宽度；&lt;/li&gt;
&lt;li&gt;根据不同屏幕修改根元素 font-size 大小，一般设置为屏幕宽度的十分之一（可引入 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9saW5rLmp1ZWppbi5jbj90YXJnZXQ9aHR0cHMlM0ElMkYlMkZnaXRodWIuY29tJTJGYW1mZSUyRmxpYi1mbGV4aWJsZQ==&#34;&gt;lib-flexible&lt;/span&gt; 库，或者自己写相应逻辑）；&lt;/li&gt;
&lt;li&gt;开发环境配置 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9saW5rLmp1ZWppbi5jbj90YXJnZXQ9aHR0cHMlM0ElMkYlMkZ3d3cubnBtanMuY29tJTJGcGFja2FnZSUyRnBvc3Rjc3MtcHgycmVt&#34;&gt;postcss-px2rem&lt;/span&gt; 或者类似插件；&lt;/li&gt;
&lt;li&gt;根据设计稿写样式，元素宽高直接取设计稿宽高即可，单位为 px，插件会将其转换为 rem；&lt;/li&gt;
&lt;li&gt;段落文本也按照设计稿写，单位为 px，不需要转换为 rem；&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;viewport&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#viewport&#34;&gt;#&lt;/a&gt; Viewport&lt;/h4&gt;
&lt;p&gt;​	CSS Viewport units （视口单位）正是一种相对于屏幕宽高的一种长度单位，并且兼容性越来越好。视口单位有：vw、vh、vmin 和 vmax。vw 单位表示根元素宽度的百分比，1vw 等于视口宽度的 1%。&lt;/p&gt;
&lt;p&gt;vw 适配方案的流程：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;meta 标签设置 viewport 宽度为屏幕宽度；&lt;/li&gt;
&lt;li&gt;开发环境配置 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9saW5rLmp1ZWppbi5jbj90YXJnZXQ9aHR0cHMlM0ElMkYlMkZ3d3cubnBtanMuY29tJTJGcGFja2FnZSUyRnBvc3Rjc3MtcHgtdG8tdmlld3BvcnQ=&#34;&gt;postcss-px-to-viewport&lt;/span&gt; 或者类似插件；&lt;/li&gt;
&lt;li&gt;根据设计稿写样式，元素宽高直接取设计稿宽高即可，单位为 px，插件会将其转换为 vw；&lt;/li&gt;
&lt;li&gt;段落文本也按照设计稿写，单位为 px，不需要转换为 vw；&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;多列布局&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#多列布局&#34;&gt;#&lt;/a&gt; 多列布局&lt;/h2&gt;
&lt;h2 id=&#34;flex布局&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#flex布局&#34;&gt;#&lt;/a&gt; Flex 布局&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Flex 容器&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;指定一个容器为 flex 布局：&lt;/p&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;figcaption data-lang=&#34;CSS&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;.container&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;display&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; flex | inline-flex&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;      //可以有两种取值&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;//如果你使用块元素如 div，你就可以使用 flex，而如果你使用行内元素，你可以使用 inline-flex。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;blockquote&gt;
&lt;p&gt;备注：&lt;strong&gt;当时设置 flex 布局之后，子元素的 float、clear、vertical-align 的属性将会失效。&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;容器属性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#容器属性&#34;&gt;#&lt;/a&gt; 容器属性&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#direction&#34;&gt;flex-direction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#wrap&#34;&gt;flex-wrap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#content&#34;&gt;justify-content&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#items&#34;&gt;align-items&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#content&#34;&gt;align-content&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span id=&#39;direction&#39;&gt;&lt;strong&gt;flex-direction: 决定主轴的方向 (即项目的排列方向)&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;figcaption data-lang=&#34;CSS&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;.container&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;flex-direction&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; row | row-reverse | column | column-reverse&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;blockquote&gt;
&lt;p&gt;row（默认值），主轴为水平方向，起点在左端；&lt;/p&gt;
&lt;p&gt;row-reverse：主轴为水平方向，起点在右端；&lt;/p&gt;
&lt;p&gt;column：主轴为垂直方向，起点在上沿；&lt;/p&gt;
&lt;p&gt;column-reverse：主轴为垂直方向，起点在下沿；&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;span id=&#39;wrap&#39;&gt; &lt;strong&gt;flex-wrap: 决定容器内项目是否可换行&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;figcaption data-lang=&#34;CSS&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;.container&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;flex-wrap&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; nowrap | wrap | wrap-reverse&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;blockquote&gt;
&lt;p&gt;nowrap （默认值）不换行，即当主轴尺寸固定时，当空间不足时，项目尺寸会随之调整而并不会挤到下一行；&lt;/p&gt;
&lt;p&gt;wrap：项目主轴总尺寸超出容器时换行，第一行在上方；&lt;/p&gt;
&lt;p&gt;wrap-reverse：换行，第一行在下方；&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;span id=&#39;content&#39;&gt; &lt;strong&gt;justify-content：定义了项目在主轴的对齐方式。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;figcaption data-lang=&#34;CSS&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;.container&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;justify-content&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; flex-start | flex-end | center | space-between | space-around&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;blockquote&gt;
&lt;p&gt;flex-start（默认值）左对齐；&lt;/p&gt;
&lt;p&gt;flex-end：右对齐；&lt;/p&gt;
&lt;p&gt;center：居中；&lt;/p&gt;
&lt;p&gt;space-between：两端对齐，项目之间的间隔相等，即剩余空间等分成间隙；&lt;/p&gt;
&lt;p&gt;space-around：伸缩项目会平均地分布在行里，两端保留一半的空间；&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;span id=&#39;items&#39;&gt;&lt;strong&gt;align-items: 定义了项目在交叉轴上的对齐方式&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;figcaption data-lang=&#34;CSS&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;.container&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;align-items&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; flex-start | flex-end | center | baseline | stretch&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;blockquote&gt;
&lt;p&gt;stretch（默认值） 即如果项目未设置高度或者设为 auto，将占满整个容器的高度；&lt;/p&gt;
&lt;p&gt;flex-start：交叉轴的起点对齐；&lt;/p&gt;
&lt;p&gt;flex-end：交叉轴的终点对齐；&lt;/p&gt;
&lt;p&gt;center：交叉轴的中点对齐；&lt;/p&gt;
&lt;p&gt;baseline: 项目的第一行文字的基线对齐；&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;span id=&#39;content&#39;&gt;&lt;strong&gt;align-content: 定义了多根轴线的对齐方式，如果项目只有一根轴线，那么该属性将不起作用&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;figcaption data-lang=&#34;CSS&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;.container&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;align-content&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; flex-start | flex-end | center | space-between | space-around | stretch&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;blockquote&gt;
&lt;p&gt;stretch（默认值）三条轴线平分容器的交叉方向上的空间；&lt;/p&gt;
&lt;p&gt;flex-start：轴线全部在交叉轴上的起点对齐；&lt;/p&gt;
&lt;p&gt;flex-end：轴线全部在交叉轴上的终点对齐；&lt;/p&gt;
&lt;p&gt;center：轴线全部在交叉轴上的中间对齐；&lt;/p&gt;
&lt;p&gt;space-between：轴线两端对齐，之间的间隔相等，即剩余空间等分成间隙；&lt;/p&gt;
&lt;p&gt;space-around：每个轴线两侧的间隔相等，所以轴线之间的间隔比轴线与边缘的间隔大一倍；&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;项目属性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#项目属性&#34;&gt;#&lt;/a&gt; 项目属性&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#order&#34;&gt;order&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#basis&#34;&gt;flex-basis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#grow&#34;&gt;flex-grow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#shrink&#34;&gt;flex-shrink&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#flex&#34;&gt;flex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#self&#34;&gt;align-self&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span id=&#39;order&#39;&gt;&lt;strong&gt;order: 定义项目在容器中的排列顺序，数值越小，排列越靠前，默认值为 0&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;figcaption data-lang=&#34;CSS&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;.item&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;order&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &amp;lt;integer&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;blockquote&gt;
&lt;p&gt;默认值为 0，也可以设置负数&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;span id=&#39;basis&#39;&gt;&lt;strong&gt;flex-basis: 定义了在分配多余空间之前，项目占据的主轴空间，浏览器根据这个属性，计算主轴是否有多余空间&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;figcaption data-lang=&#34;CSS&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;.item&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;flex-basis&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &amp;lt;length&gt; | auto&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;blockquote&gt;
&lt;p&gt;默认值：auto，即项目本来的大小，这时候 item 的宽高取决于 width 或 height 的值。&lt;/p&gt;
&lt;p&gt;备注：当主轴为水平方向的时候，当设置了 flex-basis，项目的宽度设置值会失效，flex-basis 需要跟 flex-grow 和 flex-shrink 配合使用才能发挥效果。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;span id=&#39;grow&#39;&gt;&lt;strong&gt;flex-grow: 定义项目的放大比例&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;figcaption data-lang=&#34;CSS&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;.item&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;flex-grow&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &amp;lt;number&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;blockquote&gt;
&lt;p&gt;默认值为 0，即如果存在剩余空间，也不放大；&lt;/p&gt;
&lt;p&gt;备注：当所有的项目都以 flex-basis 的值进行排列后，仍有剩余空间，如果所有项目的 flex-grow 属性都为 1，则它们将等分剩余空间 (如果有的话)。&lt;/p&gt;
&lt;p&gt;如果一个项目的 flex-grow 属性为 2，其他项目都为 1，则前者占据的剩余空间将比其他项多一倍。&lt;/p&gt;
&lt;p&gt;当然如果当所有项目以 flex-basis 的值排列完后发现空间不够了，且 flex-wrap：nowrap 时，此时 flex-grow 则不起作用了，这时候就需要接下来的这个属性。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;span id=&#39;shrink&#39;&gt;&lt;strong&gt;flex-shrink: 定义了项目的缩小比例&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;figcaption data-lang=&#34;CSS&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;.item&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;flex-shrink&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &amp;lt;number&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;blockquote&gt;
&lt;p&gt;默认值: 1，即如果空间不足，该项目将缩小，负值对该属性无效。&lt;/p&gt;
&lt;p&gt;如果所有项目的 flex-shrink 属性都为 1，当空间不足时，都将等比例缩小。&lt;/p&gt;
&lt;p&gt;如果一个项目的 flex-shrink 属性为 0，其他项目都为 1，则空间不足时，前者不缩小。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;span id=&#39;flex&#39;&gt;&lt;strong&gt;flex: flex-grow, flex-shrink 和 flex-basis 的简写&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;figcaption data-lang=&#34;CSS&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;.item&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;flex&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; none | [ &amp;lt;&lt;span class=&#34;token string&#34;&gt;&#39;flex-grow&#39;&lt;/span&gt;&gt; &amp;lt;&lt;span class=&#34;token string&#34;&gt;&#39;flex-shrink&#39;&lt;/span&gt;&gt;? || &amp;lt;&lt;span class=&#34;token string&#34;&gt;&#39;flex-basis&#39;&lt;/span&gt;&gt; ]&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;blockquote&gt;
&lt;p&gt;暂略&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;span id=&#39;self&#39;&gt;&lt;strong&gt;align-self: 允许单个项目有与其他项目不一样的对齐方式&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;.item &amp;#123;
     align-self: auto | flex-start | flex-end | center | baseline | stretch;
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;暂略&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8yNTMwMzQ5Mw==&#34;&gt;30 分钟学会 Flex 布局 - 知乎 (zhihu.com)&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;css动画&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#css动画&#34;&gt;#&lt;/a&gt; CSS 动画&lt;/h2&gt;
&lt;p&gt;CSS Animations 指的是元素从一种样式逐渐过渡为另一种样式的过程。&lt;/p&gt;
&lt;h3 id=&#34;渐变动画-transition&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#渐变动画-transition&#34;&gt;#&lt;/a&gt; 渐变动画  &lt;code&gt;transition&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;transition&lt;/code&gt;  的属性如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;property: 填写需要变化的 css 属性&lt;/li&gt;
&lt;li&gt;duration: 完成过渡效果需要的时间单位 (s 或者 ms)&lt;/li&gt;
&lt;li&gt;timing-function: 完成效果的速度曲线&lt;/li&gt;
&lt;li&gt;delay: 动画效果的延迟触发时间&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其中 &lt;code&gt;timing-function&lt;/code&gt;  的值有如下：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;值&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;linear&lt;/td&gt;
&lt;td&gt;匀速（等于 cubic-bezier (0,0,1,1)）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ease&lt;/td&gt;
&lt;td&gt;从慢到快再到慢（cubic-bezier (0.25,0.1,0.25,1)）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ease-in&lt;/td&gt;
&lt;td&gt;慢慢变快（等于 cubic-bezier (0.42,0,1,1)）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ease-out&lt;/td&gt;
&lt;td&gt;慢慢变慢（等于 cubic-bezier (0,0,0.58,1)）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ease-in-out&lt;/td&gt;
&lt;td&gt;先变快再到慢（等于 cubic-bezier (0.42,0,0.58,1)），渐显渐隐效果&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cubic-bezier(&lt;em&gt;n&lt;/em&gt;,&lt;em&gt;n&lt;/em&gt;,&lt;em&gt;n&lt;/em&gt;,&lt;em&gt;n&lt;/em&gt;)&lt;/td&gt;
&lt;td&gt;在 cubic-bezier 函数中定义自己的值。可能的值是 0 至 1 之间的数值&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;转变动画transform&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#转变动画transform&#34;&gt;#&lt;/a&gt; 转变动画 &lt;code&gt;transform&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;包含四个常用的功能：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;translate：位移&lt;/li&gt;
&lt;li&gt;scale：缩放&lt;/li&gt;
&lt;li&gt;rotate：旋转&lt;/li&gt;
&lt;li&gt;skew：倾斜&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一般配合 &lt;code&gt;transition&lt;/code&gt;  过度使用&lt;/p&gt;
&lt;p&gt;注意的是， &lt;code&gt;transform&lt;/code&gt;  不支持 &lt;code&gt;inline&lt;/code&gt;  元素，使用前把它变成 &lt;code&gt;block&lt;/code&gt; ;&lt;/p&gt;
&lt;h3 id=&#34;自定义动画-animation&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#自定义动画-animation&#34;&gt;#&lt;/a&gt; 自定义动画  &lt;code&gt;animation&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;animation&lt;/code&gt;  是由 8 个属性的简写，分别如下：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;属性&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;th&gt;属性值&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;animation-duration&lt;/td&gt;
&lt;td&gt;指定动画完成一个周期所需要时间，单位秒（s）或毫秒（ms），默认是 0&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;animation-timing-function&lt;/td&gt;
&lt;td&gt;指定动画计时函数，即动画的速度曲线，默认是 &amp;quot;ease&amp;quot;&lt;/td&gt;
&lt;td&gt;linear、ease、ease-in、ease-out、ease-in-out&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;animation-delay&lt;/td&gt;
&lt;td&gt;指定动画延迟时间，即动画何时开始，默认是 0&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;animation-iteration-count&lt;/td&gt;
&lt;td&gt;指定动画播放的次数，默认是 1&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;animation-direction 指定动画播放的方向&lt;/td&gt;
&lt;td&gt;默认是 normal&lt;/td&gt;
&lt;td&gt;normal、reverse、alternate、alternate-reverse&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;animation-fill-mode&lt;/td&gt;
&lt;td&gt;指定动画填充模式。默认是 none&lt;/td&gt;
&lt;td&gt;forwards、backwards、both&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;animation-play-state&lt;/td&gt;
&lt;td&gt;指定动画播放状态，正在运行或暂停。默认是 running&lt;/td&gt;
&lt;td&gt;running、pauser&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;animation-name&lt;/td&gt;
&lt;td&gt;指定 @keyframes 动画的名称&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;问题与解决方案&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#问题与解决方案&#34;&gt;#&lt;/a&gt; 问题与解决方案&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;为什么 CSS 样式一般放在 head 中？&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i.loli.net/2021/11/09/5R4zWBr6vdHNFfU.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;overflow&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;属性选择器&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://nc3021.github.io/2021/11/25/hybrid-learning/Git/</guid>
            <title>Git使用说明</title>
            <link>https://nc3021.github.io/2021/11/25/hybrid-learning/Git/</link>
            <category term="杂学" scheme="https://nc3021.github.io/categories/hybrid-learning/" />
            <category term="Git" scheme="https://nc3021.github.io/tags/Git/" />
            <category term="分布式文件管理" scheme="https://nc3021.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/" />
            <pubDate>Thu, 25 Nov 2021 21:36:15 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;git使用说明&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#git使用说明&#34;&gt;#&lt;/a&gt; Git 使用说明&lt;/h1&gt;
&lt;h2 id=&#34;git-本地命令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#git-本地命令&#34;&gt;#&lt;/a&gt; Git 本地命令&lt;/h2&gt;
&lt;h3 id=&#34;创建版本库&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#创建版本库&#34;&gt;#&lt;/a&gt; 创建版本库&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;先创建空文件夹（路径上没有中文）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在该文件夹上用  &lt;code&gt;git bash&lt;/code&gt;  打开&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;$ git init
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211120201247.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;将文件添加到版本库&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#将文件添加到版本库&#34;&gt;#&lt;/a&gt; 将文件添加到版本库&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;figure class=&#34;highlight git&#34;&gt;&lt;figcaption data-lang=&#34;git&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token command&#34;&gt;$ git add xxx.txt&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token command&#34;&gt;$ git add&lt;span class=&#34;token parameter&#34;&gt; -A&lt;/span&gt;    //添加所有文件&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;可以重复多次使用添加多个文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;figure class=&#34;highlight git&#34;&gt;&lt;figcaption data-lang=&#34;git&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token command&#34;&gt;$ git commit&lt;span class=&#34;token parameter&#34;&gt; -m&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;本次提交内容的说明&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;将添加的所有文件提交到仓库&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;查看仓库当前状态&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#查看仓库当前状态&#34;&gt;#&lt;/a&gt; 查看仓库当前状态&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$ git status
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;随时可以掌握工作区状态&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211120202408.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git diff
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可以查看文件被修改前后的内容&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211120202606.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;版本回退&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#版本回退&#34;&gt;#&lt;/a&gt; 版本回退&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$ git reset --hard commit_id //退回某个版本
$ git reset --hard HEAD^ //退回上一个版本
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;$ git log  
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可以查看提交历史，方便回退到过去的哪个版本；&lt;/p&gt;
&lt;p&gt;查看结束后按 &lt;code&gt;q&lt;/code&gt;  退出；&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211120204012.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git reflog
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可以查看命令历史，方便确定回到未来的哪个版本；&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211120203952.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;撤销修改&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#撤销修改&#34;&gt;#&lt;/a&gt; 撤销修改&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$ git checkout -- &amp;lt;file&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;让这个文件回退到最近一次 &lt;code&gt;git commit&lt;/code&gt;  或 &lt;code&gt;git add&lt;/code&gt;  时的状态（即撤销在工作区的修改内容，即使文件被删除了也可以恢复）&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$git reset HEAD &amp;lt;file&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;清除暂存区的提交内容&lt;/p&gt;
&lt;h3 id=&#34;删除文件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#删除文件&#34;&gt;#&lt;/a&gt; 删除文件&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$ git rm &amp;lt;file&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;git-远程仓库&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#git-远程仓库&#34;&gt;#&lt;/a&gt; Git 远程仓库&lt;/h2&gt;
&lt;h3 id=&#34;关联远程仓库&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#关联远程仓库&#34;&gt;#&lt;/a&gt; 关联远程仓库&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$ git remote add xxx（远程仓库的本地名）git@xxx.com(仓库官网地址):xx（用户名）/xxxx(文件夹名).git
$ git remote add origin git@gitee.com:mzcy3021213/image.git
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;将 &lt;code&gt;remote&lt;/code&gt;  改为 &lt;code&gt;clone&lt;/code&gt;  即可克隆远程库生成一个本地库；&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git remote rm &amp;lt;远程仓库的本地名&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;取消关联远程仓库&lt;/p&gt;
&lt;h3 id=&#34;关联远程的其它分支&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#关联远程的其它分支&#34;&gt;#&lt;/a&gt; 关联远程的其它分支&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$ git branch --set-upstream-to=origin/&amp;lt;分支&amp;gt; &amp;lt;分支&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;拉取&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#拉取&#34;&gt;#&lt;/a&gt; 拉取&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$ git pull
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;推送&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#推送&#34;&gt;#&lt;/a&gt; 推送&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$ git push -u origin master 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;加上了 &lt;code&gt;-u&lt;/code&gt;  参数，Git 不但会把本地的 &lt;code&gt;master&lt;/code&gt;  分支内容推送的远程新的 &lt;code&gt;master&lt;/code&gt;  分支，还会把本地的 &lt;code&gt;master&lt;/code&gt;  分支和远程的 &lt;code&gt;master&lt;/code&gt;  分支关联起来，在以后的推送或者拉取时就可以简化命令；&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git push origin dev
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;推送到远程的 dev 分支；&lt;/p&gt;
&lt;h3 id=&#34;多人协作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#多人协作&#34;&gt;#&lt;/a&gt; 多人协作&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211123155748.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;分支管理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#分支管理&#34;&gt;#&lt;/a&gt; 分支管理&lt;/h2&gt;
&lt;h3 id=&#34;创建并切换分支&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#创建并切换分支&#34;&gt;#&lt;/a&gt; 创建并切换分支&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$ git branch &amp;lt;分支名&amp;gt;       //创建分支
$ git checkout &amp;lt;分支名&amp;gt;     
$ git switch &amp;lt;分支名&amp;gt;       //切换分支

$ git checkout -b &amp;lt;分支名&amp;gt;  
$ git switch -c &amp;lt;分支名&amp;gt;    //创建并切换分支
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;$ git branch                //查看当前分支
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211123145722.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git branch&lt;/code&gt;  命令会列出所有分支，当前分支前面会标一个 &lt;code&gt;*&lt;/code&gt;  号；&lt;/p&gt;
&lt;h3 id=&#34;合并分支&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#合并分支&#34;&gt;#&lt;/a&gt; 合并分支&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$ git merge &amp;lt;分支名&amp;gt;              
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;git merge&lt;/code&gt;  命令用于合并指定分支到当前分支&lt;/p&gt;
&lt;h3 id=&#34;删除分支&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#删除分支&#34;&gt;#&lt;/a&gt; 删除分支&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$ git branch -d &amp;lt;分支名&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;储藏分支&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#储藏分支&#34;&gt;#&lt;/a&gt; 储藏分支&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$ git stash                   
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;存储还未完成的分支；&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git stash list
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;查看存储的分支；&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git stash apply          
$ git stash pop
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;恢复分支：一种是用 &lt;code&gt;git stash apply&lt;/code&gt;  恢复，但是恢复后，stash 内容并不删除，你需要用 &lt;code&gt;git stash drop&lt;/code&gt;  来删除；&lt;/p&gt;
&lt;p&gt;另一种方式是用 &lt;code&gt;git stash pop&lt;/code&gt; ，恢复的同时把 stash 内容也删了；&lt;/p&gt;
&lt;h3 id=&#34;修复分支&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#修复分支&#34;&gt;#&lt;/a&gt; 修复分支&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$ git cherry-pick &amp;lt;提交的编号&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;将对其它分支修改的提交移植到本分支上；&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://aladdinli.oss-cn-chengdu.aliyuncs.com/img/20211123155844.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;分支标签&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#分支标签&#34;&gt;#&lt;/a&gt; 分支标签&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$ git tag &amp;lt;标签名&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;对当前分支创建标签&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git tag 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;查询所有标签&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git tag &amp;lt;标签名&amp;gt; &amp;lt;提交编号&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;对历史提交打上标签&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git tag -d &amp;lt;标签名&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;删除标签&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
